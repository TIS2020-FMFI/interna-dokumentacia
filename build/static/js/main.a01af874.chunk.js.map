{"version":3,"sources":["components/Others/CustomAlert.jsx","components/Forms/LoginForm.jsx","helpers/data.js","helpers/functions.js","components/Pages/LoginPage.jsx","helpers/wording.js","components/Others/Navigation.jsx","components/Tables/EmptyTable.jsx","components/Tables/MyBootstrapTable.jsx","components/Others/Formatter.jsx","components/Buttons/TableBtns.jsx","components/Buttons/EditBtn.jsx","components/Buttons/SendBtn.jsx","components/Others/FetchComponents.jsx","helpers/useDataApi.js","components/Modals/ConfirmModal.jsx","components/Pages/RecordsToSignPage.jsx","components/Tables/columns.js","components/Tables/SignedDocuments.jsx","components/Tables/SignedTrainings.jsx","components/Pages/SignedRecordsPage.jsx","components/Forms/MyHookForm.jsx","components/Forms/CombinationForm.jsx","components/Modals/CombinationModal.jsx","components/Tables/Combinations.jsx","components/Forms/DocumentForm.jsx","components/Forms/TrainingForm.jsx","components/Pages/AddRecordPage.jsx","components/Others/Filter.jsx","components/Modals/EditRecordModal.jsx","components/Buttons/ReportBtn.jsx","components/Tables/FoundRecords.jsx","components/Buttons/ToggleBtn.jsx","components/Others/SkillMatrixComponents.jsx","components/Tables/SkillMatrix.jsx","components/Pages/FinderPage.jsx","components/Pages/SettingsPage.jsx","components/Pages/LogoutPage.jsx","helpers/IdleTimer.js","components/Pages/SavedRecordsPage.jsx","components/Pages/Page404.jsx","App.js","config/config.js","index.js"],"names":["CustomAlert","notification","Alert","variant","body","LoginForm","onSubmit","language","setLanguage","useForm","register","handleSubmit","active","id","Container","className","Form","align","ButtonGroup","onClick","e","target","Button","Group","Label","Control","name","placeholder","ref","required","type","employees","job","complete","sm_data","deadline","Date","anet_id","state","comboFields","types","types2","value","label","records","buttonColumn","field","text","dataField","headerStyle","width","recordType","record","Object","keys","includes","require_superior","rec","nonExpandableDocs","documents","map","doc","orderBy","order","getUser","JSON","parse","sessionStorage","getItem","removeUser","removeItem","isAdmin","role","goodMsg","badMsg","successResponse","response","status","getFormID","form","setOf","array","set","forEach","arr","find","res","push","isValidCombination","combination","length","prepareCombinations","combs","c","getFieldName","combinations","getDateObject","date","Time","Valid","getDateString","substr","resolveCombinations","flatField","stringify","join","b","branches","cities","departments","division","LoginPage","useSessionStorage","useState","setNotification","cardInput","t","cardInputTimeout","setTimeout","checkInput","findByCard","clearTimeout","event","engInput","String","fromCharCode","keyCode","toLowerCase","isLetter","isNumber","isValuable","useEffect","document","addEventListener","removeEventListener","setUser","data","user","setItem","window","location","reload","input","fetch","method","URLSearchParams","then","json","catch","to","email","password","wording","loginPage","header","submit","wrongLogin","wrongCard","navigation","login","recordsToSign","signedRecords","addRecord","savedRecords","finder","settings","logout","Navigation","admin","x","sk","en","LoginNav","NavLink","href","LogoutNav","Navbar","expand","bg","Brand","alt","src","height","Toggle","Collapse","Nav","activeKey","useLocation","pathname","EmptyTable","MyBootstrapTable","title","columns","expandRow","classes","TableHeader","style","borderRadius","textAlign","border","margin","padding","marginTop","keyField","hover","noDataIndication","defaultSorted","FullName","_","row","employee","first_name","last_name","formatted","split","reverse","FormattedDate","FormattedDeadline","FormattedRelease","release_date","FormattedSuperiorDate","s_date","FormattedTrainingDate","signatures","FormattedEmployeeDate","e_date","NameWithLink","DocumentLabel","ExclamationName","color","marginBottom","expired","now","FormattedEmployee","fontSize","MissedBtn","cell","index","setModalInfo","setShowModal","asSuperior","console","log","size","SignedBtn","EditBtn","setFormData","SendBtn","setSavedRec","updateSavedRec","prev","filter","FetchLoading","Spinner","animation","FetchError","useDataApi","url","setData","error","setError","isLoaded","setIsLoaded","ConfirmModal","showModal","modalInfo","handleAccept","closeModal","Modal","show","onHide","centered","Header","closeButton","Title","Body","Footer","RecordsToSignPage","URL","trainings","setTrainings","setDocuments","online_trainings","message","fetchSign","signAsEmployee","sign_id","record_type","updateTrainings","updateEmployeeDocs","signAsSuperior","signature_id","updateSuperiorDocs","d","update","s","trn_columns","sort","formatter","formatExtraData","trainingsToSignColumns","doc_columns","documentsToSignColumns","expandColumns","documentsToSignExpandColumns","onlyOneExpanding","nonExpandable","renderer","SignedDocuments","SignedTrainings","SignedRecordsPage","MyHookForm","as","Row","column","sm","Col","CombinationForm","prefill","cc","setCombination","combi","select","setSelect","toggle","setToggle","branches","setbranches","divisions","setDivisions","departments","setdepartments","cities","setCities","commitChanges","undefined","updateDropBox","updateField","values","getSetOf","setbranches","setDivision","setdepartments","setcities","selector","options","defaultValue","isMulti","onChange","handleSelect","CombinationModal","setAssignedTo","setEmptyAssign","setEmployees","removedEmployees","resolveEmployees","add","prevState","uuid","assignedTo","mode","Combinations","setPrefill","openModal","editCombination","deleteCombination","AddIcon","getLabels","f","wrapperClasses","rowClasses","DocumentForm","setRecords","formData","actual","defaultValues","action","setAction","selectedType","setSelectedType","currentID","setCurrentID","setCombinations","emptyAssign","assign","assigned_to","idx","i","getCombinationsNames","upsert","upsertConfirm","filterSavedRec","p","findIndex","correctDocumentFormData","r","validate","v","hidden","Check","inline","valueAsNumber","TrainingForm","attendees","setAttendees","emptyAttendees","setEmptyAttendees","unreleased_id_employees","a","getEmployeesNames","correctTrainingFormData","labelKey","multiple","attendee","selected","AddRecordPage","formType","setFormType","Filter","showSM","setShowSM","cs","found","handleSearch","setFilter","disabled","EditRecordModal","props","ReportBtn","FoundRecords","setFound","b_id","c_id","de_id","di_id","ToggleBtn","rowIndex","mark","unMarkState","styledBtn","backgroundColor","getColor","getTextColor","borderColor","borderWidth","stt","new_employees","new_data","l","RowButtons","showLegend","setShowLegend","handleClick","Legend","Badge","textColor","background","fontWeight","Card","Subtitle","Text","SkillMatrix","counter","headerFormatter","headerTitle","col","loadColumns","changedState","replace","sing","resetSign","updateState","handleExport","FinderPage","showSkillMatrix","setShowSkillMatrix","setCs","setE","result","prepareFoundRec","SettingsPage","submitError","cardsFile","setCards","employeesFile","cardsError","setCardsError","employeesError","setEmployeesError","showDeleted","setShowDeleted","OK","sessionDel","getElementById","checked","renderDivs","option","Option","renderError","msg","renderOk","clearErrors","isError","what","isOk","crossOrigin","menu","createMenu","files","FormData","divId","append","ok","alert","File","htmlFor","LogoutPage","IdleTimer","timeout","onTimeout","this","eventHandler","updateExpiredTime","bind","tracker","startInterval","interval","setInterval","parseInt","localStorage","cleanUp","timeoutTracker","clearInterval","SavedRecordsPage","doc_data","trn_data","isLoaded2","error2","savedTrainingsColumns","savedDocumentsColumns","Page404","App","timer","Private","Component","component","rest","render","exact","path","ReactDOM"],"mappings":"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","file":"static/js/main.a01af874.chunk.js","sourcesContent":["import Alert from \"react-bootstrap/Alert\";\r\n\r\nexport const CustomAlert = ({notification}) => {\r\n\r\n  // maybe ?\r\n  // const [visible, setVisible] = useState(true);\r\n  // useEffect(() => {\r\n  //   setVisible(true);\r\n  //   setTimeout(() => {\r\n  //     setVisible(false);\r\n  //   }, 5*1000);\r\n  // }, [notification]);\r\n\r\n  if (!notification) {\r\n    return null\r\n  }\r\n\r\n  return <Alert variant={notification.variant}>{notification.body}</Alert>\r\n}","import React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {Button, ButtonGroup, Form, Container} from \"react-bootstrap\";\r\nimport {CustomAlert} from \"../Others/CustomAlert\";\r\n\r\nconst LoginForm = ({onSubmit, language, setLanguage, notification}) => {\r\n\r\n  const {register, handleSubmit} = useForm();\r\n\r\n  const active = id => language === id && 'active'\r\n  const changeLanguage = e => setLanguage(e.target.id)\r\n\r\n  return (\r\n    <Container className=\"login-container\">\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        {/* HEADER */}\r\n        <h3 align=\"center\">Login</h3>\r\n        {/* LANGUAGE BTN */}\r\n        <ButtonGroup onClick={changeLanguage} className=\"container-fluid p-0 mt-3 mb-3 btn-group\">\r\n          <Button id=\"sk\" className={active(\"sk\")}>Slovak</Button>\r\n          <Button id=\"cz\" className={active(\"cz\")}>Czech</Button>\r\n          <Button id=\"en\" className={active(\"en\")}>English</Button>\r\n          <Button id=\"hu\" className={active(\"hu\")}>Hungary</Button>\r\n        </ButtonGroup>\r\n        {/* NAME */}\r\n        <Form.Group>\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            name=\"email\"\r\n            placeholder=\"Enter email\"\r\n            ref={register}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        {/* PASS */}\r\n        <Form.Group>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            ref={register}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        {/* ALERT */}\r\n        {notification && <CustomAlert notification={notification}/>}\r\n        {/* SUBMIT BTN */}\r\n        <Button type=\"submit\" variant=\"dark\" className=\"btn-block\">Login</Button>\r\n      </Form>\r\n    </Container>\r\n  )\r\n};\r\n\r\nexport default LoginForm;","\r\n/**\r\n * toto som čisto len testovacie dáta, náhradou za databázu\r\n */\r\n\r\nexport const employees = [{\r\n  id: '1',\r\n  name: 'Janko',\r\n  job: 'Job1',\r\n  complete: '70%'\r\n}, {\r\n  id: '2',\r\n  name: 'Julka',\r\n  job: 'Job2',\r\n  complete: '100%'\r\n}, {\r\n  id: '3',\r\n  name: 'Jaroslav',\r\n  job: 'Job3',\r\n  complete: '44%'\r\n}, {\r\n  id: '4',\r\n  name: 'Jozef',\r\n  job: 'Job4',\r\n  complete: '53%'\r\n}, {\r\n  id: '5',\r\n  name: 'Juraj',\r\n  job: 'Job5',\r\n  complete: '83%'\r\n}, {\r\n  id: '6',\r\n  name: 'Janka',\r\n  job: 'Job6',\r\n  complete: '22%'\r\n}];\r\n\r\nconst date = {\r\n  Time: \"2021-02-15T00:00:00Z\",\r\n  Valid: true\r\n}\r\n\r\nexport const doc_form = {\r\n  id: \"\",\r\n  type: \"type0\",\r\n  name: \"xxx\",\r\n  link: \"linka\",\r\n  order_number: 1,\r\n  note: \"noteska\",\r\n  release_date: date,\r\n  deadline: date,\r\n  version: \"1\",\r\n  assigned_to: \"1; 2; 2; 2\",\r\n  require_superior: true\r\n}\r\n\r\nexport const trn_form = {\r\n  name: \"name_46\",\r\n  agency: \"Agency name_18\",\r\n  agenda: \"Agenda Agenda Agenda\",\r\n  lector: \"Simona\",\r\n  place: \"Trnava\",\r\n  duration: 30,\r\n  date: date,\r\n  deadline: date,\r\n  employees: '1,2'\r\n}\r\n\r\nexport const pobocky = [\"prva\", \"druha\", \"tretia\"]\r\n\r\nexport const sm_data = [\r\n  {\r\n  id: 1,\r\n  name: 'Document1',\r\n  type: 'A',\r\n  deadline: new Date(\"2021/3/16\"),\r\n  employees: [{\r\n    anet_id: '1',\r\n    state: '_'\r\n  }, {\r\n    anet_id: '2',\r\n      state: '_'\r\n  }, {\r\n    anet_id: '3',\r\n      state: '_'\r\n  }, {\r\n    anet_id: '4',\r\n      state: '_'\r\n  }, {\r\n    anet_id: '5',\r\n      state: '_'\r\n  }, {\r\n    anet_id: '6',\r\n      state: '_'\r\n  }]\r\n}, {\r\n  id: 2,\r\n  name: 'Document2',\r\n  type: 'B',\r\n  deadline: new Date(\"2021/1/16\"),\r\n  employees: [{\r\n    anet_id: '1',\r\n    state: '-'\r\n  }, {\r\n    anet_id: '2',\r\n    state: ''\r\n  }, {\r\n    anet_id: '3',\r\n    state: ''\r\n  }, {\r\n    anet_id: '4',\r\n    state: 's'\r\n  }, {\r\n    anet_id: '5',\r\n    state: '-'\r\n  }, {\r\n    anet_id: '6',\r\n    state: 'es'\r\n  }]\r\n}, {\r\n  id: 3,\r\n  name: 'Document3',\r\n  type: 'B',\r\n  deadline: new Date(\"2021/1/16\"),\r\n  employees: [{\r\n    anet_id: '1',\r\n    state: ''\r\n  }, {\r\n    anet_id: '2',\r\n    state: 's'\r\n  }, {\r\n    anet_id: '3',\r\n    state: 'es'\r\n  }, {\r\n    anet_id: '4',\r\n    state: 's'\r\n  }, {\r\n    anet_id: '5',\r\n    state: 'es'\r\n  }, {\r\n    anet_id: '6',\r\n    state: ''\r\n  }]\r\n}\r\n];\r\n\r\nexport const combinations = [\r\n  {\r\n  branches: { value: 'A1', label: 'A1' },\r\n  division: { value: 'D1', label: 'D1' },\r\n  departments: { value: 'De1', label: 'De1' },\r\n  cities: { value: 'C1', label: 'C1' },\r\n},{\r\n  branches: { value: 'A1', label: 'A1' },\r\n  division: { value: 'D1', label: 'D1' },\r\n  departments: { value: 'De2', label: 'De2' },\r\n  cities: { value: 'C2', label: 'C2'},\r\n},{\r\n    branches: { value: 'A1', label: 'A1' },\r\n    division: { value: 'D1', label: 'D1' },\r\n    departments: { value: 'De3', label: 'De3' },\r\n    cities: { value: 'C2', label: 'C2'},\r\n  },{\r\n    branches: { value: 'A1', label: 'A1' },\r\n    division: { value: 'D2', label: 'D2' },\r\n    departments: { value: 'De4', label: 'De4' },\r\n    cities: { value: 'C2', label: 'C2'},\r\n  },{\r\n  branches: { value: 'B2', label: 'B2' },\r\n  division: { value: 'D2', label: 'D2' },\r\n  departments: { value: 'De2', label: 'De2' },\r\n  cities: { value: 'C3', label: 'C3' },\r\n},{\r\n  branches: { value: 'B1', label: 'B1' },\r\n  division: { value: 'D13', label: 'D13' },\r\n  departments: { value: 'B2', label: 'B2' },\r\n  cities: { value: 'C1', label: 'C1' },\r\n},{\r\n  branches: { value: 'B1', label: 'B1' },\r\n  division: { value: 'B2', label: 'B2' },\r\n  departments: { value: 'De4', label: 'De4' },\r\n  cities: { value: 'C1', label: 'C1' }\r\n}\r\n];\r\n\r\nexport const comboFields = ['cities', 'branches', 'departments', 'division']\r\n\r\nexport const types = ['type0', 'type1', 'type2'];\r\nexport const types2 = [\r\n  { value: 'type0', label: 'type0' },\r\n  { value: 'type1', label: 'type1' },\r\n  { value: 'type2', label: 'type2' }\r\n]\r\n\r\nexport const records = [\r\n  { value: 'documents', label: 'documents' },\r\n  { value: 'document-training', label: 'document-training' },\r\n  { value: 'online-training', label: 'online-training' }\r\n]\r\n\r\n\r\n","import React from \"react\";\r\nimport uuid from \"react-uuid\";\r\nimport {comboFields} from \"./data\";\r\n\r\n// Tables\r\nexport const buttonColumn = (field='',text='') => {\r\n  return {\r\n    dataField: field,\r\n    text: text,\r\n    headerStyle: { width: '1%' }\r\n  }\r\n}\r\n\r\nexport const recordType = (record) => {\r\n  return Object.keys(record).includes('link')\r\n    ? \"document\"\r\n    : \"training\"\r\n}\r\n\r\nexport const require_superior = rec => rec.require_superior === true\r\n\r\nexport const nonExpandableDocs = (documents) => {\r\n  return documents.map(doc => {\r\n      if (!require_superior(doc)) return doc.id\r\n    }\r\n  )\r\n}\r\n\r\nexport const orderBy = (field, order='asc') => {\r\n  return [{ dataField: field, order: order }]\r\n}\r\n\r\n\r\n// Authentication\r\nexport const setUser = (user) => sessionStorage.setItem('user', JSON.stringify(user))\r\nexport const getUser = () => JSON.parse(sessionStorage.getItem('user'))\r\nexport const removeUser = () => sessionStorage.removeItem('user')\r\nexport const isAdmin = () => getUser() !== null && getUser().role === 'admin'\r\n\r\n\r\n// Helpers\r\nexport const goodMsg = (body) => {\r\n  return { variant: 'success',  body: body }\r\n}\r\n\r\nexport const badMsg = (body) => {\r\n  return { variant: 'danger', body: body }\r\n}\r\n\r\nexport const successResponse = (response) => {\r\n  return 200 <= response.status && response.status <= 299\r\n}\r\n\r\nexport const getLanguage = () => JSON.parse(sessionStorage.getItem('language'))\r\nexport const delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\n\r\n// Add record forms\r\nexport const getFormID = form => form ? form.id : 0\r\n\r\nexport const getSelectOptions = (field) => {\r\n  return <>\r\n    <option hidden value=\"\">Select option ...</option>\r\n    { field.map(value => <option value={value} key={uuid()}>{value}</option>) }\r\n  </>\r\n}\r\n\r\nexport const setOf = (array) => {\r\n  const set = []\r\n  array.forEach(arr => {\r\n    if (!set.find(res => res.value === arr.value)) set.push(arr)\r\n  })\r\n  return set // array of unique objects by their .value\r\n}\r\n\r\n// at least one field is not empty\r\nexport const isValidCombination = combination => {\r\n  return comboFields.find(field => combination[field].length)\r\n}\r\n\r\nexport const prepareCombinations = (combs) => {\r\n  return combs.map(c => {\r\n    const combination = {}\r\n    comboFields.forEach(field => {\r\n      combination[field] = {\r\n        value: c[`${field}_id`],\r\n        label: c[`${field}_name`]\r\n      }\r\n    })\r\n    return combination\r\n  })\r\n}\r\n\r\nexport const prepareEmployees = (employees) => {\r\n  return employees.map(e => {\r\n    return {\r\n      value: e.id,\r\n      label: `${e.first_name} ${e.last_name}, [${e.id}]`\r\n    }\r\n  })\r\n}\r\n\r\nexport const getCombinationsNames = (formData, combinations) => {\r\n  if (!formData) return []\r\n  return formData.assigned_to\r\n    .split('&')\r\n    .map(e => {\r\n      const idx = e.split('; ')\r\n      const combination = { id: uuid() }\r\n      comboFields.forEach((field, i) => {\r\n        combination[field] = [{\r\n          value: idx[i],\r\n          label: getFieldName(field, idx[i], combinations)\r\n        }]\r\n      })\r\n      return combination\r\n  })\r\n}\r\n\r\nexport const getFieldName = (field, id, combinations) => {\r\n  return combinations.find(c => `${c[field].value}` === id)[field].label\r\n}\r\n\r\nexport const getEmployeesNames = (formData, employees) => {\r\n  if (!formData) return []\r\n  return formData.unreleased_id_employees.split(',')\r\n    .map(a => employees.find(e => e.id == a))\r\n}\r\n\r\nexport const prefillDocumentForm = (data) => {\r\n  if (!data) return {}\r\n  return {\r\n    ...data,\r\n    release_date: getDateString(data.release_date),\r\n    deadline: getDateString(data.deadline),\r\n  }\r\n}\r\n\r\nexport const prefillTrainingForm = (data) => {\r\n  if (!data) return {}\r\n  return {\r\n    ...data,\r\n    date: getDateString(data.date),\r\n    deadline: getDateString(data.deadline),\r\n  }\r\n}\r\n\r\nexport const correctTrainingFormData = (data, attendees) => {\r\n  return {\r\n    ...data,\r\n    date: getDateObject(data.date),\r\n    deadline: getDateObject(data.deadline),\r\n    unreleased_id_employees: attendees.map(a => a.id).join(',')\r\n  }\r\n}\r\n\r\nexport const correctDocumentFormData = (data, combinations) => {\r\n  return {\r\n    ...data,\r\n    release_date: getDateObject(data.release_date),\r\n    deadline: getDateObject(data.deadline),\r\n    assigned_to: resolveCombinations(combinations)\r\n  }\r\n}\r\n\r\nconst getDateObject = (date) => {\r\n  return {\r\n    Time: date + 'T00:00:00Z',\r\n    Valid: true\r\n  }\r\n}\r\n\r\nconst getDateString = (date) => date.Time.substr(0, 10)\r\n\r\nexport const resolveCombinations = (combinations) => {\r\n  let combs = combinations\r\n  comboFields.forEach(field => {\r\n    combs = flatField(field, combs)\r\n  })\r\n  return stringify(combs).join('&')\r\n}\r\n\r\nconst flatField = (field, combs) => {\r\n  const res = []\r\n  combs.forEach(c => {\r\n    if (!c[field].length)\r\n      res.push(c)\r\n    else\r\n      c[field].forEach(b => {\r\n        res.push({\r\n          ...c,\r\n          [field]: [b]\r\n        })\r\n      })\r\n  })\r\n  return res\r\n}\r\n\r\nconst id = field => field.length ? field[0].value : 'x'\r\n\r\nconst stringify = (combs) => {\r\n  return combs.map(c => `${id(c.branches)}; ${id(c.cities)}; ${id(c.departments)}; ${id(c.division)}`)\r\n}\r\n\r\n\r\n// fetch\r\nexport const myFetch = (url) => {\r\n  return fetch(url, {\r\n    mode: 'no-cors',\r\n    method: \"GET\"\r\n  }).then(result => result.json())\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Redirect} from \"react-router\";\r\nimport useSessionStorage from \"@rooks/use-sessionstorage\";\r\nimport LoginForm from \"../Forms/LoginForm\";\r\nimport {badMsg, getUser} from \"../../helpers/functions\";\r\n\r\nconst LoginPage = () => {\r\n\r\n  const [language, setLanguage] = useSessionStorage(\"language\", \"sk\");\r\n  const [notification, setNotification] = useState();\r\n\r\n  let cardInput = '';\r\n  const maxCardInputTimeDifference = 40;\r\n  const cardInputLength = 10;\r\n  let t = cardInputTimeout();\r\n  clearTimeout(t);\r\n\r\n  function cardInputTimeout() {\r\n    return setTimeout(checkInput, maxCardInputTimeDifference);\r\n  }\r\n\r\n  function isLetter(e) {\r\n    let aKeycode = 65;\r\n    let zKeycode = 90;\r\n\r\n    return e.keyCode >= aKeycode && e.keyCode <= zKeycode\r\n  }\r\n\r\n  function isNumber(e) {\r\n    let zeroKeycode = 48;\r\n    let nineKeycode = 57;\r\n\r\n    return e.keyCode >= zeroKeycode && e.keyCode <= nineKeycode\r\n  }\r\n\r\n  function isValuable(e) {\r\n    return isLetter(e) || isNumber(e)\r\n  }\r\n\r\n  function resetCardInput() {\r\n    cardInput = '';\r\n  }\r\n\r\n  function checkInput() {\r\n    if(cardInput.length === cardInputLength) {\r\n      findByCard(cardInput);\r\n    }\r\n    resetCardInput();\r\n  }\r\n\r\n  const event = (e) => {\r\n    let engInput = String.fromCharCode(e.keyCode).toLowerCase()\r\n    if(isValuable(e)) {\r\n      cardInput += engInput;\r\n      clearTimeout(t);\r\n      t = cardInputTimeout();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', event)\r\n    return () => document.removeEventListener(\"keydown\", event); // cleanup\r\n  })\r\n\r\n  const setUser = (data) => {\r\n    const user = {\r\n      id: data.id,\r\n      role: data.role\r\n    }\r\n    sessionStorage.setItem('user', JSON.stringify(user))\r\n    window.location.reload(false) // reloadPage\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    fetch('/auth/login', {\r\n      method: \"POST\",\r\n      body: new URLSearchParams(`email=${data.email}&password=${data.password}`)\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => { setUser(data) })\r\n      .catch(() => setNotification(badMsg(\"Wrong login input\")))\r\n  }\r\n\r\n  const findByCard = (input) => {\r\n    fetch('/auth/kiosk', {\r\n      method: \"POST\",\r\n      body: new URLSearchParams(`card=${input}`)\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => { setUser(data) })\r\n      .catch(() => setNotification(badMsg(\"Wrong card input\")))\r\n  }\r\n\r\n  if (getUser() !== null)\r\n    return <Redirect to=\"/records-to-sign\"/>\r\n\r\n  return (\r\n    <LoginForm\r\n      onSubmit={onSubmit}\r\n      language={language}\r\n      setLanguage={setLanguage}\r\n      notification={notification}\r\n    />\r\n  )\r\n};\r\n\r\nexport default LoginPage\r\n","export const wording = {\r\n  'sk': {\r\n    loginPage: {\r\n      header: 'Prihlasovanie',\r\n      email: 'Email',\r\n      password: 'Heslo',\r\n      submit: 'Prihlasit sa',\r\n      notification: {\r\n        wrongLogin: 'Zle prihlasovacie udaje',\r\n        wrongCard: 'Nepodarilo sa prihlasenie kartou'\r\n      }\r\n    },\r\n    navigation: {\r\n      login: 'Prihlasit sa',\r\n      recordsToSign: 'Na podpisanie',\r\n      signedRecords: 'Podpisané',\r\n      addRecord: 'Pridať',\r\n      savedRecords: 'Uložené',\r\n      finder: 'Vyhľadávanie',\r\n      settings: 'Nastavenia',\r\n      logout: 'Odhlásiť sa',\r\n    }\r\n  },\r\n  'en': {\r\n    loginPage: {\r\n      header: 'Login',\r\n      email: 'Email',\r\n      password: 'Password',\r\n      submit: 'Login',\r\n      notification: {\r\n        wrongLogin: 'Wrong login input',\r\n        wrongCard: 'Wrong card input'\r\n      }\r\n    },\r\n    navigation: {\r\n      login: 'Login',\r\n      recordsToSign: 'Records to sign',\r\n      signedRecords: 'Signed records',\r\n      addRecord: 'Add record',\r\n      savedRecords: 'Saved records',\r\n      finder: 'Finder',\r\n      settings: 'Settings',\r\n      logout: 'Logout',\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Navbar, Nav, NavLink} from 'react-bootstrap';\r\nimport {getLanguage, getUser, isAdmin} from \"../../helpers/functions\";\r\nimport {wording} from \"../../helpers/wording\";\r\nimport {useLocation} from \"react-router\";\r\n\r\nconst Navigation = () => {\r\n\r\n  const user = getUser();\r\n  const admin = isAdmin();\r\n\r\n  const language = getLanguage()\r\n  let x = language === 'sk' ? wording.sk : wording.en // TODO languages !!!\r\n  x = x.navigation\r\n\r\n  const LoginNav = () => {\r\n    return (\r\n      <>\r\n        <NavLink href=\"/records-to-sign\">{x.recordsToSign}</NavLink>\r\n        <NavLink href=\"/signed-records\">{x.signedRecords}</NavLink>\r\n        {admin &&\r\n          <>\r\n          <NavLink href=\"/add-record\">{x.addRecord}</NavLink>\r\n          <NavLink href=\"/saved-record\">{x.savedRecords}</NavLink>\r\n          <NavLink href='/finder'>{x.finder}</NavLink>\r\n          <NavLink href='/settings'>{x.settings}</NavLink>\r\n          </>\r\n        }\r\n        <NavLink href='/logout'>{x.logout}</NavLink>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const LogoutNav = () => <NavLink href='/login'>{x.login}</NavLink>\r\n\r\n  return (\r\n    <Navbar expand=\"md\" bg=\"dark\" variant=\"dark\" className=\"sticky-nav\" id=\"navigation\">\r\n      <Navbar.Brand href=\"/\">\r\n        <img\r\n          alt=\"logo\"\r\n          src=\"/gefco_logo.png\"\r\n          width=\"50\"\r\n          height=\"50\"\r\n          className=\"d-inline-block align-top\"\r\n        />\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle/>\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n      <Nav className=\"ml-auto\" variant=\"pills\" activeKey={useLocation().pathname}>\r\n        {user !== null ? <LoginNav/> : <LogoutNav/>}\r\n      </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nconst EmptyTable = () => {\r\n  return (\r\n    <p>Table is empty</p>\r\n  )\r\n}\r\n\r\nexport default EmptyTable;\r\n","import BootstrapTable from \"react-bootstrap-table-next\";\r\nimport EmptyTable from \"./EmptyTable\";\r\nimport React from \"react\";\r\n\r\nconst MyBootstrapTable = ({title, data, columns, order, expandRow, classes}) => {\r\n\r\n  const TableHeader = () => {\r\n    if (! title)\r\n      return null\r\n    return (\r\n      <h3 style={{\r\n        borderRadius: '0.25em',\r\n        textAlign: 'center',\r\n        border: '2px solid gray',\r\n        margin: \"2% 0\",\r\n        padding: '0.5em',\r\n        marginTop: '1.5%'\r\n      }}>{title}</h3>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TableHeader />\r\n      <BootstrapTable\r\n        keyField=\"id\"\r\n        hover\r\n        classes={classes}\r\n        data={data}\r\n        columns={columns}\r\n        noDataIndication={EmptyTable}\r\n        defaultSorted={order}\r\n        expandRow={expandRow}\r\n      />\r\n    </>\r\n  )\r\n};\r\n\r\nexport default MyBootstrapTable","import React from \"react\";\r\nimport {ExclamationTriangle} from \"react-bootstrap-icons\";\r\nimport {employees} from \"../../helpers/data\";\r\n\r\nexport const FullName = (_, row) => {\r\n  if (!row.employee) {\r\n    return\r\n  }\r\n  return <>{row.employee.first_name} {row.employee.last_name}</>\r\n}\r\n\r\nconst formatted = (date) => date.substr(0,10).split(\"-\").reverse().join(\".\");\r\n\r\nexport const FormattedDate = (_, row) => {\r\n  return <>{formatted(row.date.Time)}</>\r\n}\r\n\r\nexport const FormattedDeadline = (_, row) => {\r\n  return <>{formatted(row.deadline.Time)}</>\r\n}\r\n\r\nexport const FormattedRelease = (_, row) => {\r\n  return <>{formatted(row.release_date.Time)}</>\r\n}\r\n\r\nexport const FormattedSuperiorDate = (_, row) => {\r\n  return <>{formatted(row.s_date.Time)}</>\r\n}\r\n\r\nexport const FormattedTrainingDate = (_, row) => {\r\n  return <>{formatted(row.signatures[0].date.Time)}</>\r\n}\r\n\r\nexport const FormattedEmployeeDate = (_, row) => {\r\n  const date = formatted(row.e_date.Time)\r\n  if (date === '01.01.0001')\r\n    return <>-</> // employee didn't signed yet\r\n  return <>{date}</>\r\n}\r\n\r\nexport const NameWithLink = (_, row) => {\r\n  return <a href={row.name} target=\"_blank\">{row.name}</a>\r\n}\r\n\r\nexport const DocumentLabel = (_, row) => {\r\n\r\n  const ExclamationName = () => {\r\n    return (\r\n      <h5>\r\n        <ExclamationTriangle style={{color: \"red\", marginBottom: \"6px\"}}/>\r\n        {\" \"}{NameWithLink(_, row)}\r\n      </h5>\r\n    );\r\n  }\r\n\r\n  const expired = row.deadline < Date.now() &&\r\n    row.employees.find(e => e.state.includes(\"e\") || e.state.includes(\"s\"))\r\n\r\n  return <>{expired ? <ExclamationName/> : NameWithLink(_, row)}</>\r\n}\r\n\r\nexport const FormattedEmployee = (_, row) => {\r\n  const employee = employees[row-1]\r\n  const percentage = 100 // TODO\r\n  return (\r\n    <div style={{fontSize: \"12px\"}}>\r\n      {employee.name}, {employee.job}, {percentage}%\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {require_superior} from \"../../helpers/functions\";\r\nimport {FormattedEmployeeDate} from \"../Others/Formatter\";\r\n\r\nexport const MissedBtn = (cell, row, index, {setModalInfo, setShowModal, asSuperior}) => {\r\n\r\n  const handleClick = () => {\r\n    console.log(row)\r\n    if (require_superior(row)) {\r\n      return\r\n    }\r\n    setShowModal(true);\r\n    setModalInfo({\r\n      ...row,\r\n      asSuperior: asSuperior\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Button onClick={handleClick} size=\"sm\" className=\"btn-block\">\r\n      {require_superior(row) ? 'Details' : 'Sign'}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport const SignedBtn = (cell, row) => {\r\n  return require_superior(row)\r\n    ? <Button size=\"sm\">Details</Button>\r\n    : FormattedEmployeeDate(cell, row.signatures[0])\r\n};\r\n\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst EditBtn = (cell, row, index, {setFormData}) => {\r\n\r\n  const handleClick = () => setFormData(row)\r\n\r\n  return <Button onClick={handleClick} size=\"sm\" id=\"editBtn\">Edit</Button>\r\n};\r\n\r\nexport default EditBtn;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {badMsg, goodMsg, recordType, successResponse} from \"../../helpers/functions\";\r\n\r\nconst SendBtn = (cell, row, index, {setSavedRec, setNotification}) => {\r\n\r\n  /** Send record to relevant employees */\r\n  const handleClick = () => {\r\n    fetch(`${recordType(row)}/confirm/${row.id}`, {\r\n      method: \"GET\",\r\n    })\r\n      .then(res => {\r\n        if (successResponse(res)){\r\n          updateSavedRec()\r\n          setNotification(goodMsg(`Record ${row.name} was successfully sent`))\r\n        } else {\r\n          setNotification(badMsg(`Sending the ${row.name} failed`))\r\n        }\r\n      })\r\n      .catch((e) => console.log(e))\r\n  }\r\n\r\n  const updateSavedRec = () => {\r\n    console.log('okok')\r\n    setSavedRec(prev => prev.filter(rec => rec.id !== row.id));\r\n  }\r\n\r\n  return (\r\n    <Button id=\"save\" variant=\"danger\" size=\"sm\" onClick={handleClick}>Send</Button>\r\n  );\r\n};\r\n\r\nexport default SendBtn;\r\n","import React from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nexport const FetchLoading = () => {\r\n  return <Spinner animation=\"border\" className=\"m-5\"/>\r\n}\r\n\r\nexport const FetchError = ({e}) => {\r\n  return <h6 className=\"p-5\">{e}</h6>\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nconst useDataApi = url => {\r\n\r\n  const [data, setData] = useState();\r\n  const [error, setError] = useState();\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log('url', url)\r\n    fetch(url, {\r\n      method: \"GET\"\r\n    })\r\n      .then(response => response.json())\r\n      .then(res => {\r\n          setIsLoaded(true);\r\n          setData(res)\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, []); // Runs once\r\n\r\n  return [data, isLoaded, error];\r\n};\r\n\r\nexport default useDataApi;","import React from \"react\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\n\r\nconst ConfirmModal = ({showModal, setShowModal, modalInfo, handleAccept}) => {\r\n\r\n  const closeModal = () => setShowModal(false);\r\n\r\n  const onAccept = () => {\r\n    handleAccept();\r\n    closeModal();\r\n  };\r\n\r\n  const employeeName =()=> `${modalInfo.employee.first_name} ${modalInfo.employee.last_name}`\r\n\r\n  return (\r\n    <Modal show={showModal} onHide={closeModal} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Confirm</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {modalInfo.asSuperior\r\n          ? <p>{`Do you really want do sign for ${employeeName()}`}</p>\r\n          : <p>{`Do you really want do sign the document named ${modalInfo.name}`}</p>\r\n        }\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"danger\" onClick={onAccept}>Accept</Button>\r\n        <Button variant=\"secondary\" onClick={closeModal}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmModal;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport MyBootstrapTable from \"../Tables/MyBootstrapTable\";\r\nimport {\r\n  documentsToSignColumns,\r\n  documentsToSignExpandColumns,\r\n  trainingsToSignColumns\r\n} from \"../Tables/columns\";\r\nimport {\r\n  getUser,\r\n  nonExpandableDocs,\r\n  orderBy,\r\n  recordType,\r\n  successResponse\r\n} from \"../../helpers/functions\";\r\nimport {FetchError, FetchLoading} from \"../Others/FetchComponents\";\r\nimport useDataApi from \"../../helpers/useDataApi\";\r\nimport ConfirmModal from \"../Modals/ConfirmModal\";\r\n\r\nconst RecordsToSignPage = () => {\r\n\r\n  const URL = `/unsigned/signatures/${getUser().id}`;\r\n  const [data, isLoaded, error] = useDataApi(URL);\r\n\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [modalInfo, setModalInfo] = useState([])\r\n\r\n  const [trainings, setTrainings] = useState([]);\r\n  const [documents, setDocuments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setDocuments(data.documents)\r\n      setTrainings(data.online_trainings)\r\n    }\r\n  }, [data]);\r\n\r\n  if (error) {\r\n    return <FetchError e={`Error: ${error.message}`}/>\r\n  } else if (!isLoaded || !data) {\r\n    return <FetchLoading/>\r\n  }\r\n\r\n  const handleAccept = () => {\r\n    if (modalInfo.asSuperior) {\r\n      signAsSuperior(modalInfo.id)\r\n    }\r\n    else {\r\n      signAsEmployee(modalInfo.signatures[0].id)\r\n    }\r\n    setShowModal(false);\r\n  }\r\n\r\n  /** Update sign date to Date.now()\r\n   * @param url:\r\n   *    '/sign' update employee date\r\n   *    '/sign/superior' update superior date\r\n   * @param id: id of the document_signature\r\n   * */\r\n  const fetchSign = (url, id) => {\r\n    return fetch(url, {\r\n      method: \"POST\",\r\n      body: new URLSearchParams(`id=${id}`)\r\n    })\r\n  }\r\n\r\n  const signAsEmployee = (sign_id) => {\r\n    const record_type = recordType(modalInfo)\r\n    fetchSign(`/sign/${record_type}`, sign_id)\r\n      .then(res => {\r\n        if (successResponse(res)) {\r\n          if (record_type === \"training\")\r\n            updateTrainings(sign_id)\r\n          else\r\n            updateEmployeeDocs(sign_id)\r\n        }\r\n      })\r\n  }\r\n\r\n  const signAsSuperior = (signature_id) => {\r\n    fetchSign('/sign/superior', signature_id)\r\n      .then(res => {\r\n        if (successResponse(res)){\r\n          updateSuperiorDocs(signature_id)\r\n        }\r\n      })\r\n  }\r\n\r\n  const updateTrainings = (signature_id) => {\r\n    setTrainings(trainings.filter(t => t.signatures[0].id !== signature_id))\r\n  }\r\n\r\n  const updateEmployeeDocs = (signature_id) => {\r\n    setDocuments(documents.filter(d => d.signatures[0].id !== signature_id))\r\n  }\r\n\r\n  const updateSuperiorDocs = (signature_id) => {\r\n    const update = documents.map(d => {\r\n      return {...d, signatures: d.signatures.filter(s => s.id !== signature_id)}\r\n    })\r\n    setDocuments(update.filter(d => d.signatures.length));\r\n  }\r\n\r\n  const trn_columns = trainingsToSignColumns(setModalInfo, setShowModal)\r\n  const doc_columns = documentsToSignColumns(setModalInfo, setShowModal)\r\n  const expandColumns = documentsToSignExpandColumns(setModalInfo, setShowModal)\r\n\r\n  const expandRow = {\r\n    onlyOneExpanding: true,\r\n    nonExpandable: nonExpandableDocs(documents),\r\n    renderer: (cell) => (\r\n      <MyBootstrapTable\r\n        classes=\"inner-table\"\r\n        data={cell.signatures}\r\n        columns={expandColumns}\r\n        order={orderBy('employee.last_name')}\r\n      />\r\n    )\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* DOCUMENTS */}\r\n      <MyBootstrapTable\r\n        title=\"Documents to sign\"\r\n        data={documents}\r\n        columns={doc_columns}\r\n        order={orderBy('deadline.Time')}\r\n        expandRow={expandRow}\r\n      />\r\n      {/* TRAININGS */}\r\n      <MyBootstrapTable\r\n        title=\"Trainings to sign\"\r\n        data={trainings}\r\n        columns={trn_columns}\r\n        order={orderBy('deadline.Time')}\r\n      />\r\n      <ConfirmModal\r\n        showModal={showModal}\r\n        setShowModal={setShowModal}\r\n        modalInfo={modalInfo}\r\n        handleAccept={handleAccept}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RecordsToSignPage","import {\r\n  FormattedDate,\r\n  FormattedDeadline,\r\n  FormattedEmployeeDate,\r\n  FormattedRelease,\r\n  FullName,\r\n  NameWithLink\r\n} from \"../Others/Formatter\";\r\nimport {MissedBtn} from \"../Buttons/TableBtns\";\r\nimport EditBtn from \"../Buttons/EditBtn\";\r\nimport SendBtn from \"../Buttons/SendBtn\";\r\nimport {buttonColumn} from \"../../helpers/functions\";\r\n\r\nexport const trainingsToSignColumns = (setModalInfo, setShowModal) => [\r\n  {\r\n    dataField: 'name',\r\n    text: 'Name',\r\n    sort: true\r\n  }, {\r\n    dataField: 'date.Time',\r\n    text: 'Date',\r\n    sort: true,\r\n    formatter: FormattedDate\r\n  }, {\r\n    dataField: 'deadline.Time',\r\n    text: 'Deadline',\r\n    sort: true,\r\n    formatter: FormattedDeadline\r\n  }, {\r\n    ...buttonColumn(),\r\n    formatter: MissedBtn,\r\n    formatExtraData: {\r\n      setModalInfo: setModalInfo,\r\n      setShowModal: setShowModal\r\n    }\r\n  }\r\n];\r\n\r\nexport const documentsToSignColumns = (setModalInfo, setShowModal) => [\r\n  {\r\n    dataField: 'name',\r\n    text: 'Name',\r\n    sort: true,\r\n    formatter: NameWithLink\r\n  }, {\r\n    dataField: 'release_date.Time',\r\n    text: 'Release',\r\n    sort: true,\r\n    formatter: FormattedRelease\r\n  }, {\r\n    dataField: 'deadline.Time',\r\n    text: 'Deadline',\r\n    sort: true,\r\n    formatter: FormattedDeadline\r\n  }, {\r\n    ...buttonColumn(),\r\n    formatter: MissedBtn,\r\n    formatExtraData: {\r\n      setModalInfo: setModalInfo,\r\n      setShowModal: setShowModal,\r\n      asSuperior: false\r\n    },\r\n  }\r\n];\r\n\r\nexport const documentsToSignExpandColumns = (setModalInfo, setShowModal) => [\r\n  {\r\n    dataField: 'employee.id',\r\n    text: 'Employee ID',\r\n    sort: true,\r\n  }, {\r\n    dataField: 'employee.last_name',\r\n    text: 'Full name',\r\n    sort: true,\r\n    formatter: FullName\r\n  }, {\r\n    dataField: 'e_date.Time',\r\n    text: 'Sign Date',\r\n    sort: true,\r\n    formatter: FormattedEmployeeDate\r\n  },{\r\n    ...buttonColumn(),\r\n    formatter: MissedBtn,\r\n    formatExtraData: {\r\n      setModalInfo: setModalInfo,\r\n      setShowModal: setShowModal,\r\n      asSuperior: true\r\n    }\r\n  }\r\n];\r\n\r\nexport const savedDocumentsColumns = (setFormData, setSavedRec, setNotification) => [\r\n  {\r\n    dataField: 'name',\r\n    text: 'Name',\r\n    sort: true\r\n  }, {\r\n    dataField: 'release_date.Time',\r\n    text: 'Release',\r\n    sort: true,\r\n    formatter: FormattedRelease,\r\n  }, {\r\n    dataField: 'deadline.Time',\r\n    text: 'Deadline',\r\n    sort: true,\r\n    formatter: FormattedDeadline,\r\n  }, {\r\n    ...buttonColumn('EditBtn'),\r\n    formatter: EditBtn,\r\n    formatExtraData: {\r\n      setFormData: setFormData,\r\n    }\r\n  }, {\r\n    ...buttonColumn('SendBtn'),\r\n    formatter: SendBtn,\r\n    formatExtraData: {\r\n      setNotification: setNotification,\r\n      setSavedRec: setSavedRec\r\n    }\r\n  }\r\n];\r\n\r\n\r\nexport const savedTrainingsColumns = (setFormData, setSavedRec, setNotification) => [\r\n  {\r\n    dataField: 'name',\r\n    text: 'Name',\r\n    sort: true\r\n  }, {\r\n    dataField: 'date.Time',\r\n    text: 'Release',\r\n    sort: true,\r\n    formatter: FormattedDate\r\n  }, {\r\n    dataField: 'place',\r\n    text: 'Place',\r\n    sort: true\r\n  }, {\r\n    ...buttonColumn('EditBtn'),\r\n    formatter: EditBtn,\r\n    formatExtraData: {\r\n      setFormData: setFormData,\r\n    }\r\n  }, {\r\n    ...buttonColumn('SendBtn'),\r\n    formatter: SendBtn,\r\n    formatExtraData: {\r\n      setNotification: setNotification,\r\n      setSavedRec: setSavedRec\r\n    }\r\n  }\r\n];","import React from \"react\";\r\nimport MyBootstrapTable from \"./MyBootstrapTable\";\r\nimport {SignedBtn} from \"../Buttons/TableBtns\";\r\nimport {nonExpandableDocs, orderBy} from \"../../helpers/functions\";\r\nimport {\r\n  FormattedEmployeeDate,\r\n  FormattedRelease,\r\n  FormattedSuperiorDate,\r\n  FullName,\r\n  NameWithLink\r\n} from \"../Others/Formatter\";\r\n\r\nconst SignedDocuments = ({documents}) => {\r\n\r\n  console.log('documents', documents)\r\n  const columns = [{\r\n    dataField: 'name',\r\n    text: 'Name',\r\n    sort: true,\r\n    formatter: NameWithLink\r\n  }, {\r\n    dataField: 'release_date.Time',\r\n    text: 'Release',\r\n    sort: true,\r\n    formatter: FormattedRelease\r\n  }, {\r\n    dataField: 'signatures[0].e_date.Time',\r\n    text: 'Signed date',\r\n    sort: true,\r\n    formatter: SignedBtn\r\n  }]\r\n\r\nconst expandColumns = [{\r\n    dataField: 'employee.id',\r\n    text: 'Employee ID',\r\n    sort: true\r\n  }, {\r\n    dataField: 'employee.last_name',\r\n    text: 'Full name',\r\n    sort: true,\r\n    formatter: FullName\r\n  }, {\r\n    dataField: 'e_date.Time',\r\n    text: 'Employee Sign',\r\n    sort: true,\r\n    formatter: FormattedEmployeeDate\r\n  },{\r\n    dataField: 's_date.Time',\r\n    text: 'My Sign',\r\n    sort: true,\r\n    formatter: FormattedSuperiorDate\r\n  }]\r\n\r\n  const expandRow = {\r\n    onlyOneExpanding: true,\r\n    nonExpandable: nonExpandableDocs(documents),\r\n    renderer: (cell) => (\r\n      <MyBootstrapTable\r\n        classes=\"inner-table\"\r\n        data={cell.signatures}\r\n        columns={expandColumns}\r\n        order={orderBy('employee.last_name')}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <MyBootstrapTable\r\n      title=\"Signed Documents\"\r\n      data={documents}\r\n      columns={columns}\r\n      expandRow={expandRow}\r\n      order={orderBy('release_date.Time', 'desc')}\r\n    />\r\n  )\r\n}\r\n\r\nexport default SignedDocuments;\r\n","import React from \"react\";\r\nimport {orderBy} from \"../../helpers/functions\";\r\nimport {FormattedDate, FormattedTrainingDate} from \"../Others/Formatter\";\r\nimport MyBootstrapTable from \"./MyBootstrapTable\";\r\n\r\nconst SignedTrainings = ({trainings}) => {\r\n\r\n  const columns = [{\r\n    dataField: 'name',\r\n    text: 'Name',\r\n    sort: true\r\n  }, {\r\n    dataField: 'date.Time',\r\n    text: 'Took place',\r\n    sort: true,\r\n    formatter: FormattedDate\r\n  }, {\r\n    dataField: 'signatures[0].date.Time', // always array with length of 1 [by SQL query]\r\n    text: 'Signed date',\r\n    sort: true,\r\n    formatter: FormattedTrainingDate\r\n  }];\r\n\r\n  return (\r\n    <MyBootstrapTable\r\n      title=\"Signed Trainings\"\r\n      data={trainings}\r\n      columns={columns}\r\n      order={orderBy('date.Time', 'desc')}\r\n    />\r\n  )\r\n}\r\n\r\nexport default SignedTrainings;","import React from \"react\";\r\nimport SignedDocuments from \"../Tables/SignedDocuments\";\r\nimport SignedTrainings from \"../Tables/SignedTrainings\";\r\nimport {getUser} from \"../../helpers/functions\";\r\nimport useDataApi from \"../../helpers/useDataApi\";\r\nimport {FetchError, FetchLoading} from \"../Others/FetchComponents\";\r\n\r\nconst SignedRecordsPage = () => {\r\n\r\n  const URL = `/signed/signatures/${getUser().id}`;\r\n  const [data, isLoaded, error] = useDataApi(URL);\r\n\r\n  if (error) {\r\n    return <FetchError e={`Error: ${error.message}`}/>\r\n  } else if (!isLoaded || !data) {\r\n    return <FetchLoading/>\r\n  }\r\n  return (\r\n    <>\r\n      <SignedDocuments documents={data.documents}/>\r\n      <SignedTrainings trainings={data.online_trainings}/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignedRecordsPage;\r\n","import {Col, Form, Row} from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\nconst MyHookForm = ({label, name, placeholder, type, register, as, required}) => {\r\n\r\n  return (\r\n    <Form.Group as={Row}>\r\n      <Form.Label column sm=\"3\">{label}</Form.Label>\r\n      <Col>\r\n        <Form.Control\r\n          name={name}\r\n          placeholder={placeholder}\r\n          ref={register}\r\n          type={type}\r\n          as={as}\r\n          required={required}\r\n        />\r\n      </Col>\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport default MyHookForm;","import React, {useEffect, useState} from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Select from \"react-select\";\r\nimport {badMsg, goodMsg, isValidCombination, setOf, successResponse} from \"../../helpers/functions\";\r\nimport {combinations, comboFields} from \"../../helpers/data\";\r\nimport {CustomAlert} from \"../Others/CustomAlert\";\r\n\r\nconst CombinationForm = ({prefill, employees, combinations: cc, combination, setCombination, notification, setNotification}) => {\r\n\r\n  let combi = cc\r\n\r\n  const [select, setSelect] = useState()\r\n  const [toggle, setToggle] = useState([false])\r\n\r\n  const [branches, setbranches] = useState(setOf(combi.map(c => c.branches)))\r\n  const [divisions, setDivisions] = useState(setOf(combi.map(c => c.division)))\r\n  const [departments, setdepartments] = useState(setOf(combi.map(c => c.departments)))\r\n  const [cities, setCities] = useState(setOf(combi.map(c => c.cities)))\r\n\r\n  const handleSelect = (data, event) => {\r\n    const field = event.name\r\n    setCombination({...combination, [field]: data})\r\n    if (field !== 'removedEmployees'){\r\n      commitChanges(field)\r\n    }\r\n  }\r\n\r\n  const commitChanges = (select) => {\r\n    setSelect(select)\r\n    setToggle([!toggle[0]])\r\n    setNotification(undefined)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!isValidCombination(combination)) {\r\n      setSelect('reset')\r\n    }\r\n    updateDropBox()\r\n  }, [toggle]);\r\n\r\n  const updateDropBox = () => {\r\n    let update = combi\r\n\r\n    // start of inner functions\r\n    function updateField(field) {\r\n      const values = combination[field].map(d => d.value)\r\n      if (values.length) {\r\n        update = update.filter(c => values.includes(c[field].value))\r\n      } else {\r\n        for (const field in combination) {\r\n          // todo\r\n        }\r\n      }\r\n      return values.length\r\n    }\r\n\r\n    const getSetOf = field => setOf(update.map(c => c[field]))\r\n\r\n    function setbranches() {setbranches(getSetOf('branches'))}\r\n    function setDivision() {setDivisions(getSetOf('division'))}\r\n    function setdepartments() {setdepartments(getSetOf('departments'))}\r\n    function setcities() {setCities(getSetOf('cities'))}\r\n    // end of inner functions\r\n\r\n    if (!updateField('branches')) setbranches()\r\n    if (!updateField('division')) setDivision()\r\n    if (!updateField('departments')) setdepartments()\r\n    if (!updateField('cities')) setcities()\r\n\r\n    if (select !== 'branches') setbranches()\r\n    if (select !== 'division') setDivision()\r\n    if (select !== 'departments') setdepartments()\r\n    if (select !== 'cities') setcities()\r\n  }\r\n\r\n  const selector = (name, label, options) => {\r\n    const defaultValue = prefill ? prefill[name] : []\r\n    return (\r\n      <>\r\n        {label}\r\n        <Select\r\n          defaultValue={defaultValue}\r\n          isMulti={true}\r\n          name={name}\r\n          options={options}\r\n          placeholder={label}\r\n          onChange={(data, e) => handleSelect(data, e)}\r\n        />\r\n        <br/>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Col className=\"p-0\">\r\n      { selector(\"branches\", \"branches\", branches) }\r\n      { selector(\"division\", \"Divisions\", divisions) }\r\n      { selector(\"departments\",\"departments\", departments) }\r\n      { selector(\"cities\",\"Cities\", cities) }\r\n      {employees &&\r\n        selector(\"removedEmployees\", \"Remove employees\", employees) }\r\n      {notification &&\r\n        <CustomAlert notification={notification}/>\r\n      }\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default CombinationForm;\r\n","import React, {useState} from \"react\";\r\nimport {Button, Col, Container, Modal} from \"react-bootstrap\";\r\nimport CombinationForm from \"../Forms/CombinationForm\";\r\nimport uuid from 'react-uuid'\r\nimport {badMsg, isValidCombination, resolveCombinations} from \"../../helpers/functions\";\r\n\r\nconst CombinationModal = ({prefill, combinations, setAssignedTo, setEmptyAssign, closeModal}) => {\r\n\r\n  const [notification, setNotification] = useState();\r\n  const [employees, setEmployees] = useState(null);\r\n  const [combination, setCombination] = useState(prefill ? prefill : {\r\n      branches: [],\r\n      division: [],\r\n      departments: [],\r\n      cities: [],\r\n      removedEmployees: []\r\n    }\r\n  )\r\n\r\n  const preview = () => {\r\n    if (!isValidCombination(combination)) { // TODO or empty\r\n      setNotification(badMsg('Neboli najdeni ziadni zamestnanci'))\r\n      return\r\n    }\r\n    const assignedTo = resolveCombinations([combination])\r\n    console.log(assignedTo)\r\n\r\n    // FIX status 500\r\n    // getEmployees(assignedTo)\r\n\r\n    fetch(`/employees/${assignedTo}`, {\r\n      mode: 'no-cors',\r\n      method: \"GET\",\r\n    })\r\n      .then(data => data.json())\r\n      .then(data => resolveEmployees(data))\r\n      .catch((e) => console.log(\"Errrrrrrrrrrror\", e))\r\n  }\r\n\r\n  const resolveEmployees = (data) => {\r\n    setEmployees(data.map(d => {\r\n      return {\r\n        value: d.id,\r\n        label: `${d.first_name} ${d.last_name}`\r\n      }\r\n    }))\r\n  }\r\n\r\n  const getEmployees = (assignedTo) => {\r\n    console.log(assignedTo)\r\n    return fetch(`/employees/${assignedTo}`, {\r\n      mode: 'no-cors',\r\n      method: \"GET\",\r\n    })\r\n      .then(data => {\r\n        console.log(data)\r\n      })\r\n      .catch(() => console.log(\"Errrrrrrrrrrror\"))\r\n  }\r\n\r\n  const save = () => {\r\n    if (!isValidCombination(combination)) {\r\n      setNotification(badMsg('not valid combination'))\r\n      return false\r\n    }\r\n    setNotification(undefined)\r\n    setEmptyAssign([false])\r\n\r\n    setAssignedTo(prev => {\r\n      return prev.map(c => {\r\n        if (c.id === prefill?.id) {\r\n          return {...combination, id: uuid()}\r\n        }\r\n        return c\r\n      })\r\n    })\r\n    closeModal()\r\n    return true\r\n  }\r\n\r\n  const add = () => {\r\n    if (!isValidCombination(combination)) {\r\n      setNotification(badMsg('not valid combination'))\r\n      return false\r\n    }\r\n    setNotification(undefined)\r\n    setEmptyAssign([false])\r\n    setAssignedTo(prevState => {\r\n      return [...prevState, {...combination, id: uuid()} ]\r\n    });\r\n    return true\r\n  }\r\n\r\n  const addClose = () => {\r\n    const successful = add()\r\n    if (successful) closeModal()\r\n  }\r\n\r\n  return (\r\n    <Modal show={true} onHide={closeModal} centered>\r\n      <Container className=\"pt-3 pb-3 pl-5 pr-5\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add new combination</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <CombinationForm\r\n          prefill={prefill}\r\n          employees={employees}\r\n          combinations={combinations}\r\n          combination={combination}\r\n          setCombination={setCombination}\r\n          notification={notification}\r\n          setNotification={setNotification}\r\n        />\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Col className=\"text-center\">\r\n          <Button onClick={preview} size=\"sm\" className=\"mr-2\">Preview</Button>\r\n          {prefill\r\n            ? <Button onClick={save} size=\"sm\" className=\"mr-2\">Save</Button>\r\n            : <>\r\n                <Button onClick={add} size=\"sm\" className=\"mr-2\">Add next</Button>\r\n                <Button onClick={addClose} size=\"sm\" className=\"mr-2\">Add and close</Button>\r\n              </>\r\n          }\r\n          <Button onClick={closeModal} variant=\"secondary\" size=\"sm\">close</Button>\r\n        </Col>\r\n      </Modal.Footer>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default CombinationModal;\r\n","import React, {useState} from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport {Plus, XSquare, Pencil} from 'react-bootstrap-icons';\r\nimport CombinationModal from \"../Modals/CombinationModal\";\r\nimport EmptyTable from \"./EmptyTable\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {buttonColumn} from \"../../helpers/functions\";\r\n\r\nconst Combinations = ({combinations, assignedTo, setAssignedTo, setEmptyAssign}) => {\r\n\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [prefill, setPrefill] = useState();\r\n\r\n  const openModal = () => setShowModal(true)\r\n  const closeModal = () => {\r\n    setPrefill(undefined)\r\n    setShowModal(false)\r\n  }\r\n\r\n  const EditIcon = (_, row) => {\r\n    return <Pencil size=\"25\" color=\"black\" onClick={() => editCombination(row)}/>\r\n  }\r\n\r\n  const editCombination = (row) => {\r\n    setPrefill(row)\r\n    openModal()\r\n  }\r\n\r\n  const DeleteIcon = (_, row) => {\r\n    return <XSquare size=\"25\" color=\"red\" onClick={() => deleteCombination(row)}/>\r\n  }\r\n\r\n  const deleteCombination = (row) => {\r\n    setAssignedTo(prevState => {\r\n      return prevState.filter(c => c.id !== row.id)\r\n    })\r\n  }\r\n\r\n  const AddIcon = () => {\r\n    return (\r\n      <Button variant=\"success\" onClick={openModal} size=\"sm\" className=\"mb-2\">\r\n        <Plus size=\"20\" color=\"white\"/>\r\n        <span>add combination</span>\r\n      </Button>\r\n    )\r\n  };\r\n\r\n  const getLabels = (field) => {\r\n    return <>{field.map(f => f.label).join(',')}</>\r\n  }\r\n  const branches = (_, row) => getLabels(row.branches)\r\n  const Division = (_, row) => getLabels(row.division)\r\n  const departments = (_, row) => getLabels(row.departments)\r\n  const cities = (_, row) => getLabels(row.cities)\r\n\r\n  const columns = [{\r\n    dataField: 'branches',\r\n    text: 'branches',\r\n    formatter: branches\r\n  }, {\r\n    dataField: 'division',\r\n    text: 'Division',\r\n    formatter: Division\r\n  }, {\r\n    dataField: 'departments',\r\n    text: 'departments',\r\n    formatter: departments\r\n  }, {\r\n    dataField: 'cities',\r\n    text: 'cities',\r\n    formatter: cities\r\n  }, {\r\n    ...buttonColumn('edit'),\r\n    formatter: EditIcon\r\n  }, {\r\n    ...buttonColumn('del'),\r\n    formatter: DeleteIcon\r\n  }];\r\n\r\n  return (\r\n    <>\r\n      <BootstrapTable\r\n        keyField=\"id\"\r\n        data={assignedTo}\r\n        columns={columns}\r\n        noDataIndication={EmptyTable}\r\n        // horizontal scroll\r\n        wrapperClasses=\"table-responsive\"\r\n        rowClasses=\"text-nowrap\"\r\n      />\r\n      <AddIcon/>\r\n      {showModal &&\r\n        <CombinationModal\r\n          prefill={prefill}\r\n          combinations={combinations}\r\n          setAssignedTo={setAssignedTo}\r\n          setEmptyAssign={setEmptyAssign}\r\n          closeModal={closeModal}\r\n        />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Combinations;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport MyHookForm from \"./MyHookForm\";\r\nimport {Form, Row, Col, Button} from \"react-bootstrap\";\r\nimport Combinations from \"../Tables/Combinations\";\r\nimport {CustomAlert} from \"../Others/CustomAlert\";\r\nimport {doc_form, types as t} from \"../../helpers/data\";\r\nimport {\r\n  badMsg,\r\n  goodMsg,\r\n  correctDocumentFormData,\r\n  getSelectOptions,\r\n  prefillDocumentForm,\r\n  successResponse, getCombinationsNames, prepareCombinations, getFormID\r\n} from \"../../helpers/functions\";\r\n\r\nconst DocumentForm = ({setRecords, formData, setFormData, actual}) => {\r\n  // formData = doc_form\r\n  const {register, handleSubmit} = useForm({\r\n    defaultValues: prefillDocumentForm(formData)\r\n  });\r\n\r\n  const types = t;\r\n  const [action, setAction] = useState();\r\n  const [selectedType, setSelectedType] = useState(formData ? formData.type : '')\r\n\r\n  const [currentID, setCurrentID] = useState(getFormID(formData))\r\n  const [notification, setNotification] = useState()\r\n  const [combinations, setCombinations] = useState([])\r\n  const [assignedTo, setAssignedTo] = useState([])\r\n  const [emptyAssign, setEmptyAssign] = useState([true])\r\n  useEffect(() => setNotification(undefined), emptyAssign)\r\n\r\n  useEffect(() => {\r\n    fetch('/combinations', {\r\n      method: \"GET\",\r\n    })\r\n      .then(response => response.json())\r\n      .then(res => {\r\n        const combs = prepareCombinations(res)\r\n        setCombinations(combs)\r\n        const assign = getCombinationsNames(formData, combs)\r\n        setAssignedTo(assign)\r\n      })\r\n      .catch((e) => console.log(e))\r\n  },[])\r\n\r\n  const onSubmit = (data) => {\r\n    if (assignedTo.length === 0){\r\n      setNotification(badMsg(\"At least one combination is required\"))\r\n      // return\r\n    }\r\n\r\n    data = correctDocumentFormData(data, assignedTo)\r\n    console.log('data', data)\r\n\r\n    if (action === \"save\")\r\n      if (currentID) {\r\n        data = {...data, id: currentID}\r\n        upsert(data, 'update')\r\n        updateSavedRec(data)\r\n      } else {\r\n        upsert(data, 'create')\r\n          .then(r => setCurrentID(r?.id))\r\n      }\r\n    if (action === \"send\"){\r\n      if (currentID) {\r\n        data = {...data, id: currentID}\r\n        if (actual) {\r\n          upsertConfirm(data, 'create/confirm')\r\n            .then(r => setCurrentID(r?.id))\r\n        } else {\r\n          upsertConfirm(data, 'update/confirm')\r\n        }\r\n      } else {\r\n        upsertConfirm(data, 'create/confirm')\r\n            .then(r => setCurrentID(r?.id))\r\n      }\r\n    }\r\n  }\r\n\r\n  const upsert = (data, action) => {\r\n    return fetch(`/document/${action}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(res => {\r\n        if (successResponse(res)) {\r\n          setNotification(goodMsg(`${action} was successful`))\r\n        } else {\r\n          setNotification(badMsg(`${action} failed`))\r\n        }\r\n        return res.json()\r\n      })\r\n      .catch((e) => console.log('error', e))\r\n  }\r\n\r\n  const upsertConfirm = (data, action) => {\r\n    return fetch(`/document/${action}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data)\r\n    }).then(res => {\r\n      if (successResponse(res)) {\r\n        setNotification(goodMsg(`${action} was successful`))\r\n        if (setRecords) filterSavedRec(data)   // update table data\r\n        if (setFormData) setFormData(undefined) // hide modal\r\n      } else {\r\n        setNotification(badMsg(`${action} failed`))\r\n      }\r\n      return res.json()\r\n    }).catch((e) => console.log('error', e))\r\n  }\r\n\r\n  const filterSavedRec = (data) => {\r\n    setRecords(prevState => prevState.filter(p => p.id !== data.id))\r\n  }\r\n\r\n  const updateSavedRec = (data) => {\r\n    setRecords(prevState => {\r\n      let update = prevState\r\n      const foundID = prevState.findIndex(p => p.id === data.id)\r\n      update[foundID] = data\r\n      return update\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Form onChange={()=>setNotification(undefined)} onSubmit={handleSubmit(onSubmit)}>\r\n      {/* TYPE */}\r\n      <Form.Group as={Row}>\r\n        <Form.Label column sm=\"3\">Type*</Form.Label>\r\n        <Col>\r\n          <Form.Control\r\n            onChange={(e) => setSelectedType(e.target.value)}\r\n            as=\"select\"\r\n            name=\"type\"\r\n            ref={register({validate: v => v !== \"\"})}\r\n            required\r\n            value={selectedType}\r\n          >\r\n            {getSelectOptions(types)}\r\n          </Form.Control>\r\n        </Col>\r\n      </Form.Group>\r\n      {/* REQUIRE SUPERIOR */}\r\n      <Form.Group as={Row}>\r\n        <Form.Label column sm=\"3\"> </Form.Label>\r\n        <Col>\r\n          <Form.Check\r\n            inline\r\n            label=\"require superior\"\r\n            name=\"require_superior\"\r\n            ref={register}\r\n          />\r\n        </Col>\r\n      </Form.Group>\r\n      {/* NAME */}\r\n      <MyHookForm\r\n        label=\"Document name*\"\r\n        name=\"name\"\r\n        placeholder=\"Enter document name\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* LINK */}\r\n      <MyHookForm\r\n        label=\"Link to sharepoint\"\r\n        name=\"link\"\r\n        placeholder=\"Enter document link to sharepoint\"\r\n        register={register}\r\n      />\r\n      {/* RELEASE */}\r\n      <MyHookForm\r\n        label=\"Release date*\"\r\n        name=\"release_date\"\r\n        type=\"date\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* DEADLINE */}\r\n      <MyHookForm\r\n        label=\"Days to deadline*\"\r\n        name=\"deadline\"\r\n        type=\"date\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* VERSION */}\r\n      <MyHookForm\r\n        label=\"Version*\"\r\n        name=\"version\"\r\n        placeholder=\"Enter version\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* ORDER NUMBER */}\r\n      <MyHookForm\r\n        label=\"Order number*\"\r\n        name=\"order_number\"\r\n        type=\"number\"\r\n        placeholder=\"Enter number\"\r\n        register={register({valueAsNumber: true})}\r\n        required\r\n      />\r\n      {/* NOTE */}\r\n      <MyHookForm\r\n        label=\"Note\"\r\n        name=\"note\"\r\n        as=\"textarea\"\r\n        placeholder=\"Enter note\"\r\n        register={register}\r\n      />\r\n      {/* COMBINATIONS */}\r\n      <Combinations\r\n        combinations={combinations}\r\n        assignedTo={assignedTo}\r\n        setAssignedTo={setAssignedTo}\r\n        emptyAssign={emptyAssign}\r\n        setEmptyAssign={setEmptyAssign}\r\n      />\r\n      {/* ALERTS */}\r\n      {notification && <CustomAlert notification={notification}/> }\r\n      {/* SAVE | SEND BUTTONS */}\r\n      <div className=\"pt-1 btn-block text-right\">\r\n        <Button type=\"submit\" className=\"mr-1\" onClick={()=>setAction('save')}>\r\n          Save\r\n        </Button>\r\n        <Button type=\"submit\" variant=\"danger\" onClick={()=>setAction('send')}>\r\n          {actual ? 'Send as new version' : 'Send'}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default DocumentForm;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport MyHookForm from \"./MyHookForm\";\r\nimport {Row, Col, Form, Button} from \"react-bootstrap\";\r\nimport {Typeahead} from 'react-bootstrap-typeahead'\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport {CustomAlert} from \"../Others/CustomAlert\";\r\nimport {\r\n  badMsg,\r\n  goodMsg,\r\n  correctTrainingFormData,\r\n  successResponse,\r\n  prefillTrainingForm, getEmployeesNames, getFormID\r\n} from \"../../helpers/functions\";\r\nimport {trn_form} from \"../../helpers/data\";\r\n\r\nconst TrainingForm = ({setRecords, formData, setFormData, actual}) => {\r\n  // formData = trn_form\r\n  const {register, handleSubmit} = useForm({\r\n    defaultValues: prefillTrainingForm(formData)\r\n  });\r\n\r\n  const [action, setAction] = useState();\r\n\r\n  const [currentID, setCurrentID] = useState(getFormID(formData))\r\n  const [notification, setNotification] = useState()\r\n  const [employees, setEmployees] = useState([])\r\n  const [attendees, setAttendees] = useState([])\r\n  const [emptyAttendees, setEmptyAttendees] = useState([true])\r\n  useEffect(() => setNotification(undefined), emptyAttendees)\r\n\r\n  useEffect(() => {\r\n    fetch('/employees/all', {\r\n      method: \"GET\",\r\n    })\r\n      .then(response => response.json())\r\n      .then(res => {\r\n        setEmployees(res)\r\n        setAttendees(getEmployeesNames(formData, res))\r\n      })\r\n      .catch((e) => console.log(e))\r\n  },[])\r\n\r\n  const onSubmit = (data) => {\r\n    if (!attendees.length){\r\n      setNotification(badMsg(\"At least one employee is required\"))\r\n      return\r\n    }\r\n\r\n    data = correctTrainingFormData(data, attendees)\r\n    console.log(data)\r\n\r\n    if (action === \"save\")\r\n      if (currentID) {\r\n        data = {...data, id: currentID}\r\n        upsert(data, 'update')\r\n        updateSavedRec(data)\r\n      } else {\r\n        upsert(data, 'create')\r\n          .then(r => setCurrentID(r?.id))\r\n      }\r\n    if (action === \"send\"){\r\n      if (currentID) {\r\n        data = {...data, id: currentID}\r\n        if (actual) {\r\n          upsertConfirm(data, 'create/confirm')\r\n            .then(r => setCurrentID(r?.id))\r\n        } else {\r\n          upsertConfirm(data, 'update/confirm')\r\n        }\r\n      } else {\r\n        upsertConfirm(data, 'create/confirm')\r\n          .then(r => setCurrentID(r?.id))\r\n      }\r\n    }\r\n  }\r\n\r\n  const upsert = (data, action) => {\r\n    return fetch(`/training/${action}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(res => {\r\n        if (successResponse(res)) {\r\n          setNotification(goodMsg(`${action} was successful`))\r\n        } else {\r\n          setNotification(badMsg(`${action} failed`))\r\n        }\r\n        return res.json()\r\n      }).catch((e) => console.log('error', e))\r\n  }\r\n\r\n  const upsertConfirm = (data, action) => {\r\n    return fetch(`/training/${action}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data)\r\n    }).then(res => {\r\n      if (successResponse(res)) {\r\n        setNotification(goodMsg(`${action} was successful`))\r\n        if (setRecords) filterSavedRec(data)   // update table data\r\n        if (setFormData) setFormData(undefined) // hide modal\r\n      } else {\r\n        setNotification(badMsg(`${action} failed`))\r\n      }\r\n      return res.json()\r\n    }).catch((e) => console.log('error', e))\r\n  }\r\n\r\n  const filterSavedRec = (data) => {\r\n    setRecords(prevState => prevState.filter(p => p.id !== data.id))\r\n  }\r\n\r\n  const updateSavedRec = (data) => {\r\n    setRecords(prevState => {\r\n      let update = prevState\r\n      const foundID = prevState.findIndex(p => p.id === data.id)\r\n      update[foundID] = data\r\n      return update\r\n    })\r\n  }\r\n\r\n  const addAttendees = (attendee) => {\r\n    setAttendees(attendee)\r\n    setEmptyAttendees([false])\r\n  }\r\n\r\n  return (\r\n    <Form onChange={()=>setNotification(undefined)} onSubmit={handleSubmit(onSubmit)}>\r\n      {/* NAME */}\r\n      <MyHookForm\r\n        label=\"Training name*\"\r\n        name=\"name\"\r\n        placeholder=\"Enter document name\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* TRAINEE */}\r\n      <MyHookForm\r\n        label=\"Name of lector\"\r\n        name=\"lector\"\r\n        placeholder=\"Enter document link to sharepoint\"\r\n        register={register}\r\n      />\r\n      {/* AGENCY */}\r\n      <MyHookForm\r\n        label=\"Name of agency\"\r\n        name=\"agency\"\r\n        placeholder=\"Enter agency\"\r\n        register={register}\r\n      />\r\n      {/* PLACE */}\r\n      <MyHookForm\r\n        label=\"Place\"\r\n        name=\"place\"\r\n        placeholder=\"Enter place\"\r\n        register={register}\r\n      />\r\n      {/* DATE */}\r\n      <MyHookForm\r\n        label=\"Date*\"\r\n        name=\"date\"\r\n        type=\"date\"\r\n        placeholder=\"Enter date\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* DEADLINE */}\r\n      <MyHookForm\r\n        label=\"Days to deadline*\"\r\n        name=\"deadline\"\r\n        type=\"date\"\r\n        defaultValue=\"14\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* DURATION */}\r\n      <MyHookForm\r\n        label=\"Duration\"\r\n        name=\"duration\"\r\n        type=\"number\"\r\n        placeholder=\"Enter duration\"\r\n        register={register({valueAsNumber: true})}\r\n      />\r\n      {/* AGENDA */}\r\n      <MyHookForm\r\n        label=\"Agenda*\"\r\n        name=\"agenda\"\r\n        as=\"textarea\"\r\n        placeholder=\"Enter agenda\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* LIST OF EMPLOYEES */}\r\n      <Form.Group as={Row}>\r\n        <Form.Label column sm=\"3\">Add employees*</Form.Label>\r\n        <Col>\r\n          <Typeahead\r\n            id=\"basic-typeahead-single\"\r\n            name=\"employees\"\r\n            labelKey={e => `${e.first_name} ${e.last_name} [${e.id}]`}\r\n            multiple\r\n            onChange={addAttendees}\r\n            options={employees}\r\n            placeholder=\"Choose an employees...\"\r\n            selected={attendees}\r\n          />\r\n        </Col>\r\n      </Form.Group>\r\n      {/* ALERTS */}\r\n      {notification && <CustomAlert notification={notification}/> }\r\n      {/* SAVE | SEND BUTTONS */}\r\n      <div className=\"pt-1 btn-block text-right\">\r\n        <Button type=\"submit\" className=\"mr-1\" onClick={()=>setAction('save')}>\r\n          Save\r\n        </Button>\r\n        <Button type=\"submit\" variant=\"danger\" onClick={()=>setAction('send')}>\r\n          Send\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default TrainingForm;\r\n","import React, {useState} from 'react';\r\nimport {Button, ButtonGroup, Container} from 'react-bootstrap';\r\nimport DocumentForm from \"../Forms/DocumentForm\";\r\nimport TrainingForm from \"../Forms/TrainingForm\";\r\n\r\nconst AddRecordPage = () => {\r\n\r\n  const [formType, setFormType] = useState('document');\r\n\r\n  const handleClick = event => setFormType(event.target.id)\r\n  const active = id => formType === id && 'active'\r\n\r\n  return (\r\n    <Container className=\"w-75\">\r\n      <ButtonGroup onClick={handleClick} className=\"btn-group btn-header\">\r\n        <Button id=\"document\" className={active(\"document\")}>Document</Button>\r\n        <Button id=\"training\" className={active(\"training\")}>Online training</Button>\r\n      </ButtonGroup>\r\n      {formType === 'document' && <DocumentForm /> }\r\n      {formType === 'training' && <TrainingForm /> }\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default AddRecordPage;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport {combinations, employees as e, records, types2} from \"../../helpers/data\";\r\nimport Select from 'react-select'\r\nimport {\r\n  getEmployeesNames,\r\n  isValidCombination,\r\n  prepareCombinations,\r\n  resolveCombinations,\r\n  setOf\r\n} from \"../../helpers/functions\";\r\n\r\nconst Filter = ({showSM, setShowSM, cs, e, found, handleSearch}) => {\r\n\r\n  const [filter, setFilter] = useState({\r\n    // type: [], record: [],\r\n    branches: [], cities: [],\r\n    departments: [], division: [],\r\n    // employeeName: '', superiorName: '',\r\n    // recordName: ''\r\n  });\r\n\r\n  const [select, setSelect] = useState()\r\n  const [toggle, setToggle] = useState([false])\r\n\r\n  const [branches, setbranches] = useState(setOf(cs.map(c => c.branches)));\r\n  const [divisions, setDivisions] = useState(setOf(cs.map(c => c.division)));\r\n  const [departments, setdepartments] = useState(setOf(cs.map(c => c.departments)));\r\n  const [cities, setCities] = useState(setOf(cs.map(c => c.cities)));\r\n\r\n  const handleSelect = (data, event) => {\r\n    const field = event.name\r\n    setFilter({...filter, [field]: data})\r\n    if (field !== 'removedEmployees'){\r\n      commitChanges(field)\r\n    }\r\n  }\r\n\r\n  const commitChanges = (select) => {\r\n    setSelect(select)\r\n    setToggle([!toggle[0]])\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!isValidCombination(filter)) {\r\n      setSelect('reset')\r\n    }\r\n    updateDropBox()\r\n  }, [toggle]);\r\n\r\n  const updateDropBox = () => {\r\n    let update = cs\r\n\r\n    // start of inner functions\r\n    function updateField(field) {\r\n      const values = filter[field].map(d => d.value)\r\n      if (values.length) {\r\n        update = update.filter(c => values.includes(c[field].value))\r\n      }\r\n      return values.length\r\n    }\r\n\r\n    const getSetOf = field => setOf(update.map(c => c[field]))\r\n\r\n    function setbranches() {setbranches(getSetOf('branches'))}\r\n    function setDivision() {setDivisions(getSetOf('division'))}\r\n    function setdepartments() {setdepartments(getSetOf('departments'))}\r\n    function setcities() {setCities(getSetOf('cities'))}\r\n    // end of inner functions\r\n\r\n    if (!updateField('branches')) setbranches()\r\n    if (!updateField('division')) setDivision()\r\n    if (!updateField('departments')) setdepartments()\r\n    if (!updateField('cities')) setcities()\r\n\r\n    if (select !== 'branches') setbranches()\r\n    if (select !== 'division') setDivision()\r\n    if (select !== 'departments') setdepartments()\r\n    if (select !== 'cities') setcities()\r\n  }\r\n\r\n  const search = () => {\r\n    console.log(filter)\r\n    const res = {\r\n      branches: filter.branches.map(v => v.value).join(','),\r\n      cities: filter.cities.map(v => v.value).join(','),\r\n      departments: filter.departments.map(v => v.value).join(','),\r\n      division: filter.division.map(v => v.value).join(',')\r\n    }\r\n    // const r = resolveCombinations([filter])\r\n    handleSearch(res)\r\n  }\r\n\r\n  const selector = (name, label, options) => {\r\n    return (\r\n      <Col>\r\n        <Select\r\n          isMulti={true}\r\n          name={name}\r\n          placeholder={label}\r\n          options={options}\r\n          onChange={(data, e) => handleSelect(data, e)}\r\n        />\r\n      </Col>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Form className=\"pb-4\">\r\n      <Row className='pb-2'>\r\n        { selector(\"type\", \"Types\", types2) }\r\n        { selector(\"branches\", \"branches\", branches) }\r\n        { selector(\"division\", \"Divisions\", divisions) }\r\n        { selector(\"departments\",\"departments\", departments) }\r\n        { selector(\"cities\",\"Cities\", cities) }\r\n        { selector(\"record\",\"Record\", records) }\r\n      </Row>\r\n      <Row>\r\n        { selector(\"employeeName\", \"Employee Name\", e) }\r\n        { selector(\"superiorName\", \"Superior Name\", e) }\r\n\r\n        {/* BUTTONS */}\r\n        <Col className=\"text-right\">\r\n          <Button className=\"mr-1\" onClick={search}>\r\n            Search\r\n          </Button>\r\n          <Button className=\"mr-1\"\r\n            disabled={!found.length}\r\n            onClick={() => setShowSM(!showSM)}\r\n          >\r\n            {`Show ${showSM ? 'table' : 'skillMatrix'}`}\r\n          </Button>\r\n          <Button disabled={!found.length}>\r\n            Export\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default Filter;\r\n\r\n","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport DocumentForm from \"../Forms/DocumentForm\";\r\nimport TrainingForm from \"../Forms/TrainingForm\";\r\nimport {recordType} from \"../../helpers/functions\";\r\n\r\nconst EditRecordModal = ({setRecords, formData, setFormData, actual}) => {\r\n\r\n  const closeModal = () => setFormData(undefined);\r\n  const type = recordType(formData)\r\n\r\n  const props = { setRecords, formData, setFormData, actual }\r\n\r\n  return (\r\n    <Modal show={true} onHide={closeModal} centered size=\"lg\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit {type}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {type === 'document'\r\n          ? <DocumentForm {...props} />\r\n          : <TrainingForm {...props} />\r\n        }\r\n      </Modal.Body>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default EditRecordModal;\r\n","import {Button} from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\nconst ReportBtn = (cell, row) => {\r\n\r\n  const handleClick = () => {\r\n    console.log('Show me the report') // TODO ME implement report\r\n  }\r\n\r\n  return(\r\n    <Button onClick={handleClick} size={\"sm\"}>\r\n      report\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ReportBtn;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport EditBtn from \"../Buttons/EditBtn\";\r\nimport EditRecordModal from \"../Modals/EditRecordModal\";\r\nimport ReportBtn from \"../Buttons/ReportBtn\";\r\nimport {buttonColumn, getCombinationsNames, getFieldName, orderBy} from \"../../helpers/functions\";\r\nimport EmptyTable from \"./EmptyTable\";\r\nimport {FormattedRelease} from \"../Others/Formatter\";\r\n\r\nconst FoundRecords = ({found, setFound, cs}) => {\r\n\r\n  const [formData, setFormData] = useState();\r\n\r\n  useEffect(() => {\r\n    if(found.length && cs.length) {\r\n      const rec = found.map(d => {\r\n        const [b_id, c_id, de_id, di_id] = d.assigned_to.split('; ')\r\n        const combination = cs.find(c =>\r\n          c.cities.value == c_id &&\r\n          c.branches.value == b_id &&\r\n          c.departments.value == de_id &&\r\n          c.division.value == di_id\r\n        )\r\n        if(combination) {\r\n          return {\r\n            ...d,\r\n            branches: combination.branches.label,\r\n            departments: combination.departments.label,\r\n            division: combination.division.label,\r\n            cities: combination.cities.label,\r\n            record_type: 'document'\r\n          }\r\n        }\r\n        return d\r\n      })\r\n      console.log(found)\r\n      setFound(rec)\r\n    }\r\n  }, [])\r\n\r\n  const columns = [\r\n  {\r\n    dataField: 'name',\r\n    text: \"Name\",\r\n    sort: true\r\n  }, {\r\n    dataField: 'release_date.Time',\r\n    text: 'Release',\r\n    formatter: FormattedRelease,\r\n    sort: true\r\n  }, {\r\n    dataField: 'type',\r\n    text: 'Type',\r\n    sort: true\r\n  }, {\r\n    dataField: 'branches',\r\n    text: 'branches',\r\n    sort: true\r\n  }, {\r\n    dataField: 'division',\r\n    text: 'Division',\r\n    sort: true\r\n  }, {\r\n    dataField: 'departments',\r\n    text: 'departments',\r\n    sort: true\r\n  }, {\r\n    dataField: 'cities',\r\n    text: 'cities',\r\n    sort: true\r\n  }, {\r\n    dataField: 'record_type',\r\n    text: 'Record Type',\r\n    sort: true\r\n  }, {\r\n    dataField: 'complete',\r\n    text: 'State',\r\n    sort: true\r\n  }, {\r\n    ...buttonColumn('EditBtn'),\r\n    formatter: EditBtn,\r\n    formatExtraData: {\r\n      setFormData: setFormData,\r\n    }\r\n  }, {\r\n    ...buttonColumn('ReportBtn'),\r\n    formatter: ReportBtn\r\n  }];\r\n\r\n  return (\r\n    <>\r\n      <BootstrapTable\r\n        keyField=\"id\"\r\n        hover\r\n        data={found}\r\n        columns={columns}\r\n        defaultSorted={orderBy('name')}\r\n        noDataIndication={EmptyTable}\r\n        // horizontal scroll\r\n        wrapperClasses=\"table-responsive\"\r\n        rowClasses=\"text-nowrap\"\r\n      />\r\n      {formData &&\r\n        <EditRecordModal\r\n          setRecords={setFound}\r\n          formData={formData}\r\n          setFormData={setFormData}\r\n          actual={true}\r\n        />\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FoundRecords;","import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nconst ToggleBtn = (c, row, rowIndex, {data, setData, id}) => {\r\n\r\n  const document = data[rowIndex]\r\n  const anet_id = document.employees[id].anet_id;\r\n  let state = document.employees[id].state;\r\n  const mark = state.includes('X');\r\n  if (mark) state = unMarkState();\r\n\r\n  function markState() {\r\n    console.log(\"mark\")\r\n    return 'X' + state\r\n  }\r\n\r\n  function unMarkState() {\r\n    console.log(\"un\")\r\n    if (state.length === 1 && state !== 'X')\r\n      return state\r\n    return state.substr(1)\r\n  }\r\n\r\n  const handleClick = () => {\r\n    const stt = mark ? unMarkState() : markState()\r\n\r\n    const new_employees = [...document.employees];\r\n    new_employees[id] = {\r\n      anet_id: anet_id,\r\n      state: stt\r\n    };\r\n    console.log(stt)\r\n    const new_data = [...data];\r\n    new_data[rowIndex] = {...document, employees: new_employees};\r\n\r\n    setData(new_data);\r\n  }\r\n\r\n  const getColor = (state) => {\r\n    switch (state){\r\n      case \"-\": return 'gray'\r\n      case \"_\": return 'cornflowerblue'\r\n      case \"es\": return 'tomato'\r\n      case \"e\": return 'orange'\r\n      case \"s\": return 'gold'\r\n      default: return 'green'\r\n      // TODO ME implement *\r\n    }\r\n  }\r\n\r\n  const getTextColor = (state) => state === \"s\" ? \"black\" : \"white\"\r\n\r\n  const getLabel = () => {\r\n    const labels = [\r\n      {state: \"-\", label: \"no need\"},\r\n      {state: \"es\", label: \"miss e+s\"},\r\n      {state: \"e\", label: \"miss e\"},\r\n      {state: \"s\", label: \"miss s\"},\r\n      {state: \"\", label: \"well done\"},\r\n      {state: \"X\", label: \"bug\"},\r\n      {state: \"_\", label: \"not send\"},\r\n    ]\r\n    return labels.find(l => l.state === state).label\r\n  }\r\n\r\n  const styledBtn = {\r\n    backgroundColor: getColor(state),\r\n    color: getTextColor(state),\r\n    borderColor: mark ? \"black\" : \"white\",\r\n    borderWidth: \"5px\",\r\n  }\r\n\r\n  return (\r\n    <Button style={styledBtn} onClick={handleClick} className=\"btn-block\">\r\n      {getLabel()}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default ToggleBtn;","import React from \"react\";\r\nimport {Button, ButtonGroup, Col, Row, Badge, Card} from \"react-bootstrap\";\r\nimport {ExclamationTriangle} from \"react-bootstrap-icons\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport {employees} from \"../../helpers/data\";\r\n\r\nexport const RowButtons = ({setAction, setModalInfo, setShowModal, handleAccept, showLegend, setShowLegend}) => {\r\n\r\n  const handleClick = (e) => {\r\n    const action = e.target.id\r\n    setAction(action)\r\n    if (action === \"cancel\") {\r\n      handleAccept()\r\n    } else {\r\n      setModalInfo({body:`Do you really want to ${action} selected signatures?`})\r\n      setShowModal(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row className=\"mb-3\">\r\n      <Col className=\"text-left\">\r\n        <ButtonGroup className=\"div-btn\" size=\"sm\">\r\n          {/* maybe https://react-bootstrap.github.io/components/overlays/ ? */}\r\n          <Button onClick={() => setShowLegend(!showLegend)}>\r\n            {showLegend ? 'Hide legend' : 'Show legend'}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Col>\r\n      <Col className=\"text-right\">\r\n        <ButtonGroup className=\"div-btn\" onClick={handleClick} size=\"sm\">\r\n          <Button id=\"sign\" size=\"sm\">Sign</Button>\r\n          <Button id=\"cancelDuty\" size=\"sm\">Cancel duty</Button>\r\n          <Button id=\"trainAgain\" size=\"sm\">Train again</Button>\r\n          <Button id=\"cancel\" size=\"sm\" onClick={handleClick}>Cancel</Button>\r\n        </ButtonGroup>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport const Legend = () => {\r\n\r\n  const Badge = ({color, textColor=\"white\", label, text}) => {\r\n    const style = {\r\n      background: color,\r\n      borderColor: color,\r\n      color: textColor,\r\n      width: \"80px\",\r\n      height: \"20px\",\r\n      fontSize: '.7rem',\r\n      fontWeight: 'bold',\r\n      padding: '0'\r\n    }\r\n    return <p><span><Button style={style}>{label}</Button>{` ${text}`}</span></p>\r\n  }\r\n\r\n  const cardStyle = {\r\n    width: '30rem',\r\n    marginTop: '1rem',\r\n    fontSize: '.7rem',\r\n    marginBottom: '.75rem',\r\n  }\r\n\r\n  return (\r\n    <Card style={cardStyle}>\r\n      <Card.Body>\r\n        <Card.Subtitle className=\"mb-3 text-muted\">Legend:</Card.Subtitle>\r\n        <Card.Text>\r\n          <Badge label=\"no need\" text=\"Zamestnanec bol odznačený z potreby oboznámenia\" color=\"gray\"/>\r\n          <Badge label=\"miss e+s\" text=\"Ani zamestnanec ani nadriadený ešte nepotvrdili\" color=\"tomato\"/>\r\n          <Badge label=\"miss e\" text=\"Zamestnanec nepotvrdil\" color=\"orange\"/>\r\n          <Badge label=\"miss s\" text=\"Nadriadený nepotvrdil\" color=\"gold\" textColor=\"white\"/>\r\n          <Badge label=\"well done\" text=\"Dokument je potvrdený\" color=\"green\"/>\r\n          <Badge label=\"not sent\" text=\"Este neodoslane\" color=\"cornflowerblue\"/>\r\n          <p><ExclamationTriangle style={{color: \"red\", marginBottom: \"4px\"}}/>{' '}Uplynul deadline a chýbajú podpisy</p>\r\n          <p>hviezdička <strong>*</strong> znamena, ze zamestnanec sa opakovane preškoluje</p>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport {sm_data, employees} from \"../../helpers/data\";\r\nimport ToggleBtn from \"../Buttons/ToggleBtn\";\r\nimport ConfirmModal from \"../Modals/ConfirmModal\";\r\nimport {Legend, RowButtons} from \"../Others/SkillMatrixComponents\";\r\nimport {buttonColumn} from \"../../helpers/functions\";\r\nimport {DocumentLabel, FormattedEmployee} from \"../Others/Formatter\";\r\n\r\nconst SkillMatrix = ({found}) => {\r\n\r\n  const [showLegend, setShowLegend] = useState(false)\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [modalInfo, setModalInfo] = useState({})\r\n  const [action, setAction] = useState(\"\")\r\n\r\n  const [data, setData] = useState(sm_data) // found\r\n  const columns = loadColumns()\r\n  function loadColumns() {\r\n    const columns = [{\r\n      dataField: 'name',\r\n      text: 'Document Name',\r\n      formatter: DocumentLabel\r\n    }];\r\n\r\n    let counter = 0;\r\n\r\n    employees.forEach(e => {\r\n      columns.push({\r\n        ...buttonColumn(e.id, e.name),\r\n        formatter: ToggleBtn,\r\n        headerFormatter: FormattedEmployee,\r\n        headerTitle: (col, row) => employees[row-1].job,\r\n        formatExtraData: {\r\n          data: data,\r\n          setData: setData,\r\n          id: (counter++ % employees.length)\r\n        }\r\n      })\r\n    })\r\n\r\n    return columns\r\n  }\r\n\r\n  function changedState(e) {\r\n    return e.state.includes('X')\r\n  }\r\n\r\n  function sing(state) {\r\n    return state.replace('s', '')\r\n  }\r\n\r\n  function cancelSign() {\r\n    return '-'\r\n  }\r\n\r\n  function resetSign(document, state){\r\n    // TODO treba vediet kedy ma aj superior podpisovat\r\n    return state.includes('s') ? 'es' : 'e'\r\n  }\r\n\r\n  function updateState(d, e) {\r\n    if (!changedState(e)) return e\r\n    // else\r\n    let state = e.state.replace('X', '')\r\n    if (action === 'sign')\r\n      state = sing(state)\r\n    if (action === 'cancelDuty')\r\n      state = cancelSign()\r\n    if (action === 'trainAgain')\r\n      state = resetSign(d, state)\r\n    return {...e, state: state} // updated employee\r\n  }\r\n\r\n  const handleAccept = () => {\r\n    const update = data.map(d => {\r\n      return {\r\n        ...d,\r\n        employees: d.employees.map(e => updateState(d, e))\r\n      }\r\n    })\r\n    setData(update)\r\n  };\r\n\r\n  const handleExport = () => {\r\n    // TODO implement export\r\n    console.log('export is not implemented')\r\n  };\r\n\r\n  // if (error) {\r\n  //   return <FetchError e={`Error: ${error.message}`}/>;\r\n  // } else if (!isLoaded) {\r\n  //   return <FetchLoading/>;\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <BootstrapTable\r\n        keyField=\"id\"\r\n        classes=\"skill-matrix-table\"\r\n        data={data}\r\n        columns={columns}\r\n        // horizontal scroll\r\n        wrapperClasses=\"table-responsive\"\r\n        rowClasses=\"text-nowrap\"\r\n      />\r\n      <RowButtons\r\n        setAction={setAction}\r\n        setModalInfo={setModalInfo}\r\n        setShowModal={setShowModal}\r\n        handleAccept={handleAccept}\r\n        handleExport={handleExport}\r\n        showLegend={showLegend}\r\n        setShowLegend={setShowLegend}\r\n      />\r\n      {showLegend &&\r\n        <Legend/>\r\n      }\r\n      {showModal &&\r\n        <ConfirmModal\r\n          showModal={showModal}\r\n          setShowModal={setShowModal}\r\n          modalInfo={modalInfo}\r\n          handleAccept={handleAccept}\r\n        />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SkillMatrix","import React, {useEffect, useState} from \"react\";\r\nimport Filter from \"../Others/Filter\";\r\nimport FoundRecords from \"../Tables/FoundRecords\";\r\nimport SkillMatrix from \"../Tables/SkillMatrix\";\r\nimport {prepareEmployees, myFetch, prepareCombinations} from \"../../helpers/functions\";\r\n\r\nconst FinderPage = () => {\r\n\r\n  const [showSkillMatrix, setShowSkillMatrix] = useState(false)\r\n\r\n  const [cs, setCs] = useState([]);\r\n  useEffect(() => {\r\n    fetch('/combinations', {\r\n      method: \"GET\",\r\n    })\r\n      .then(response => response.json())\r\n      .then(res => {\r\n        const combs = prepareCombinations(res)\r\n        setCs(combs)\r\n      })\r\n      .catch((e) => console.log(e))\r\n  },[])\r\n\r\n  const [e, setE] = useState([]);\r\n  useEffect(() => {\r\n    fetch('/employees/all', {\r\n      method: \"GET\",\r\n    })\r\n    .then(response => response.json())\r\n    .then(res => {\r\n      setE(prepareEmployees(res))\r\n    })\r\n    .catch((e) => console.log(e))\r\n  },[])\r\n\r\n  const [found, setFound] = useState([])\r\n  useEffect(() => {\r\n    myFetch(\"/document/actual\")\r\n      .then(data => setFound(data))\r\n  }, [])\r\n\r\n  const handleSearch = (filter) => {\r\n    console.log(filter)\r\n    fetch(`/document/filter`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(filter)\r\n    })\r\n    .then(res => res.json())\r\n    .then(r => prepareFoundRec(r))\r\n  }\r\n\r\n  const prepareFoundRec = (found) => {\r\n    console.log('a')\r\n    if(found.length && cs.length) {\r\n      console.log('b')\r\n      const rec = found.map(d => {\r\n        const [b_id, c_id, de_id, di_id] = d.assigned_to.split('; ')\r\n        const combination = cs.find(c =>\r\n          c.cities.value == c_id &&\r\n          c.branches.value == b_id &&\r\n          c.departments.value == de_id &&\r\n          c.division.value == di_id\r\n        )\r\n        if(combination) {\r\n          return {\r\n            ...d,\r\n            branches: combination.branches.label,\r\n            departments: combination.departments.label,\r\n            division: combination.division.label,\r\n            cities: combination.cities.label,\r\n            record_type: 'document'\r\n          }\r\n        }\r\n        return d\r\n      })\r\n      console.log(found)\r\n      setFound(rec)\r\n    }\r\n  }\r\n\r\n  if (!cs.length) return <h1>Loading.. combinations</h1>\r\n  if (!e.length) return <h1>Loading.. employees</h1>\r\n  if (!found.length) return <h1>Loading.. records</h1>\r\n\r\n  return (\r\n    <div style={{marginTop: '1%'}} className=\"finder\">\r\n      <Filter\r\n        showSM={showSkillMatrix}\r\n        setShowSM={setShowSkillMatrix}\r\n        cs={cs}\r\n        e={e}\r\n        found={found}\r\n        handleSearch={handleSearch}\r\n      />\r\n      {showSkillMatrix\r\n        ? <SkillMatrix\r\n            found={found}\r\n          />\r\n        : <FoundRecords\r\n            found={found}\r\n            setFound={setFound}\r\n            cs={cs}\r\n          />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FinderPage;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {Button, Form, Row, Alert} from \"react-bootstrap\";\r\nimport {ExclamationTriangle} from 'react-bootstrap-icons';\r\n\r\nconst SettingsPage = ({submitError}) => {\r\n\r\n  const [divisions, setDivisions] = useState({})\r\n  const [cardsFile, setCards] = useState(null)\r\n  const [employeesFile, setEmployees] = useState({})\r\n  const [cardsError, setCardsError] = useState(\"\")\r\n  const [employeesError, setEmployeesError] = useState(\"\")\r\n  const [showDeleted, setShowDeleted] = useState(null)\r\n\r\n  const OK = \"OK\"\r\n\r\n  useEffect(() => {\r\n    let sessionDel = sessionStorage.getItem('showDeleted')\r\n    if(sessionDel === null) {\r\n      sessionStorage.setItem('showDeleted', false)\r\n    } else if(showDeleted === null) {\r\n      setShowDeleted(sessionDel)\r\n    } else {\r\n      document.getElementById('checkShowDeleted').checked = JSON.parse(showDeleted)\r\n      sessionStorage.setItem('showDeleted', showDeleted)\r\n    }\r\n  }, [showDeleted])\r\n\r\n  useEffect(() => {\r\n    fetch('/divisions', {\r\n      method: 'get',\r\n      mode: 'no-cors'\r\n    }).then(\r\n      result => result.json()\r\n    ).then(result => {\r\n      renderDivs(result)\r\n      setDivisions(result)\r\n    })\r\n\r\n  }, [])\r\n\r\n  const renderDivs = (result) => {\r\n    let select = document.getElementById(\"selectDivision\")\r\n    for(let i=0; i<result.length; i++) {\r\n      let name = result[i]['name']\r\n      let value = result[i]['id']\r\n      let option = new Option(name, value)\r\n      select.options.add(option)\r\n    }\r\n  }\r\n\r\n\r\n  const placeholderOption = () => {\r\n    return (\r\n      <option key={-1} disabled value=\"default\">Select pobocka</option>\r\n    )\r\n  }\r\n\r\n  const createMenu = () => {\r\n    let menu = []\r\n    menu.push(placeholderOption())\r\n    return menu\r\n  }\r\n\r\n  const changeCards = (e) => setCards(e.target.files[0])\r\n\r\n  const uploadCards = (e) => {\r\n    clearErrors()\r\n    const data = new FormData();\r\n    let name = `kiosk_upload_${Date.now()}`\r\n\r\n    data.append('file', cardsFile)\r\n    data.append('name', name)\r\n\r\n    console.log(cardsFile)\r\n\r\n    if(cardsFile!=null) {\r\n      fetch(\"http://localhost:7777/file/upload\", {\r\n        mode: 'no-cors',\r\n        method: \"POST\",\r\n        body: data\r\n      }).then(function (res) {\r\n        setCardsError(OK)\r\n        if (res.ok) {\r\n          alert(\"Perfect! \");\r\n        } else if (res.status === 401) {\r\n          alert(\"Oops! \");\r\n        }\r\n      }, function (e) {\r\n        alert(\"Error submitting form!\");\r\n      });\r\n    } else {\r\n      let msg = \"File not set\"\r\n      setCardsError(msg)\r\n    }\r\n  }\r\n\r\n  const changeEmployees = (e) => setEmployees(e.target.files[0])\r\n\r\n  const uploadEmployees = (e) => {\r\n    clearErrors()\r\n\r\n    const data = new FormData();\r\n    let name = `employees_upload_${Date.now()}`\r\n\r\n    const select = document.getElementById(\"selectDivision\");\r\n    const divId = select.value;\r\n\r\n    if(divId !== \"default\" && employeesFile.name !== undefined) {\r\n      data.append('file', employeesFile)\r\n      data.append('name', name)\r\n      data.append('division', divId)\r\n\r\n      fetch(\"http://localhost:7777/file/upload\", {\r\n        mode: 'no-cors',\r\n        method: \"POST\",\r\n        body: data\r\n      }).then(function (res) {\r\n        setEmployeesError(OK)\r\n        if (res.ok) {\r\n          alert(\"Perfect! \");\r\n        } else if (res.status === 401) {\r\n          alert(\"Oops! \");\r\n        }\r\n      }, function (e) {\r\n        alert(\"Error submitting form!\");\r\n      });\r\n    } else {\r\n      let msg = \"\"\r\n      if(divId === \"default\") msg = \"Division is not set\"\r\n      else msg = \"File is not set\"\r\n      setEmployeesError(msg)\r\n    }\r\n  }\r\n\r\n  const renderError = (msg) => {\r\n    return (\r\n      <Alert variant=\"danger\" style={{color: \"red\"}}>\r\n        <ExclamationTriangle size=\"18\" style={{margin: \"5px\", padding: \"5px\"}}/> {msg}\r\n      </Alert >\r\n    )\r\n  }\r\n\r\n  const renderOk = () => {\r\n    let msg = \"Successfully uploaded.\"\r\n    return (\r\n      <Alert variant=\"success\" style={{color: \"green\"}}>\r\n        <ExclamationTriangle size=\"18\" style={{margin: \"5px\", padding: \"5px\"}}/> {msg}\r\n      </Alert >\r\n    )\r\n  }\r\n\r\n  const clearErrors = () => {\r\n    setEmployeesError(\"\")\r\n    setCardsError(\"\")\r\n  }\r\n  const isError = (what) => what !== \"\" && what !== OK\r\n  const isOk = (what) => what === OK\r\n\r\n  const changeShowDeleted = () => {\r\n    setShowDeleted(!showDeleted)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <script crossOrigin=\"true\"/>\r\n      <Form className=\"pl-3\">\r\n        <Row className=\"pt-3\">Choose division</Row>\r\n        <Row>\r\n          <select defaultValue=\"default\" id=\"selectDivision\">\r\n            {createMenu()}\r\n          </select>\r\n        </Row>\r\n        <Row className=\"pt-3\">\r\n          <input type=\"file\" required onChange={changeEmployees}/>\r\n        </Row>\r\n        <Row className=\"pt-3\">\r\n          <Button type=\"button\" onClick={uploadEmployees} >Upload</Button>\r\n        </Row>\r\n        { isError(employeesError) && renderError(employeesError)}\r\n        { isOk(employeesError) && renderOk()}\r\n      </Form>\r\n\r\n      <Form className=\"pt-5\">\r\n        <p>Upload file with employee card information.</p>\r\n        <Form.Group>\r\n          <Form.File id=\"cardsFile\" label=\"Select file.\" onChange={changeCards}/>\r\n        </Form.Group>\r\n        <Button type=\"button\" onClick={uploadCards}>Upload</Button>\r\n        { isError(cardsError) && renderError(cardsError)}\r\n        { isOk(cardsError) && renderOk()}\r\n      </Form>\r\n      <div className=\"form-check\">\r\n        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"checkShowDeleted\" onClick={changeShowDeleted}/>\r\n        <label className=\"form-check-label\" htmlFor=\"checkShowDeleted\">\r\n          Show deleted employees.\r\n        </label>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SettingsPage;\r\n\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router\";\r\nimport {removeUser} from \"../../helpers/functions\";\r\n\r\nconst LogoutPage = () => {\r\n\r\n  removeUser();\r\n\r\n  return <Redirect to=\"/login\"/>\r\n};\r\n\r\nexport default LogoutPage;\r\n","class IdleTimer {\r\n\r\n  constructor({ timeout, onTimeout }) {\r\n    this.timeout = timeout;\r\n    this.onTimeout = onTimeout;\r\n\r\n    this.eventHandler = this.updateExpiredTime.bind(this);\r\n    this.tracker();\r\n    this.startInterval();\r\n  }\r\n\r\n  startInterval() {\r\n    this.updateExpiredTime();\r\n\r\n    this.interval = setInterval(() => {\r\n      const expiredTime = parseInt(localStorage.getItem(\"_expiredTime\"), 10);\r\n      if (expiredTime < Date.now()) {\r\n        if (this.onTimeout) {\r\n          this.onTimeout();\r\n          this.cleanUp();\r\n        }\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  updateExpiredTime() {\r\n    if (this.timeoutTracker) {\r\n      clearTimeout(this.timeoutTracker);\r\n    }\r\n    this.timeoutTracker = setTimeout(() => {\r\n      localStorage.setItem(\"_expiredTime\", Date.now() + this.timeout * 1000);\r\n    }, 300);\r\n  }\r\n\r\n  tracker() {\r\n    window.addEventListener(\"mousemove\", this.eventHandler);\r\n    window.addEventListener(\"scroll\", this.eventHandler);\r\n    window.addEventListener(\"keydown\", this.eventHandler);\r\n  }\r\n\r\n  cleanUp() {\r\n    localStorage.removeItem(\"_expiredTime\");\r\n    clearInterval(this.interval);\r\n    window.removeEventListener(\"mousemove\", this.eventHandler);\r\n    window.removeEventListener(\"scroll\", this.eventHandler);\r\n    window.removeEventListener(\"keydown\", this.eventHandler);\r\n  }\r\n}\r\nexport default IdleTimer;\r\n","import React, {useEffect, useState} from 'react';\r\nimport MyBootstrapTable from \"../Tables/MyBootstrapTable\";\r\nimport {savedDocumentsColumns, savedTrainingsColumns} from \"../Tables/columns\";\r\nimport useDataApi from \"../../helpers/useDataApi\";\r\nimport {FetchError, FetchLoading} from \"../Others/FetchComponents\";\r\nimport {orderBy, recordType} from \"../../helpers/functions\";\r\nimport {CustomAlert} from \"../Others/CustomAlert\";\r\nimport EditRecordModal from \"../Modals/EditRecordModal\";\r\n\r\nconst SavedRecordsPage = () => {\r\n\r\n  const [doc_data, isLoaded, error] = useDataApi('/document/edited');\r\n  const [trn_data, isLoaded2, error2] = useDataApi('/training/edited');\r\n\r\n  const [documents, setDocuments] = useState([]);\r\n  const [trainings, setTrainings] = useState([]);\r\n\r\n  const [notification, setNotification] = useState()\r\n  const [formData, setFormData] = useState()\r\n\r\n  useEffect(() => {\r\n    if (doc_data && trn_data) {\r\n      setDocuments(doc_data)\r\n      setTrainings(trn_data)\r\n    }\r\n  }, [doc_data, trn_data]);\r\n\r\n\r\n  if (error) {\r\n    return <FetchError e={`Error: ${error.message}`} />\r\n  } else if (error2) {\r\n    return <FetchError e={`Error: ${error2.message}`} />\r\n  } else if (!isLoaded || !doc_data || !isLoaded2 || !trn_data) {\r\n    return <FetchLoading/>\r\n  }\r\n\r\n  const trn_columns = savedTrainingsColumns(setFormData, setTrainings, setNotification)\r\n  const doc_columns = savedDocumentsColumns(setFormData, setDocuments, setNotification)\r\n\r\n  return (\r\n    <>\r\n      {/* DOCUMENTS */}\r\n      <MyBootstrapTable\r\n        title=\"Saved trainings\"\r\n        data={documents}\r\n        columns={doc_columns}\r\n        order={orderBy('deadline.Time')}\r\n      />\r\n      {/* TRAININGS */}\r\n      <MyBootstrapTable\r\n        title=\"Saved documents\"\r\n        data={trainings}\r\n        columns={trn_columns}\r\n        order={orderBy('deadline.Time')}\r\n      />\r\n      {notification &&\r\n        <CustomAlert notification={notification}/>\r\n      }\r\n      {formData &&\r\n        <EditRecordModal\r\n          setRecords={recordType(formData) === 'document'\r\n            ? setDocuments\r\n            : setTrainings\r\n          }\r\n          formData={formData}\r\n          setFormData={setFormData}\r\n        />\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SavedRecordsPage;","import React from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst Page404 = () => {\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"pt-5\">Error 404 page not found</h2>\r\n      <h5 className=\"pt-3\">\r\n        Not match for <code>{useLocation().pathname}</code>\r\n      </h5>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Page404","import React, {useEffect} from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\nimport {Redirect} from \"react-router\";\r\n\r\nimport './App.css';\r\nimport LoginPage from \"./components/Pages/LoginPage.jsx\";\r\nimport Navigation from \"./components/Others/Navigation.jsx\";\r\nimport RecordsToSignPage from \"./components/Pages/RecordsToSignPage.jsx\";\r\nimport SignedRecordsPage from \"./components/Pages/SignedRecordsPage.jsx\";\r\nimport AddRecordPage from \"./components/Pages/AddRecordPage.jsx\";\r\nimport FinderPage from \"./components/Pages/FinderPage.jsx\";\r\nimport SettingsPage from \"./components/Pages/SettingsPage.jsx\";\r\nimport LogoutPage from \"./components/Pages/LogoutPage\";\r\nimport {isAdmin, getUser, removeUser} from \"./helpers/functions\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport IdleTimer from \"./helpers/IdleTimer\";\r\nimport SavedRecordsPage from \"./components/Pages/SavedRecordsPage\";\r\nimport Page404 from \"./components/Pages/Page404\";\r\nimport {TIMEOUT} from \"./config/config\";\r\n\r\nfunction App() {\r\n\r\n  const user = getUser()\r\n  const admin = isAdmin()\r\n\r\n  /** Set timer to logout not active user after TIMEOUT expired\r\n   *  onTimeOut the user will be logout and redirect to /login\r\n   *  - TIMEOUT can be changed in /config folder */\r\n  useEffect(() => {\r\n    const timer = new IdleTimer({\r\n      timeout: TIMEOUT,\r\n      onTimeout: () => {\r\n        if (user !== null) {\r\n          removeUser()\r\n          window.location.reload(false) // reload page\r\n        }\r\n      }\r\n    })\r\n\r\n    return () => { timer.cleanUp() }\r\n  }, [])\r\n\r\n  /** Show the component only when the user is logged in\r\n   *  Otherwise, redirect the user to login page */\r\n  const Private = ({ component: Component, ...rest }) => {\r\n    if (user === null) {\r\n      return <Redirect to=\"/login\" />\r\n    }\r\n    return <Route {...rest} render={props => <Component {...props} />} />\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <Navigation/>\r\n      <Container>\r\n        <Switch>\r\n          {/* HomeRoute */}\r\n          <Route exact path=\"/\"\r\n            render={() => {\r\n             return ( getUser() !== null\r\n               ? <Redirect to=\"/records-to-sign\" component={RecordsToSignPage}/>\r\n               : <Redirect to=\"/login\" component={LoginPage}/>\r\n             )}}\r\n          />\r\n          <Route path='/login' component={LoginPage}/>\r\n          <Route path='/logout' component={LogoutPage}/>\r\n          {/* Private Routes */}\r\n          <Private path=\"/records-to-sign\" component={RecordsToSignPage}/>\r\n          <Private path=\"/signed-records\" component={SignedRecordsPage}/>\r\n          {/* Admin Routes */}\r\n          { admin && <>\r\n            <Private path=\"/add-record\" component={AddRecordPage}/>\r\n            <Private path=\"/saved-record\" component={SavedRecordsPage}/>\r\n            <Private path=\"/settings\" component={SettingsPage}/>\r\n          </> }\r\n          {/* Not matched paths */}\r\n          <Route path=\"*\" component={Page404}/>\r\n        </Switch>\r\n      </Container>\r\n      <div className=\"large-container\">\r\n        {/* Routes with larger width then Container */}\r\n        {admin && <Private path=\"/finder\" component={FinderPage}/>}\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","\r\nconst minutes = 10 // TODO move to db\r\n\r\nexport const TIMEOUT = 60 * minutes","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}