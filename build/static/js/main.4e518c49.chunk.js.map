{"version":3,"sources":["utils/data.js","utils/functions.js","components/Tables/MyBootstrapTable.jsx","utils/Formatter.jsx","components/Buttons/TableBtns.jsx","components/FetchComponents.jsx","utils/useDataApi.js","components/Modals/ConfirmModal.jsx","unsigned-records/RecordsToSignPage.jsx","unsigned-records/columns.js","components/CustomAlert.jsx","utils/wording.js","login/LoginForm.jsx","login/LoginPage.jsx","login/LogoutPage.jsx","signed-records/SignedRecordsPage.jsx","signed-records/columns.js","components/Forms/MyFormGroup.jsx","components/Forms/CombinationForm.jsx","components/Modals/CombinationModal.jsx","components/Tables/Combinations.jsx","components/Forms/DocumentForm.jsx","components/Forms/TrainingForm.jsx","add-record/AddRecordPage.jsx","components/Buttons/EditBtn.jsx","components/Buttons/SendBtn.jsx","components/Modals/EditRecordModal.jsx","saved-records/SavedRecordsPage.jsx","saved-records/columns.js","settings/SettingsPage.jsx","finder/Filter.jsx","finder/skill-matrix/ToggleBtn.jsx","finder/skill-matrix/SkillMatrixComponents.jsx","finder/skill-matrix/SkillMatrix.jsx","finder/report/ReportBtn.jsx","finder/FoundDocuments.jsx","finder/FoundTrainings.jsx","finder/FoundRecords.jsx","finder/FinderPage.jsx","finder/report/ReportPage.jsx","Page404.jsx","Routes.jsx","images/logo.png","Navigation.jsx","utils/IdleTimer.js","App.js","index.js"],"names":["proxy_url","comboFields","comboFieldsSingular","types","buttonColumn","field","text","dataField","sort","headerStyle","width","recordType","record","Object","keys","includes","require_superior","rec","nonExpandableDocs","documents","map","doc","id","orderBy","order","getUser","JSON","parse","sessionStorage","getItem","removeUser","removeItem","isAdmin","role","goodMsg","body","variant","badMsg","successResponse","response","status","getFormID","form","getSelectOptions","hidden","value","uuid","prepareCombinations","combinations","c","combination","forEach","label","getOptionsForSelect","pairs","branches","n","name","divisions","departments","cities","getState","sign","cancel","state","e_date","Valid","s_date","getAssignedTo","document","employees","assigned_to","split","e","combs","remEms","values","i","push","getFieldName","removedEmployees","e_ids","console","log","getEmployeeName","find","f","toString","getEmployeeLabel","getDateObject","date","Time","getDateString","substr","resolveCombinations","c_string","length","join","r_string","sortByName","a","b","last_name","employee","first_name","department_id","dep","d","prepareFoundDocs","found","getLabels","cs","labels","Set","flat","doc_cs","getFetch","url","fetch","method","then","result","json","redirectTo","path","window","location","replace","MyBootstrapTable","title","data","columns","expandRow","classes","rest","TableHeader","style","borderRadius","textAlign","border","margin","padding","marginTop","keyField","hover","noDataIndication","defaultSorted","FullName","_","format_date","reverse","FormattedDate","row","FormattedDeadline","deadline","FormattedRelease","release_date","FormattedSuperiorDate","FormattedTrainingDate","signatures","FormattedEmployeeDate","Percentage","Math","round","complete","NameWithLink","href","target","rel","DocumentLabel","ExclamationName","color","marginBottom","expired","Date","now","MissedBtn","cell","index","setModalInfo","setShowModal","asSuperior","Button","onClick","size","className","SignedBtn","FetchLoading","Spinner","animation","FetchError","useDataApi","useState","setData","error","setError","isLoaded","setIsLoaded","useEffect","res","ConfirmModal","showModal","modalInfo","handleAccept","closeModal","Modal","show","onHide","centered","Header","closeButton","Title","Body","Footer","RecordsToSignPage","URL","trainings","setTrainings","setDocuments","message","fetchSign","URLSearchParams","signAsEmployee","sign_id","record_type","updateTrainings","updateEmployeeDocs","signAsSuperior","signature_id","updateSuperiorDocs","filter","t","update","s","trn_columns","formatter","formatExtraData","trainingsToSignColumns","doc_columns","documentsToSignColumns","expandColumns","documentsToSignExpandColumns","onlyOneExpanding","nonExpandable","renderer","CustomAlert","notification","Alert","wording","sk","loginPage","header","login","password","submit","wrongLogin","wrongCard","navigation","recordsToSign","signedRecords","addRecord","savedRecords","finder","settings","logout","en","LoginForm","onSubmit","language","setLanguage","useForm","register","handleSubmit","active","Container","Form","align","ButtonGroup","disabled","Group","Label","Control","ref","required","type","LoginPage","setNotification","cardInput","cardInputTimeout","setTimeout","checkInput","findByCard","clearTimeout","event","engInput","String","fromCharCode","keyCode","toLowerCase","isLetter","isNumber","isValuable","addEventListener","removeEventListener","setUser","user","setItem","stringify","reload","input","catch","to","LogoutPage","SignedRecordsPage","documentsColumns","trainingsColumns","MyFormGroup","placeholder","as","Row","column","sm","Col","CombinationForm","prefill","setCombination","useContext","PairContext","options","handleSelect","selector","opt","isMulti","defaultValue","isDisabled","onChange","CombinationModal","setAssignedTo","setEmptyAssign","setDisabled","setEmployees","preview","assignedTo","resolveEmployees","prev","undefined","prevState","Combinations","setPrefill","openModal","AddIcon","OverlayTrigger","placement","overlay","Tooltip","editCombination","deleteCombination","wrapperClasses","rowClasses","DocumentForm","setRecords","formData","setFormData","actual","defaultValues","action","setAction","selectedType","setSelectedType","currentID","setCurrentID","setCombinations","emptyAssign","upsert","upsertConfirm","filterSavedRec","p","updateSavedRec","findIndex","correctDocumentFormData","r","validate","v","Check","inline","valueAsNumber","TrainingForm","attendees","setAttendees","emptyAttendees","setEmptyAttendees","getEmployeesNames","correctTrainingFormData","labelKey","multiple","selected","AddRecordPage","formType","setFormType","EditBtn","SendBtn","setSavedRec","EditRecordModal","props","SavedRecordsPage","doc_data","trn_data","isLoaded2","error2","savedTrainingsColumns","savedDocumentsColumns","SettingsPage","submitError","cardsFile","setCards","employeesFile","cardsError","setCardsError","employeesError","setEmployeesError","showDeleted","setShowDeleted","sessionDel","getElementById","checked","renderError","msg","renderOk","clearErrors","isError","what","isOk","crossOrigin","files","FormData","append","ok","alert","initFilter","Filter","em","es","setEm","showSM","setShowSM","matrixByFilter","matrixBySuperior","searchByEmployee","searchByCombination","setFilter","bref","useRef","diref","deref","cref","eref","resetHalfOfFilter","resetEmployee","current","select","clearValue","handleSearch","branch","city","department","division","handleEmployeeSearch","xs","toggle","ToggleBtn","rowIndex","mark","unMarkState","styledBtn","backgroundColor","getColor","borderColor","borderWidth","stt","new_employees","copy","l","getLabel","RowButtons","showLegend","setShowLegend","handleClick","Legend","Badge","textColor","background","height","fontSize","fontWeight","Card","Subtitle","Text","SkillMatrix","docs","sample","ems","prepareSMData","counter","job_title","getColumns","changedState","resetSign","updateState","handleExport","ReportBtn","FoundDocuments","setFound","FoundTrainings","setReport","FoundRecords","FinderPage","setCs","setEs","SMData","setSMData","resetTables","addCompleteness","records","percentage","superior","ReportPage","search","setRecord","getDate","query","parseInt","Page404","pathname","useLocation","Routes","admin","Private","Component","component","exact","render","Navigation","x","LoginNav","NavLink","LogoutNav","Name","Navbar","expand","bg","sticky","Brand","alt","src","logo","Toggle","Collapse","Nav","activeKey","IdleTimer","timeout","onTimeout","this","eventHandler","updateExpiredTime","bind","tracker","startInterval","interval","setInterval","localStorage","cleanUp","timeoutTracker","clearInterval","createContext","App","setPairs","_pairs","timer","Provider","ReactDOM"],"mappings":"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","file":"static/js/main.4e518c49.chunk.js","sourcesContent":["export const proxy_url = \"http://5.178.48.91:8180\";\n\nexport const TIMEOUT = 60 * 10; // 10 minutes\n\nexport const comboFields = [\"branches\", \"cities\", \"departments\", \"divisions\"];\nexport const comboFieldsSingular = [\"branch\", \"city\", \"department\", \"division\"];\n\nexport const types = [\"TPK\", \"OS\", \"PP\", \"PL\"];\n","import React from \"react\";\nimport uuid from \"react-uuid\";\nimport { comboFields, comboFieldsSingular } from \"./data\";\nimport { proxy_url } from \"./data\";\n\n// Tables\nexport const buttonColumn = (field = \"\", text = \"\") => {\n  return {\n    dataField: \"\" + field,\n    text: text,\n    sort: true,\n    headerStyle: { width: \"1%\" },\n  };\n};\n\nexport const recordType = (record) => {\n  return Object.keys(record).includes(\"link\") ? \"document\" : \"training\";\n};\n\nexport const require_superior = (rec) => rec.require_superior === true;\n\nexport const nonExpandableDocs = (documents) => {\n  return documents.map((doc) => {\n    if (!require_superior(doc)) return doc.id;\n  });\n};\n\nexport const orderBy = (field, order = \"asc\") => {\n  return [{ dataField: field, order: order }];\n};\n\n// Authentication\nexport const setUser = (user) =>\n  sessionStorage.setItem(\"user\", JSON.stringify(user));\nexport const getUser = () => JSON.parse(sessionStorage.getItem(\"user\"));\nexport const removeUser = () => sessionStorage.removeItem(\"user\");\nexport const isAdmin = () => getUser() !== null && getUser().role === \"admin\";\n\n// Helpers\nexport const goodMsg = (body) => {\n  return { variant: \"success\", body: body };\n};\n\nexport const badMsg = (body) => {\n  return { variant: \"danger\", body: body };\n};\n\nexport const successResponse = (response) => {\n  return 200 <= response.status && response.status <= 299;\n};\n\nexport const getLanguage = () => JSON.parse(sessionStorage.getItem(\"language\"));\nexport const delay = (ms) => new Promise((res) => setTimeout(res, ms));\n\n// Add record forms\nexport const getFormID = (form) => (form ? form.id : 0);\n\nexport const getSelectOptions = (field) => {\n  return (\n    <>\n      <option hidden value=\"\">\n        Select option ...\n      </option>\n      {field.map((value) => (\n        <option value={value} key={uuid()}>\n          {value}\n        </option>\n      ))}\n    </>\n  );\n};\n\nexport const setOf = (array) => {\n  const set = [];\n  array.forEach((arr) => {\n    if (!set.find((res) => res.value === arr.value)) set.push(arr);\n  });\n  return set; // array of unique objects by their .value\n};\n\nexport const emptyCombination = (combination) => {\n  return comboFields.every((field) => combination[field].length === 0);\n};\n\nexport const prepareCombinations = (combinations) => {\n  return combinations.map((c) => {\n    const combination = {};\n    comboFieldsSingular.forEach((field) => {\n      combination[field] = {\n        value: c[`${field}_id`],\n        label: c[`${field}_name`],\n      };\n    });\n    return combination;\n  });\n};\n\nexport const getOptionsForSelect = (pairs) => {\n  return {\n    branches: pairs.branches.map((n) => {\n      return { value: n.id, label: n.name };\n    }),\n    divisions: pairs.divisions.map((n) => {\n      return { value: n.id, label: n.name };\n    }),\n    departments: pairs.departments.map((n) => {\n      return { value: n.id, label: n.name };\n    }),\n    cities: pairs.cities.map((n) => {\n      return { value: n.id, label: n.name };\n    }),\n  };\n};\n\nexport const resolveFilter = (f) => {\n  return {\n    branch: f.branches.map((v) => v.value).join(\",\"),\n    city: f.cities.map((v) => v.value).join(\",\"),\n    department: f.departments.map((v) => v.value).join(\",\"),\n    division: f.divisions.map((v) => v.value).join(\",\"),\n  };\n};\n\nfunction getState(sign, require_superior) {\n  if (sign.cancel) return \"-\";\n  let state = sign.e_date.Valid ? \"\" : \"e\";\n  if (require_superior && !sign.s_date.Valid) {\n    state += \"s\";\n  }\n  return state;\n}\n\nexport const prepareSMData = (docs) => {\n  return docs.map((doc) => {\n    return {\n      id: doc.id,\n      name: doc.name,\n      require_superior: doc.require_superior,\n      deadline: doc.deadline.Time,\n      employees: doc.signatures\n        .filter((sign) => sign.employee !== null)\n        .map((sign) => {\n          return {\n            id: sign.employee.id,\n            sign_id: sign.id,\n            state: getState(sign, doc.require_superior),\n          };\n        }),\n    };\n  });\n};\n\nexport const getAssignedTo = (document, pairs, employees) => {\n  if (!document) return [];\n\n  return document.assigned_to.split(\"&\").map((e) => {\n    const [combs, remEms, _] = e.split(\"#\");\n    const values = combs.split(\"; \");\n    const combination = { id: uuid() };\n\n    comboFields.forEach((field, i) => {\n      combination[field] = [];\n      if (values[i] !== \"x\") {\n        const ids = values[i].split(\",\");\n        ids.forEach((id) => {\n          combination[field].push({\n            value: id,\n            label: getFieldName(field, id, pairs),\n          });\n        });\n      }\n    });\n    combination.removedEmployees = [];\n    if (!remEms) return combination;\n\n    const e_ids = remEms.split(\",\");\n    console.log(e_ids);\n    e_ids.forEach((id) => {\n      combination.removedEmployees.push({\n        value: id,\n        label: getEmployeeName(id, employees, pairs.departments),\n      });\n    });\n    console.log(combination);\n    return combination;\n  });\n};\n\nexport const getFieldName = (field, id, pairs) => {\n  return pairs[field].find((f) => f.id == id)?.name;\n};\n\nexport const getEmployeeName = (id, employees, departments) => {\n  if (!employees) return \"unknown\";\n  const e = employees.find((e) => e.id.toString() === id);\n  if (!e) return \"unknown\";\n  return getEmployeeLabel(e, departments);\n};\n\nexport const getSingularFieldName = (field) => {\n  switch (field) {\n    case \"branches\":\n      return \"branch\";\n    case \"divisions\":\n      return \"division\";\n    case \"departments\":\n      return \"department\";\n    case \"cities\":\n      return \"city\";\n  }\n};\n\nexport const getEmployeesNames = (formData, employees) => {\n  employees = sortByName(employees);\n  if (!formData || !formData.employees) return [];\n  return formData.employees\n    .split(\",\")\n    .map((a) => employees.find((e) => e.id == a));\n};\n\nexport const prefillDocumentForm = (data) => {\n  if (!data) return {};\n  return {\n    ...data,\n    release_date: getDateString(data.release_date),\n    deadline: getDateString(data.deadline),\n  };\n};\n\nexport const prefillTrainingForm = (data) => {\n  if (!data) return {};\n  return {\n    ...data,\n    date: getDateString(data.date),\n    deadline: getDateString(data.deadline),\n  };\n};\n\nexport const correctTrainingFormData = (data, attendees) => {\n  return {\n    ...data,\n    date: getDateObject(data.date),\n    deadline: getDateObject(data.deadline),\n    employees: attendees.map((a) => a.id).join(\",\"),\n  };\n};\n\nexport const correctDocumentFormData = (data, combinations) => {\n  return {\n    ...data,\n    release_date: getDateObject(data.release_date),\n    deadline: getDateObject(data.deadline),\n    assigned_to: resolveCombinations(combinations),\n  };\n};\n\nconst getDateObject = (date) => {\n  return {\n    Time: date + \"T00:00:00Z\",\n    Valid: true,\n  };\n};\n\nconst getDateString = (date) => date.Time.substr(0, 10);\n\nexport const resolveCombinations = (combinations) => {\n  // TODO\n  const n = combinations.map((combination) => {\n    let c_string = comboFields\n      .map((field) => {\n        const values = combination[field];\n        console.log(\"values\", values);\n        if (!values.length) return \"x\";\n        return values.map((c) => c.value).join(\",\");\n      })\n      .join(\"; \");\n    const r_string = combination.removedEmployees.map((c) => c.value).join(\",\");\n    return `${c_string}#${r_string}#`;\n  });\n  console.log(n);\n  return n.join(\"&\");\n};\n\nexport const sortByName = (employees) => {\n  return employees.sort(function (a, b) {\n    if (a.last_name < b.last_name) {\n      return -1;\n    }\n    if (a.last_name > b.last_name) {\n      return 1;\n    }\n    return 0;\n  });\n};\n\nexport const prepareEmployees = (employees, departments) => {\n  employees = sortByName(employees);\n  return employees.map((e) => {\n    return {\n      value: e.id,\n      label: getEmployeeLabel(e, departments),\n    };\n  });\n};\n\nexport const getEmployeeLabel = (employee, departments) => {\n  const { id, first_name, last_name, department_id } = employee;\n  const dep = departments.find((d) => d.id === department_id)?.name;\n  return `${first_name} ${last_name} [${id}, ${dep}]`;\n};\n\nexport const prepareFoundDocs = (found, pairs) => {\n  if (!found.length) return [];\n\n  function getLabels(cs, field) {\n    const labels = cs.map((c) => c[field].map((f) => f.label));\n    const unique = [...new Set(labels.flat())];\n    // if (unique[0] === undefined) {\n    //   return \"*\";\n    // }\n    return unique.join(\", \");\n  }\n\n  return found.map((doc) => {\n    const doc_cs = getAssignedTo(doc, pairs);\n    return {\n      ...doc,\n      branches: getLabels(doc_cs, \"branches\"),\n      cities: getLabels(doc_cs, \"cities\"),\n      divisions: getLabels(doc_cs, \"divisions\"),\n      departments: getLabels(doc_cs, \"departments\"),\n    };\n  });\n};\n\n// fetch\nexport const getFetch = (url) => {\n  return fetch(proxy_url + url, {\n    method: \"GET\",\n  }).then((result) => result.json());\n};\n\nexport const postFetch = (url, body) => {\n  return fetch(proxy_url +url, {\n    method: \"POST\",\n    body: body,\n  }).then((result) => result.json());\n};\n\nexport const reloadPage = () => window.location.reload(false);\nexport const redirectTo = (path) => window.location.replace(path);\n","import BootstrapTable from \"react-bootstrap-table-next\";\nimport React from \"react\";\n\nconst MyBootstrapTable = ({\n  title,\n  data,\n  columns,\n  order,\n  expandRow,\n  classes,\n  ...rest\n}) => {\n  const TableHeader = () => {\n    if (!title) return null;\n    return (\n      <h3\n        style={{\n          borderRadius: \"0.25em\",\n          textAlign: \"center\",\n          border: \"2px solid gray\",\n          margin: \"2% 0\",\n          padding: \"0.5em\",\n          marginTop: \"1.5%\",\n        }}\n      >\n        {title}\n      </h3>\n    );\n  };\n\n  const EmptyTable = () => <p>Table is empty</p>\n\n  return (\n    <>\n      <TableHeader />\n      <BootstrapTable\n        keyField=\"id\"\n        hover\n        classes={classes}\n        data={data}\n        columns={columns}\n        noDataIndication={EmptyTable}\n        defaultSorted={order}\n        expandRow={expandRow}\n        {...rest}\n      />\n    </>\n  );\n};\n\nexport default MyBootstrapTable;\n","import React from \"react\";\nimport { ExclamationTriangle } from \"react-bootstrap-icons\";\n\n/** Couple of simple formatting functions to displays some cells of table  */\nexport const FullName = (_, { employee }) => {\n  if (!employee) return;\n\n  return (\n    <>\n      {employee.first_name} {employee.last_name}\n    </>\n  );\n};\n\nexport const format_date = (date) => {\n  const { Time, Valid } = date;\n  if (!Valid) return \"-\";\n  return Time.substr(0, 10).split(\"-\").reverse().join(\".\");\n};\n\nexport const FormattedDate = (_, row) => {\n  return <>{format_date(row.date)}</>;\n};\n\nexport const FormattedDeadline = (_, row) => {\n  return <>{format_date(row.deadline)}</>;\n};\n\nexport const FormattedRelease = (_, row) => {\n  return <>{format_date(row.release_date)}</>;\n};\n\nexport const FormattedSuperiorDate = (_, row) => {\n  return <>{format_date(row.s_date)}</>;\n};\n\nexport const FormattedTrainingDate = (_, row) => {\n  return <>{format_date(row.signatures[0].date)}</>;\n};\n\nexport const FormattedEmployeeDate = (_, row) => {\n  return <>{format_date(row.e_date)}</>;\n};\n\nexport const Percentage = (_, row) =>\n  Math.round(row.complete * 100) / 100 + \"%\";\n\nexport const NameWithLink = (_, row) => {\n  return (\n    <a href={row.name} target=\"_blank\" rel=\"noreferrer\">\n      {row.name}\n    </a>\n  );\n};\n\nexport const DocumentLabel = (_, row) => {\n  const ExclamationName = () => (\n    <h5>\n      <ExclamationTriangle style={{ color: \"red\", marginBottom: \"6px\" }} />{\" \"}\n      {NameWithLink(_, row)}\n    </h5>\n  );\n\n  const expired =\n    row.deadline < Date.now() &&\n    row.employees.find((e) => e.state.includes(\"e\") || e.state.includes(\"s\"));\n\n  return <>{expired ? <ExclamationName /> : NameWithLink(_, row)}</>;\n};\n\nexport const FormattedEmployee = (_, row) => {\n  // const employee = employees[row-1]\n  const employee = {};\n  const percentage = 100; // TODO implement\n  return (\n    <div style={{ fontSize: \"12px\" }}>\n      {employee.name}, {employee.job}, {percentage}%\n    </div>\n  );\n};\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { require_superior } from \"../../utils/functions\";\nimport { FormattedEmployeeDate } from \"../../utils/Formatter\";\n\nexport const MissedBtn = (\n  cell,\n  row,\n  index,\n  { setModalInfo, setShowModal, asSuperior }\n) => {\n  const handleClick = () => {\n    console.log(row);\n    if (require_superior(row)) {\n      return;\n    }\n    setShowModal(true);\n    setModalInfo({\n      ...row,\n      asSuperior: asSuperior,\n    });\n  };\n\n  return (\n    <Button onClick={handleClick} size=\"sm\" className=\"btn-block\">\n      {require_superior(row) ? \"Details\" : \"Sign\"}\n    </Button>\n  );\n};\n\nexport const SignedBtn = (cell, row) => {\n  return require_superior(row) ? (\n    <Button size=\"sm\">Details</Button>\n  ) : (\n    FormattedEmployeeDate(cell, row.signatures[0])\n  );\n};\n","import React from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nexport const FetchLoading = () => <Spinner animation=\"border\" className=\"m-5\"/>\nexport const FetchError = ({e}) => <h6 className=\"p-5\">{e}</h6>","import React, { useEffect, useState } from \"react\";\nimport { proxy_url } from \"./data\";\n\n/** Universal fetch with GET method and error and loading state */\nconst useDataApi = (url) => {\n  const [data, setData] = useState();\n  const [error, setError] = useState();\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    console.log(\"url\", url);\n    fetch(proxy_url +url, {\n      method: \"GET\",\n    })\n      .then((response) => response.json())\n      .then(\n        (res) => {\n          setIsLoaded(true);\n          setData(res);\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []); // Runs once\n\n  return [data, isLoaded, error];\n};\n\nexport default useDataApi;\n","import React from \"react\";\nimport {Button, Modal} from \"react-bootstrap\";\n\nconst ConfirmModal = ({showModal, setShowModal, modalInfo, handleAccept}) => {\n\n  const closeModal = () => setShowModal(false);\n\n  const onAccept = () => {\n    handleAccept();\n    closeModal();\n  };\n\n  const employeeName =()=> `${modalInfo.employee.first_name} ${modalInfo.employee.last_name}`\n\n  return (\n    <Modal show={showModal} onHide={closeModal} centered>\n      <Modal.Header closeButton>\n        <Modal.Title>Confirm</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {modalInfo.asSuperior\n          ? <p>{`Do you really want do sign for ${employeeName()}`}</p>\n          : <p>{`Do you really want do sign the document named ${modalInfo.name}`}</p>\n        }\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"danger\" onClick={onAccept}>Accept</Button>\n        <Button variant=\"secondary\" onClick={closeModal}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default ConfirmModal;\n","import React, { useEffect, useState } from \"react\";\nimport MyBootstrapTable from \"../components/Tables/MyBootstrapTable\";\nimport {\n  documentsToSignColumns,\n  documentsToSignExpandColumns,\n  trainingsToSignColumns,\n} from \"./columns\";\nimport {\n  getUser,\n  nonExpandableDocs,\n  orderBy,\n  recordType,\n  successResponse,\n} from \"../utils/functions\";\nimport { FetchError, FetchLoading } from \"../components/FetchComponents\";\nimport useDataApi from \"../utils/useDataApi\";\nimport ConfirmModal from \"../components/Modals/ConfirmModal\";\nimport { proxy_url } from \"../utils/data\";\n\nconst RecordsToSignPage = () => {\n  const URL = `/unsigned/signatures/${getUser().id}`;\n  const [data, isLoaded, error] = useDataApi(URL);\n\n  const [showModal, setShowModal] = useState(false);\n  const [modalInfo, setModalInfo] = useState([]);\n\n  const [trainings, setTrainings] = useState([]);\n  const [documents, setDocuments] = useState([]);\n\n  useEffect(() => {\n    if (data) {\n      setDocuments(data.documents);\n      setTrainings(data.trainings);\n    }\n  }, [data]);\n\n  if (error) {\n    return <FetchError e={`Error: ${error.message}`} />;\n  } else if (!isLoaded || !data) {\n    return <FetchLoading />;\n  }\n\n  const handleAccept = () => {\n    if (modalInfo.asSuperior) {\n      signAsSuperior(modalInfo.id);\n    } else {\n      signAsEmployee(modalInfo.signatures[0].id);\n    }\n    setShowModal(false);\n  };\n\n  /** Update sign date to Date.now()\n   * @param url:\n   *    '/sign' update employee date\n   *    '/sign/superior' update superior date\n   * @param id: id of the document_signature\n   * */\n  const fetchSign = (url, id) => {\n    return fetch(proxy_url +url, {\n      method: \"POST\",\n      body: new URLSearchParams(`id=${id}`),\n    });\n  };\n\n  const signAsEmployee = (sign_id) => {\n    const record_type = recordType(modalInfo);\n    fetchSign(`/sign/${record_type}`, sign_id).then((res) => {\n      if (successResponse(res)) {\n        if (record_type === \"training\") updateTrainings(sign_id);\n        else updateEmployeeDocs(sign_id);\n      }\n    });\n  };\n\n  const signAsSuperior = (signature_id) => {\n    fetchSign(\"/sign/superior\", signature_id).then((res) => {\n      if (successResponse(res)) {\n        updateSuperiorDocs(signature_id);\n      }\n    });\n  };\n\n  const updateTrainings = (signature_id) => {\n    setTrainings(trainings.filter((t) => t.signatures[0].id !== signature_id));\n  };\n\n  const updateEmployeeDocs = (signature_id) => {\n    setDocuments(documents.filter((d) => d.signatures[0].id !== signature_id));\n  };\n\n  const updateSuperiorDocs = (signature_id) => {\n    const update = documents.map((d) => {\n      return {\n        ...d,\n        signatures: d.signatures.filter((s) => s.id !== signature_id),\n      };\n    });\n    setDocuments(update.filter((d) => d.signatures.length));\n  };\n\n  const trn_columns = trainingsToSignColumns(setModalInfo, setShowModal);\n  const doc_columns = documentsToSignColumns(setModalInfo, setShowModal);\n  const expandColumns = documentsToSignExpandColumns(\n    setModalInfo,\n    setShowModal\n  );\n\n  const expandRow = {\n    onlyOneExpanding: true,\n    nonExpandable: nonExpandableDocs(documents),\n    renderer: (cell) => (\n      <MyBootstrapTable\n        classes=\"inner-table\"\n        data={cell.signatures}\n        columns={expandColumns}\n        order={orderBy(\"employee.last_name\")}\n      />\n    ),\n  };\n\n  console.log(data);\n\n  return (\n    <>\n      {/* DOCUMENTS */}\n      <MyBootstrapTable\n        title=\"Documents to sign\"\n        data={documents}\n        columns={doc_columns}\n        order={orderBy(\"deadline.Time\")}\n        expandRow={expandRow}\n      />\n      {/* TRAININGS */}\n      <MyBootstrapTable\n        title=\"Trainings to sign\"\n        data={trainings}\n        columns={trn_columns}\n        order={orderBy(\"deadline.Time\")}\n      />\n      <ConfirmModal\n        showModal={showModal}\n        setShowModal={setShowModal}\n        modalInfo={modalInfo}\n        handleAccept={handleAccept}\n      />\n    </>\n  );\n};\n\nexport default RecordsToSignPage;\n","import {\n  FormattedDate,\n  FormattedDeadline,\n  FormattedEmployeeDate,\n  FormattedRelease,\n  FullName,\n  NameWithLink,\n} from \"../utils/Formatter\";\nimport { MissedBtn } from \"../components/Buttons/TableBtns\";\nimport { buttonColumn } from \"../utils/functions\";\n\nexport const trainingsToSignColumns = (setModalInfo, setShowModal) => [\n  {\n    dataField: \"name\",\n    text: \"Name\",\n    sort: true,\n  },\n  {\n    dataField: \"date.Time\",\n    text: \"Date\",\n    sort: true,\n    formatter: FormattedDate,\n  },\n  {\n    dataField: \"deadline.Time\",\n    text: \"Deadline\",\n    sort: true,\n    formatter: FormattedDeadline,\n  },\n  {\n    ...buttonColumn(),\n    formatter: MissedBtn,\n    formatExtraData: {\n      setModalInfo: setModalInfo,\n      setShowModal: setShowModal,\n    },\n  },\n];\n\nexport const documentsToSignColumns = (setModalInfo, setShowModal) => [\n  {\n    dataField: \"name\",\n    text: \"Name\",\n    sort: true,\n    formatter: NameWithLink,\n  },\n  {\n    dataField: \"release_date.Time\",\n    text: \"Release\",\n    sort: true,\n    formatter: FormattedRelease,\n  },\n  {\n    dataField: \"deadline.Time\",\n    text: \"Deadline\",\n    sort: true,\n    formatter: FormattedDeadline,\n  },\n  {\n    ...buttonColumn(),\n    formatter: MissedBtn,\n    formatExtraData: {\n      setModalInfo: setModalInfo,\n      setShowModal: setShowModal,\n      asSuperior: false,\n    },\n  },\n];\n\nexport const documentsToSignExpandColumns = (setModalInfo, setShowModal) => [\n  {\n    dataField: \"employee.id\",\n    text: \"Employee ID\",\n    sort: true,\n  },\n  {\n    dataField: \"employee.last_name\",\n    text: \"Full name\",\n    sort: true,\n    formatter: FullName,\n  },\n  {\n    dataField: \"e_date.Time\",\n    text: \"Sign Date\",\n    sort: true,\n    formatter: FormattedEmployeeDate,\n  },\n  {\n    ...buttonColumn(),\n    formatter: MissedBtn,\n    formatExtraData: {\n      setModalInfo: setModalInfo,\n      setShowModal: setShowModal,\n      asSuperior: true,\n    },\n  },\n];\n","import Alert from \"react-bootstrap/Alert\";\n\nexport const CustomAlert = ({notification}) => {\n\n  if (!notification) return null\n\n  return <Alert variant={notification.variant}>{notification.body}</Alert>\n}","export const wording = {\n  sk: {\n    loginPage: {\n      header: \"Prihlasovanie\",\n      login: \"Login\",\n      password: \"Heslo\",\n      submit: \"Prihlásiť sa\",\n      notification: {\n        wrongLogin: \"Zlé prihlasovacie údaje\",\n        wrongCard: \"Nepodarilo sa prihlásenie kartou\",\n      },\n    },\n    navigation: {\n      login: \"Prihlasit sa\",\n      recordsToSign: \"Na podpísanie\",\n      signedRecords: \"Podpísané\",\n      addRecord: \"Pridať\",\n      savedRecords: \"Uložené\",\n      finder: \"Vyhľadávanie\",\n      settings: \"Nastavenia\",\n      logout: \"Odhlásiť sa\",\n    },\n  },\n  en: {\n    loginPage: {\n      header: \"Login\",\n      login: \"Login\",\n      password: \"Password\",\n      submit: \"Login\",\n      notification: {\n        wrongLogin: \"Wrong login input\",\n        wrongCard: \"Wrong card input\",\n      },\n    },\n    navigation: {\n      login: \"Login\",\n      recordsToSign: \"To sign\",\n      signedRecords: \"Signed\",\n      addRecord: \"Add new\",\n      savedRecords: \"Saved\",\n      finder: \"Finder\",\n      settings: \"Settings\",\n      logout: \"Logout\",\n    },\n  },\n};\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Button, ButtonGroup, Form, Container } from \"react-bootstrap\";\nimport { CustomAlert } from \"../components/CustomAlert\";\nimport { wording } from \"../utils/wording\";\n\nconst LoginForm = ({ onSubmit, language, setLanguage, notification }) => {\n  const { register, handleSubmit } = useForm();\n\n  const active = (id) => language === id;\n  const changeLanguage = (e) => setLanguage(e.target.id);\n\n  // TODO https://www.npmjs.com/package/react-i18next\n  const { header, login, password, submit } = wording[language].loginPage;\n\n  // jeden subor:\n  // sk[TX_PASS] = \"heslo\";\n  // druhy subor:\n  // en[TX_PASS] = \"password\";\n  // treti subor:\n  // const TX_PASS = 1;\n  // vsetky konstanty\n  // var tx = sk;\n\n  return (\n    <Container className=\"login-container\">\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        {/* HEADER */}\n        <h3 align=\"center\">{header}</h3>\n        {/* LANGUAGE BTN */}\n        <ButtonGroup\n          onClick={changeLanguage}\n          className=\"container-fluid p-0 mt-4 mb-5 btn-group\"\n        >\n          <Button id=\"sk\" active={active(\"sk\")}>\n            Slovak\n          </Button>\n          <Button id=\"cz\" active={active(\"cz\")} disabled>\n            Czech\n          </Button>\n          <Button id=\"en\" active={active(\"en\")}>\n            English\n          </Button>\n          <Button id=\"hu\" active={active(\"hu\")} disabled>\n            Hungary\n          </Button>\n        </ButtonGroup>\n        {/* NAME */}\n        <Form.Group>\n          <Form.Label>{login}</Form.Label>\n          <Form.Control name=\"login\" ref={register} required />\n        </Form.Group>\n        {/* PASS */}\n        <Form.Group>\n          <Form.Label>{password}</Form.Label>\n          <Form.Control\n            name=\"password\"\n            type=\"password\"\n            ref={register}\n            required\n          />\n        </Form.Group>\n        {/* ALERT */}\n        {notification && <CustomAlert notification={notification} />}\n        {/* SUBMIT BTN */}\n        <Button type=\"submit\" variant=\"dark\" className=\"btn-block\">\n          {submit}\n        </Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default LoginForm;\n","import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport LoginForm from \"./LoginForm\";\nimport { badMsg, getUser, reloadPage } from \"../utils/functions\";\nimport { wording } from \"../utils/wording\";\nimport { proxy_url } from \"../utils/data\";\n\nconst LoginPage = () => {\n  const [notification, setNotification] = useState();\n  const [language, setLanguage] = useState(\"sk\");\n\n  const {\n    notification: { wrongLogin, wrongCard },\n  } = wording[language].loginPage;\n\n  let cardInput = \"\";\n  const maxCardInputTimeDifference = 40;\n  const cardInputLength = 10;\n  let t = cardInputTimeout();\n  clearTimeout(t);\n\n  function cardInputTimeout() {\n    return setTimeout(checkInput, maxCardInputTimeDifference);\n  }\n\n  function isLetter(e) {\n    let aKeycode = 65;\n    let zKeycode = 90;\n    return e.keyCode >= aKeycode && e.keyCode <= zKeycode;\n  }\n\n  function isNumber(e) {\n    let zeroKeycode = 48;\n    let nineKeycode = 57;\n    return e.keyCode >= zeroKeycode && e.keyCode <= nineKeycode;\n  }\n\n  function isValuable(e) {\n    return isLetter(e) || isNumber(e);\n  }\n\n  function resetCardInput() {\n    cardInput = \"\";\n  }\n\n  function checkInput() {\n    if (cardInput.length === cardInputLength) {\n      findByCard(cardInput);\n    }\n    resetCardInput();\n  }\n\n  const event = (e) => {\n    let engInput = String.fromCharCode(e.keyCode).toLowerCase();\n    if (isValuable(e)) {\n      cardInput += engInput;\n      clearTimeout(t);\n      t = cardInputTimeout();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", event);\n    return () => document.removeEventListener(\"keydown\", event); // cleanup\n  });\n\n  const setUser = (data) => {\n    const user = {\n      id: data.id,\n      role: data.role,\n      first_name: data.first_name,\n      last_name: data.last_name,\n    };\n    // console.log(data);\n    sessionStorage.setItem(\"user\", JSON.stringify(user));\n    reloadPage();\n  };\n\n  const onSubmit = (data) => {\n    fetch(proxy_url + \"/auth/login\", {\n      method: \"POST\",\n      body: new URLSearchParams(\n        `login=${data.login}&password=${data.password}`\n      ),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setUser(data);\n      })\n      .catch(() => setNotification(badMsg(wrongLogin)));\n  };\n\n  const findByCard = (input) => {\n    fetch(proxy_url + \"/auth/kiosk\", {\n      method: \"POST\",\n      body: new URLSearchParams(`card=${input}`),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setUser(data);\n      })\n      .catch(() => setNotification(badMsg(wrongCard)));\n  };\n\n  if (getUser()) {\n    return <Redirect to=\"/records-to-sign\" />;\n  }\n  return (\n    <LoginForm\n      onSubmit={onSubmit}\n      language={language}\n      setLanguage={setLanguage}\n      notification={notification}\n    />\n  );\n};\n\nexport default LoginPage;\n","import React from \"react\";\nimport { Redirect } from \"react-router\";\nimport { removeUser } from \"../utils/functions\";\n\nconst LogoutPage = () => {\n  removeUser();\n\n  return <Redirect to=\"/login\" />;\n};\n\nexport default LogoutPage;\n","import React from \"react\";\nimport { getUser, nonExpandableDocs, orderBy } from \"../utils/functions\";\nimport useDataApi from \"../utils/useDataApi\";\nimport { FetchError, FetchLoading } from \"../components/FetchComponents\";\nimport MyBootstrapTable from \"../components/Tables/MyBootstrapTable\";\nimport {\n  signedDocumentsColumns,\n  signedDocumentsExpandColumns,\n  signedTrainingsExpandColumns,\n} from \"./columns\";\n\nconst SignedRecordsPage = () => {\n  const URL = `/signed/signatures/${getUser().id}`;\n  const [data, isLoaded, error] = useDataApi(URL);\n\n  if (error) {\n    return <FetchError e={`Error: ${error.message}`} />;\n  } else if (!isLoaded || !data) {\n    return <FetchLoading />;\n  }\n\n  const documentsColumns = signedDocumentsColumns();\n  const expandColumns = signedDocumentsExpandColumns();\n\n  const trainingsColumns = signedTrainingsExpandColumns();\n\n  const expandRow = {\n    onlyOneExpanding: true,\n    nonExpandable: nonExpandableDocs(data.documents),\n    renderer: (cell) => (\n      <MyBootstrapTable\n        classes=\"inner-table\"\n        data={cell.signatures}\n        columns={expandColumns}\n        order={orderBy(\"employee.last_name\")}\n      />\n    ),\n  };\n\n  return (\n    <>\n      <MyBootstrapTable\n        title=\"Signed Documents\"\n        data={data.documents}\n        columns={documentsColumns}\n        expandRow={expandRow}\n        order={orderBy(\"release_date.Time\", \"desc\")}\n      />\n      <MyBootstrapTable\n        title=\"Signed Trainings\"\n        data={data.trainings}\n        columns={trainingsColumns}\n        order={orderBy(\"date.Time\", \"desc\")}\n      />\n    </>\n  );\n};\n\nexport default SignedRecordsPage;\n","import {\n  FormattedDate,\n  FormattedEmployeeDate,\n  FormattedRelease,\n  FormattedSuperiorDate,\n  FormattedTrainingDate,\n  FullName,\n  NameWithLink,\n} from \"../utils/Formatter\";\nimport { SignedBtn } from \"../components/Buttons/TableBtns\";\n\nexport const signedDocumentsColumns = () => [\n  {\n    dataField: \"name\",\n    text: \"Name\",\n    sort: true,\n    formatter: NameWithLink,\n  },\n  {\n    dataField: \"release_date.Time\",\n    text: \"Release\",\n    sort: true,\n    formatter: FormattedRelease,\n  },\n  {\n    dataField: \"signatures[0].e_date.Time\",\n    text: \"Signed date\",\n    sort: true,\n    formatter: SignedBtn,\n  },\n];\n\nexport const signedDocumentsExpandColumns = () => [\n  {\n    dataField: \"employee.id\",\n    text: \"Employee ID\",\n    sort: true,\n  },\n  {\n    dataField: \"employee.last_name\",\n    text: \"Full name\",\n    sort: true,\n    formatter: FullName,\n  },\n  {\n    dataField: \"e_date.Time\",\n    text: \"Employee Sign\",\n    sort: true,\n    formatter: FormattedEmployeeDate,\n  },\n  {\n    dataField: \"s_date.Time\",\n    text: \"My Sign\",\n    sort: true,\n    formatter: FormattedSuperiorDate,\n  },\n];\n\nexport const signedTrainingsExpandColumns = () => [\n  {\n    dataField: \"name\",\n    text: \"Name\",\n    sort: true,\n  },\n  {\n    dataField: \"date.Time\",\n    text: \"Took place\",\n    sort: true,\n    formatter: FormattedDate,\n  },\n  {\n    dataField: \"signatures[0].date.Time\", // always array with length of 1 [by SQL query]\n    text: \"Signed date\",\n    sort: true,\n    formatter: FormattedTrainingDate,\n  },\n];\n","import { Col, Form, Row } from \"react-bootstrap\";\nimport React from \"react\";\n\nconst MyFormGroup = ({\n  label,\n  name,\n  placeholder,\n  type,\n  register,\n  as,\n  required,\n}) => {\n  return (\n    <Form.Group as={Row}>\n      <Form.Label column sm=\"3\">\n        {label}\n      </Form.Label>\n      <Col>\n        <Form.Control\n          name={name}\n          placeholder={placeholder}\n          ref={register}\n          type={type}\n          as={as}\n          required={required}\n        />\n      </Col>\n    </Form.Group>\n  );\n};\n\nexport default MyFormGroup;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Select from \"react-select\";\nimport { CustomAlert } from \"../CustomAlert\";\nimport { PairContext } from \"../../App\";\nimport { getOptionsForSelect } from \"../../utils/functions\";\n\nconst CombinationForm = ({\n  prefill,\n  disabled,\n  employees,\n  combinations: cs,\n  combination,\n  setCombination,\n  notification,\n}) => {\n  console.log(cs);\n\n  const pairs = useContext(PairContext);\n  const options = getOptionsForSelect(pairs);\n\n  const handleSelect = (data, { name: field }) => {\n    setCombination({ ...combination, [field]: data });\n  };\n\n  const selector = (name, label, opt = options[name]) => (\n    <>\n      {label}\n      <Select\n        isMulti={true}\n        placeholder=\"\"\n        name={name}\n        options={opt}\n        defaultValue={prefill ? prefill[name] : []}\n        isDisabled={\n          (prefill && name !== \"removedEmployees\") || disabled.includes(name)\n        }\n        onChange={(data, e) => handleSelect(data, e)}\n      />\n      <br />\n    </>\n  );\n\n  return (\n    <Col className=\"p-0\">\n      {selector(\"branches\", \"Branches\")}\n      {selector(\"divisions\", \"Divisions\")}\n      {selector(\"departments\", \"Departments\")}\n      {selector(\"cities\", \"Cities\")}\n      {employees && selector(\"removedEmployees\", \"Remove employees\", employees)}\n      {notification && <CustomAlert notification={notification} />}\n    </Col>\n  );\n};\n\nexport default CombinationForm;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Col, Container, Modal } from \"react-bootstrap\";\nimport CombinationForm from \"../Forms/CombinationForm\";\nimport uuid from \"react-uuid\";\nimport {\n  badMsg,\n  getEmployeeLabel,\n  getFetch,\n  resolveCombinations,\n} from \"../../utils/functions\";\nimport { PairContext } from \"../../App\";\nimport { comboFields } from \"../../utils/data\";\n\nconst CombinationModal = ({\n  prefill,\n  combinations,\n  setAssignedTo,\n  setEmptyAssign,\n  closeModal,\n}) => {\n  const pairs = useContext(PairContext);\n\n  const [disabled, setDisabled] = useState([]);\n  const [notification, setNotification] = useState();\n  const [employees, setEmployees] = useState();\n  const [combination, setCombination] = useState(\n    prefill\n      ? prefill\n      : {\n          branches: [],\n          divisions: [],\n          departments: [],\n          cities: [],\n          removedEmployees: [],\n        }\n  );\n\n  useEffect(() => {\n    if (prefill) {\n      preview();\n    }\n  }, []);\n\n  function preview() {\n    setDisabled(comboFields);\n    console.log(combination);\n    const assignedTo = resolveCombinations([combination]);\n    console.log(assignedTo);\n    getFetch(`/employees/${assignedTo}`)\n      .then((data) => {\n        console.log(data);\n        if (!data.length) {\n          setNotification(badMsg(\"not valid combination\"));\n          return;\n        }\n        resolveEmployees(data);\n      })\n      .catch((e) => {\n        setNotification(badMsg(\"not valid combination\"));\n        console.log(\"Errrrrrrrrrrror\", e);\n      });\n  }\n\n  const resolveEmployees = (data) => {\n    setEmployees(\n      data.map((d) => {\n        return {\n          value: d.id,\n          label: getEmployeeLabel(d, pairs.departments),\n        };\n      })\n    );\n  };\n\n  const save = () => {\n    setAssignedTo((prev) => {\n      return prev.map((c) => {\n        if (c.id === prefill?.id) {\n          return { ...combination, id: uuid() };\n        }\n        return c;\n      });\n    });\n\n    closeModal();\n  };\n\n  const add = () => {\n    const assignedTo = resolveCombinations([combination]);\n    getFetch(`/employees/${assignedTo}`)\n      .then((data) => {\n        if (!data.length) {\n          setNotification(badMsg(\"not valid combination\"));\n          return;\n        }\n\n        setNotification(undefined);\n        setEmptyAssign([false]);\n\n        setAssignedTo((prevState) => {\n          return [...prevState, { ...combination, id: uuid() }];\n        });\n\n        closeModal();\n      })\n      .catch((e) => {\n        setNotification(badMsg(\"not valid combination\"));\n        console.log(\"Errrrrrrrrrrror\", e);\n      });\n  };\n\n  return (\n    <Modal show={true} onHide={closeModal} centered>\n      <Container className=\"pt-3 pb-3 pl-5 pr-5\">\n        <Modal.Header closeButton>\n          <Modal.Title>Add new combination</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <CombinationForm\n            prefill={prefill}\n            disabled={disabled}\n            employees={employees}\n            combinations={combinations}\n            combination={combination}\n            setCombination={setCombination}\n            notification={notification}\n            setNotification={setNotification}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Col className=\"text-center\">\n            {prefill ? (\n              <Button onClick={save} size=\"sm\" className=\"mr-2\">\n                Save\n              </Button>\n            ) : (\n              <>\n                <Button onClick={preview} size=\"sm\" className=\"mr-2\">\n                  Preview\n                </Button>\n                <Button onClick={add} size=\"sm\" className=\"mr-2\">\n                  Add\n                </Button>\n              </>\n            )}\n            <Button onClick={closeModal} variant=\"secondary\" size=\"sm\">\n              close\n            </Button>\n          </Col>\n        </Modal.Footer>\n      </Container>\n    </Modal>\n  );\n};\n\nexport default CombinationModal;\n","import React, { useState } from \"react\";\nimport { Plus, XSquare, Pencil } from \"react-bootstrap-icons\";\nimport CombinationModal from \"../Modals/CombinationModal\";\nimport Button from \"react-bootstrap/Button\";\nimport { buttonColumn } from \"../../utils/functions\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport MyBootstrapTable from \"./MyBootstrapTable\";\n\nconst Combinations = ({\n  combinations,\n  assignedTo,\n  setAssignedTo,\n  setEmptyAssign,\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  const [prefill, setPrefill] = useState();\n\n  const openModal = () => setShowModal(true);\n  const closeModal = () => {\n    setPrefill(undefined);\n    setShowModal(false);\n  };\n\n  const EditIcon = (_, row) => {\n    const editCombination = (row) => {\n      console.log(row);\n      setPrefill(row);\n      openModal();\n    };\n\n    return (\n      <OverlayTrigger\n        placement=\"right\"\n        overlay={\n          <Tooltip id=\"tooltip-right\" className=\"text-left\">\n            {!row.removedEmployees || !row.removedEmployees.length ? (\n              <p>Empty</p>\n            ) : (\n              row.removedEmployees.map((e) => <p key={e.value}>{e.label}</p>)\n            )}\n          </Tooltip>\n        }\n      >\n        <Pencil size=\"25\" color=\"black\" onClick={() => editCombination(row)} />\n      </OverlayTrigger>\n    );\n  };\n\n  const DeleteIcon = (_, row) => {\n    const deleteCombination = (row) => {\n      setAssignedTo((prevState) => {\n        return prevState.filter((c) => c.id !== row.id);\n      });\n    };\n\n    return (\n      <XSquare size=\"25\" color=\"red\" onClick={() => deleteCombination(row)} />\n    );\n  };\n\n  const AddIcon = () => (\n    <Button variant=\"dark\" onClick={openModal} size=\"sm\" className=\"mb-2\">\n      <Plus size=\"20\" color=\"white\" />\n      <span>add combination</span>\n    </Button>\n  );\n\n  const getLabels = (field) => <>{field?.map((f) => f.label).join(\",\")}</>;\n  const Branches = (_, row) => getLabels(row.branches);\n  const Divisions = (_, row) => getLabels(row.divisions);\n  const Departments = (_, row) => getLabels(row.departments);\n  const Cities = (_, row) => getLabels(row.cities);\n\n  const columns = [\n    {\n      dataField: \"branches\",\n      text: \"branches\",\n      formatter: Branches,\n    },\n    {\n      dataField: \"divisions\",\n      text: \"Divisions\",\n      formatter: Divisions,\n    },\n    {\n      dataField: \"departments\",\n      text: \"departments\",\n      formatter: Departments,\n    },\n    {\n      dataField: \"cities\",\n      text: \"cities\",\n      formatter: Cities,\n    },\n    {\n      ...buttonColumn(\"edit\"),\n      formatter: EditIcon,\n    },\n    {\n      ...buttonColumn(\"del\"),\n      formatter: DeleteIcon,\n    },\n  ];\n\n  return (\n    <>\n      <MyBootstrapTable\n        data={assignedTo}\n        columns={columns}\n        // horizontal scroll\n        wrapperClasses=\"table-responsive\"\n        rowClasses=\"text-nowrap\"\n      />\n      <AddIcon />\n      {showModal && (\n        <CombinationModal\n          prefill={prefill}\n          combinations={combinations}\n          setAssignedTo={setAssignedTo}\n          setEmptyAssign={setEmptyAssign}\n          closeModal={closeModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Combinations;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport MyFormGroup from \"./MyFormGroup\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport Combinations from \"../Tables/Combinations\";\nimport { CustomAlert } from \"../CustomAlert\";\nimport { proxy_url, types as t } from \"../../utils/data\";\nimport {\n  badMsg,\n  goodMsg,\n  correctDocumentFormData,\n  getSelectOptions,\n  prefillDocumentForm,\n  successResponse,\n  getAssignedTo,\n  prepareCombinations,\n  getFormID,\n} from \"../../utils/functions\";\nimport { PairContext } from \"../../App\";\n\nconst DocumentForm = ({ setRecords, formData, setFormData, actual }) => {\n  const pairs = useContext(PairContext);\n  console.log(formData);\n  // formData = doc_form\n  const { register, handleSubmit } = useForm({\n    defaultValues: prefillDocumentForm(formData),\n  });\n\n  const types = t;\n  const [action, setAction] = useState();\n  const [selectedType, setSelectedType] = useState(\n    formData ? formData.type : \"\"\n  );\n\n  const [currentID, setCurrentID] = useState(getFormID(formData));\n  const [notification, setNotification] = useState();\n  const [combinations, setCombinations] = useState([]);\n  const [assignedTo, setAssignedTo] = useState([]);\n  const [emptyAssign, setEmptyAssign] = useState([true]);\n  useEffect(() => setNotification(undefined), emptyAssign);\n\n  useEffect(() => {\n    fetch(proxy_url + \"/combinations\", {\n      method: \"GET\",\n    })\n      .then((response) => response.json())\n      .then((res) => {\n        setCombinations(prepareCombinations(res));\n      })\n      .catch((e) => console.log(e));\n\n    fetch(proxy_url + \"/employees/all\", {\n      method: \"GET\",\n    })\n      .then((response) => response.json())\n      .then((res) => {\n        setAssignedTo(getAssignedTo(formData, pairs, res));\n      })\n      .catch((e) => console.log(e));\n  }, []);\n\n  const onSubmit = (data) => {\n    if (assignedTo.length === 0) {\n      setNotification(badMsg(\"At least one combination is required\"));\n      return;\n    }\n    console.log(\"raw\", assignedTo);\n    data = correctDocumentFormData(data, assignedTo);\n    console.log(\"data\", data);\n\n    if (action === \"save\")\n      if (currentID) {\n        data = { ...data, id: currentID };\n        upsert(data, \"update\");\n        updateSavedRec(data);\n      } else {\n        upsert(data, \"create\").then((r) => setCurrentID(r?.id));\n      }\n    if (action === \"send\") {\n      if (currentID) {\n        data = { ...data, id: currentID };\n        if (actual) {\n          upsertConfirm(data, \"create/confirm\").then((r) =>\n            setCurrentID(r?.id)\n          );\n        } else {\n          upsertConfirm(data, \"update/confirm\");\n        }\n      } else {\n        upsertConfirm(data, \"create/confirm\").then((r) => setCurrentID(r?.id));\n      }\n    }\n  };\n  const upsert = (data, action) => {\n    console.log(data);\n    return fetch(proxy_url + `/document/${action}`, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n    })\n      .then((res) => {\n        if (successResponse(res)) {\n          setNotification(goodMsg(`${action} was successful`));\n        } else {\n          setNotification(badMsg(`${action} failed`));\n        }\n        return res.json();\n      })\n      .catch((e) => console.log(\"error\", e));\n  };\n  const upsertConfirm = (data, action) => {\n    console.log(data);\n    return fetch(proxy_url + `/document/${action}`, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n    })\n      .then((res) => {\n        // if (successResponse(res)) {\n        setNotification(goodMsg(`${action} was successful`));\n        if (setRecords) filterSavedRec(data); // update table data\n        if (setFormData) setFormData(undefined); // hide modal\n        // } else {\n        //   setNotification(badMsg(`${action} failed`));\n        // }\n        console.log(res);\n        return res.json();\n      })\n      .catch((e) => {\n        setNotification(badMsg(`${action} failed`));\n        console.log(\"error\", e);\n      });\n  };\n\n  const filterSavedRec = (data) => {\n    setRecords((prevState) => prevState.filter((p) => p.id !== data.id));\n  };\n\n  const updateSavedRec = (data) => {\n    setRecords((prevState) => {\n      let update = prevState;\n      const foundID = prevState.findIndex((p) => p.id === data.id);\n      update[foundID] = data;\n      return update;\n    });\n  };\n\n  return (\n    <Form\n      onChange={() => setNotification(undefined)}\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      {/* TYPE */}\n      <Form.Group as={Row}>\n        <Form.Label column sm=\"3\">\n          Type*\n        </Form.Label>\n        <Col>\n          <Form.Control\n            onChange={(e) => setSelectedType(e.target.value)}\n            as=\"select\"\n            name=\"type\"\n            ref={register({ validate: (v) => v !== \"\" })}\n            required\n            value={selectedType}\n          >\n            {getSelectOptions(types)}\n          </Form.Control>\n        </Col>\n      </Form.Group>\n      {/* REQUIRE SUPERIOR */}\n      <Form.Group as={Row}>\n        <Form.Label column sm=\"3\">\n          {\" \"}\n        </Form.Label>\n        <Col>\n          <Form.Check\n            inline\n            label=\"require superior\"\n            name=\"require_superior\"\n            ref={register}\n          />\n        </Col>\n      </Form.Group>\n      {/* NAME */}\n      <MyFormGroup\n        label=\"Document name*\"\n        name=\"name\"\n        placeholder=\"Enter document name\"\n        register={register}\n        required\n      />\n      {/* LINK */}\n      <MyFormGroup\n        label=\"Link to sharepoint\"\n        name=\"link\"\n        placeholder=\"Enter document link to sharepoint\"\n        register={register}\n      />\n      {/* RELEASE */}\n      <MyFormGroup\n        label=\"Release date*\"\n        name=\"release_date\"\n        type=\"date\"\n        register={register}\n        required\n      />\n      {/* DEADLINE */}\n      <MyFormGroup\n        label=\"Days to deadline*\"\n        name=\"deadline\"\n        type=\"date\"\n        register={register}\n        required\n      />\n      {/* VERSION */}\n      <MyFormGroup\n        label=\"Version*\"\n        name=\"version\"\n        placeholder=\"Enter version\"\n        register={register}\n        required\n      />\n      {/* ORDER NUMBER */}\n      <MyFormGroup\n        label=\"Order number*\"\n        name=\"order_number\"\n        type=\"number\"\n        placeholder=\"Enter number\"\n        register={register({ valueAsNumber: true })}\n        required\n      />\n      {/* NOTE */}\n      <MyFormGroup\n        label=\"Note\"\n        name=\"note\"\n        as=\"textarea\"\n        placeholder=\"Enter note\"\n        register={register}\n      />\n      {/* COMBINATIONS */}\n      <Combinations\n        combinations={combinations}\n        assignedTo={assignedTo}\n        setAssignedTo={setAssignedTo}\n        emptyAssign={emptyAssign}\n        setEmptyAssign={setEmptyAssign}\n      />\n      {/* ALERTS */}\n      {notification && <CustomAlert notification={notification} />}\n      {/* SAVE | SEND BUTTONS */}\n      <div className=\"pt-1 btn-block text-right\">\n        <Button\n          variant=\"outline-primary\"\n          type=\"submit\"\n          className=\"mr-1\"\n          onClick={() => setAction(\"save\")}\n        >\n          Save\n        </Button>\n        <Button type=\"submit\" onClick={() => setAction(\"send\")}>\n          {actual ? \"Send as new version\" : \"Send\"}\n        </Button>\n      </div>\n    </Form>\n  );\n};\n\nexport default DocumentForm;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport MyFormGroup from \"./MyFormGroup\";\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport { CustomAlert } from \"../CustomAlert\";\nimport {\n  badMsg,\n  goodMsg,\n  correctTrainingFormData,\n  successResponse,\n  prefillTrainingForm,\n  getEmployeesNames,\n  getFormID,\n  getEmployeeLabel,\n} from \"../../utils/functions\";\nimport { PairContext } from \"../../App\";\nimport { proxy_url } from \"../../utils/data\";\n\nconst TrainingForm = ({ setRecords, formData, setFormData, actual }) => {\n  const pairs = useContext(PairContext);\n  console.log(formData);\n  // formData = trn_form\n  const { register, handleSubmit } = useForm({\n    defaultValues: prefillTrainingForm(formData),\n  });\n\n  const [action, setAction] = useState();\n\n  const [currentID, setCurrentID] = useState(getFormID(formData));\n  const [notification, setNotification] = useState();\n  const [employees, setEmployees] = useState([]);\n  const [attendees, setAttendees] = useState([]);\n  const [emptyAttendees, setEmptyAttendees] = useState([true]);\n  useEffect(() => setNotification(undefined), emptyAttendees);\n\n  useEffect(() => {\n    fetch(proxy_url + \"/employees/all\", {\n      method: \"GET\",\n    })\n      .then((response) => response.json())\n      .then((res) => {\n        setEmployees(res);\n        setAttendees(getEmployeesNames(formData, res));\n      })\n      .catch((e) => console.log(e));\n  }, []);\n\n  const onSubmit = (data) => {\n    if (!attendees.length) {\n      setNotification(badMsg(\"At least one employee is required\"));\n      return;\n    }\n\n    data = correctTrainingFormData(data, attendees);\n    console.log(data);\n\n    if (action === \"save\") {\n      if (currentID) {\n        data = { ...data, id: currentID };\n        upsert(data, \"update\");\n        updateSavedRec(data);\n      } else {\n        upsert(data, \"create\").then((r) => setCurrentID(r?.id));\n      }\n    }\n    if (action === \"send\") {\n      if (currentID) {\n        data = { ...data, id: currentID };\n        if (actual) {\n          upsertConfirm(data, \"create/confirm\").then((r) =>\n            setCurrentID(r?.id)\n          );\n        } else {\n          upsertConfirm(data, \"update/confirm\");\n        }\n      } else {\n        upsertConfirm(data, \"create/confirm\").then((r) => setCurrentID(r?.id));\n      }\n    }\n  };\n\n  const upsert = (data, action) => {\n    return fetch(proxy_url + `/training/${action}`, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n    })\n      .then((res) => {\n        if (successResponse(res)) {\n          setNotification(goodMsg(`${action} was successful`));\n        } else {\n          setNotification(badMsg(`${action} failed`));\n        }\n        return res.json();\n      })\n      .catch((e) => console.log(\"error\", e));\n  };\n\n  const upsertConfirm = (data, action) => {\n    console.log(data);\n    return fetch(proxy_url + `/training/${action}`, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n    })\n      .then((res) => {\n        if (successResponse(res)) {\n          setNotification(goodMsg(`${action} was successful`));\n          if (setRecords) filterSavedRec(data); // update table data\n          if (setFormData) setFormData(undefined); // hide modal\n        } else {\n          setNotification(badMsg(`${action} failed`));\n        }\n        console.log(res);\n        return res.json();\n      })\n      .catch((e) => console.log(\"error\", e));\n  };\n\n  const filterSavedRec = (data) => {\n    setRecords((prevState) => prevState.filter((p) => p.id !== data.id));\n  };\n\n  const updateSavedRec = (data) => {\n    setRecords((prevState) => {\n      let update = prevState;\n      const foundID = prevState.findIndex((p) => p.id === data.id);\n      update[foundID] = data;\n      return update;\n    });\n  };\n\n  const addAttendees = (attendee) => {\n    setAttendees(attendee);\n    setEmptyAttendees([false]);\n  };\n\n  return (\n    <Form\n      onChange={() => setNotification(undefined)}\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      {/* NAME */}\n      <MyFormGroup\n        label=\"Training name*\"\n        name=\"name\"\n        placeholder=\"Enter document name\"\n        register={register}\n        required\n      />\n      {/* TRAINEE */}\n      <MyFormGroup\n        label=\"Name of lector\"\n        name=\"lector\"\n        placeholder=\"Enter document link to sharepoint\"\n        register={register}\n      />\n      {/* AGENCY */}\n      <MyFormGroup\n        label=\"Name of agency\"\n        name=\"agency\"\n        placeholder=\"Enter agency\"\n        register={register}\n      />\n      {/* PLACE */}\n      <MyFormGroup\n        label=\"Place\"\n        name=\"place\"\n        placeholder=\"Enter place\"\n        register={register}\n      />\n      {/* DATE */}\n      <MyFormGroup\n        label=\"Date*\"\n        name=\"date\"\n        type=\"date\"\n        placeholder=\"Enter date\"\n        register={register}\n        required\n      />\n      {/* DEADLINE */}\n      <MyFormGroup\n        label=\"Days to deadline*\"\n        name=\"deadline\"\n        type=\"date\"\n        defaultValue=\"14\"\n        register={register}\n        required\n      />\n      {/* DURATION */}\n      <MyFormGroup\n        label=\"Duration\"\n        name=\"duration\"\n        type=\"number\"\n        placeholder=\"Enter duration\"\n        register={register({ valueAsNumber: true })}\n      />\n      {/* AGENDA */}\n      <MyFormGroup\n        label=\"Agenda*\"\n        name=\"agenda\"\n        as=\"textarea\"\n        placeholder=\"Enter agenda\"\n        register={register}\n        required\n      />\n      {/* LIST OF EMPLOYEES */}\n      <Form.Group as={Row}>\n        <Form.Label column sm=\"3\">\n          Add employees*\n        </Form.Label>\n        <Col>\n          <Typeahead\n            id=\"basic-typeahead-single\"\n            name=\"employees\"\n            labelKey={(e) => getEmployeeLabel(e, pairs.departments)}\n            multiple\n            placeholder=\"Choose an employees...\"\n            selected={attendees}\n            options={employees}\n            onChange={(selected) => {\n              addAttendees(selected);\n              // this._typeahead.getInstance().focus();\n            }}\n            // ref={typeahead => this._typeahead = typeahead}\n          />\n        </Col>\n      </Form.Group>\n      {/* ALERTS */}\n      {notification && <CustomAlert notification={notification} />}\n      {/* SAVE | SEND BUTTONS */}\n      <div className=\"pt-1 btn-block text-right\">\n        <Button\n          variant=\"outline-primary\"\n          type=\"submit\"\n          className=\"mr-1\"\n          onClick={() => setAction(\"save\")}\n        >\n          Save\n        </Button>\n        <Button type=\"submit\" onClick={() => setAction(\"send\")}>\n          Send\n        </Button>\n      </div>\n    </Form>\n  );\n};\n\nexport default TrainingForm;\n","import React, {useState} from 'react';\nimport {Button, ButtonGroup, Container} from 'react-bootstrap';\nimport DocumentForm from \"../components/Forms/DocumentForm\";\nimport TrainingForm from \"../components/Forms/TrainingForm\";\n\nconst AddRecordPage = () => {\n\n  const [formType, setFormType] = useState('document');\n\n  const handleClick = event => setFormType(event.target.id)\n  const active = id => formType === id && 'active'\n\n  return (\n    <Container className=\"w-75\">\n      <ButtonGroup onClick={handleClick} className=\"btn-group btn-header\">\n        <Button id=\"document\" className={active(\"document\")}>Document</Button>\n        <Button id=\"training\" className={active(\"training\")}>Online training</Button>\n      </ButtonGroup>\n      {formType === 'document' && <DocumentForm /> }\n      {formType === 'training' && <TrainingForm /> }\n    </Container>\n  )\n}\n\nexport default AddRecordPage;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nconst EditBtn = (cell, row, index, { setFormData }) => {\n  const handleClick = () => setFormData(row);\n\n  return (\n    <Button variant=\"outline-primary\" onClick={handleClick} size=\"sm\">\n      Edit\n    </Button>\n  );\n};\n\nexport default EditBtn;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport {\n  badMsg,\n  goodMsg,\n  recordType,\n  successResponse,\n} from \"../../utils/functions\";\nimport { proxy_url } from \"../../utils/data\";\n\nconst SendBtn = (cell, row, index, { setSavedRec, setNotification }) => {\n  /** Send record to relevant employees */\n  const handleClick = () => {\n    fetch(proxy_url + `${recordType(row)}/confirm/${row.id}`, {\n      method: \"GET\",\n    })\n      .then((res) => {\n        if (successResponse(res)) {\n          updateSavedRec();\n          setNotification(goodMsg(`Record ${row.name} was successfully sent`));\n        } else {\n          setNotification(badMsg(`Sending the ${row.name} failed`));\n        }\n      })\n      .catch((e) => console.log(e));\n  };\n\n  const updateSavedRec = () => {\n    setSavedRec((prev) => prev.filter((rec) => rec.id !== row.id));\n  };\n\n  return (\n    <Button id=\"save\" size=\"sm\" onClick={handleClick}>\n      Send\n    </Button>\n  );\n};\n\nexport default SendBtn;\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport DocumentForm from \"../Forms/DocumentForm\";\nimport TrainingForm from \"../Forms/TrainingForm\";\nimport { recordType } from \"../../utils/functions\";\n\nconst EditRecordModal = ({ setRecords, formData, setFormData, actual }) => {\n  const closeModal = () => setFormData(undefined);\n  const type = recordType(formData);\n\n  const props = { setRecords, formData, setFormData, actual };\n\n  return (\n    <Modal show={true} onHide={closeModal} centered size=\"lg\">\n      <Modal.Header closeButton>\n        <Modal.Title>Edit {type}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {type === \"document\" ? (\n          <DocumentForm {...props} />\n        ) : (\n          <TrainingForm {...props} />\n        )}\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default EditRecordModal;\n","import React, { useEffect, useState } from \"react\";\nimport MyBootstrapTable from \"../components/Tables/MyBootstrapTable\";\nimport { savedDocumentsColumns, savedTrainingsColumns } from \"./columns\";\nimport useDataApi from \"../utils/useDataApi\";\nimport { FetchError, FetchLoading } from \"../components/FetchComponents\";\nimport { orderBy, recordType } from \"../utils/functions\";\nimport { CustomAlert } from \"../components/CustomAlert\";\nimport EditRecordModal from \"../components/Modals/EditRecordModal\";\n\nconst SavedRecordsPage = () => {\n  const [doc_data, isLoaded, error] = useDataApi(\"/document/edited\");\n  const [trn_data, isLoaded2, error2] = useDataApi(\"/training/edited\");\n\n  const [documents, setDocuments] = useState([]);\n  const [trainings, setTrainings] = useState([]);\n\n  const [notification, setNotification] = useState();\n  const [formData, setFormData] = useState();\n\n  useEffect(() => {\n    if (doc_data && trn_data) {\n      setDocuments(doc_data);\n      setTrainings(trn_data);\n    }\n  }, [doc_data, trn_data]);\n\n  if (error) {\n    return <FetchError e={`Error: ${error.message}`} />;\n  } else if (error2) {\n    return <FetchError e={`Error: ${error2.message}`} />;\n  } else if (!isLoaded || !doc_data || !isLoaded2 || !trn_data) {\n    return <FetchLoading />;\n  }\n\n  const trn_columns = savedTrainingsColumns(\n    setFormData,\n    setTrainings,\n    setNotification\n  );\n  const doc_columns = savedDocumentsColumns(\n    setFormData,\n    setDocuments,\n    setNotification\n  );\n\n  return (\n    <>\n      {/* DOCUMENTS */}\n      <MyBootstrapTable\n        title=\"Saved trainings\"\n        data={documents}\n        columns={doc_columns}\n        order={orderBy(\"deadline.Time\")}\n      />\n      {/* TRAININGS */}\n      <MyBootstrapTable\n        title=\"Saved documents\"\n        data={trainings}\n        columns={trn_columns}\n        order={orderBy(\"deadline.Time\")}\n      />\n      {notification && <CustomAlert notification={notification} />}\n      {formData && (\n        <EditRecordModal\n          setRecords={\n            recordType(formData) === \"document\" ? setDocuments : setTrainings\n          }\n          formData={formData}\n          setFormData={setFormData}\n        />\n      )}\n    </>\n  );\n};\n\nexport default SavedRecordsPage;\n","import {\n  FormattedDate,\n  FormattedDeadline,\n  FormattedRelease,\n} from \"../utils/Formatter\";\nimport EditBtn from \"../components/Buttons/EditBtn\";\nimport SendBtn from \"../components/Buttons/SendBtn\";\nimport { buttonColumn } from \"../utils/functions\";\n\nexport const savedDocumentsColumns = (\n  setFormData,\n  setSavedRec,\n  setNotification\n) => [\n  {\n    dataField: \"name\",\n    text: \"Name\",\n    sort: true,\n  },\n  {\n    dataField: \"release_date.Time\",\n    text: \"Release\",\n    sort: true,\n    formatter: FormattedRelease,\n  },\n  {\n    dataField: \"deadline.Time\",\n    text: \"Deadline\",\n    sort: true,\n    formatter: FormattedDeadline,\n  },\n  {\n    ...buttonColumn(\"EditBtn\"),\n    formatter: EditBtn,\n    formatExtraData: {\n      setFormData: setFormData,\n    },\n  },\n  {\n    ...buttonColumn(\"SendBtn\"),\n    formatter: SendBtn,\n    formatExtraData: {\n      setNotification: setNotification,\n      setSavedRec: setSavedRec,\n    },\n  },\n];\n\nexport const savedTrainingsColumns = (\n  setFormData,\n  setSavedRec,\n  setNotification\n) => [\n  {\n    dataField: \"name\",\n    text: \"Name\",\n    sort: true,\n  },\n  {\n    dataField: \"date.Time\",\n    text: \"Release\",\n    sort: true,\n    formatter: FormattedDate,\n  },\n  {\n    dataField: \"place\",\n    text: \"Place\",\n    sort: true,\n  },\n  {\n    ...buttonColumn(\"EditBtn\"),\n    formatter: EditBtn,\n    formatExtraData: {\n      setFormData: setFormData,\n    },\n  },\n  {\n    ...buttonColumn(\"SendBtn\"),\n    formatter: SendBtn,\n    formatExtraData: {\n      setNotification: setNotification,\n      setSavedRec: setSavedRec,\n    },\n  },\n];\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Form, Row, Alert, Col } from \"react-bootstrap\";\nimport { ExclamationTriangle } from \"react-bootstrap-icons\";\nimport {badMsg, getSelectOptions} from \"../utils/functions\";\nimport { proxy_url } from \"../utils/data\";\n\nconst SettingsPage = ({ submitError }) => {\n  const import_types = [\"import_1\", \"import_2\", \"import_3\", \"import_5\"];\n  const [selectedType, setSelectedType] = useState();\n\n  const [cardsFile, setCards] = useState(null);\n  const [employeesFile, setEmployees] = useState({});\n  const [cardsError, setCardsError] = useState(\"\");\n  const [employeesError, setEmployeesError] = useState(\"\");\n  const [showDeleted, setShowDeleted] = useState(null);\n\n  const OK = \"OK\";\n\n  useEffect(() => {\n    let sessionDel = sessionStorage.getItem(\"showDeleted\");\n    if (sessionDel === null) {\n      sessionStorage.setItem(\"showDeleted\", false);\n    } else if (showDeleted === null) {\n      setShowDeleted(sessionDel);\n    } else {\n      document.getElementById(\"checkShowDeleted\").checked = JSON.parse(\n        showDeleted\n      );\n      sessionStorage.setItem(\"showDeleted\", showDeleted);\n    }\n  }, [showDeleted]);\n\n  const placeholderOption = () => {\n    return (\n      <option key={-1} disabled value=\"default\">\n        Select import type\n      </option>\n    );\n  };\n\n  const createMenu = () => {\n    let menu = [];\n    menu.push(placeholderOption());\n    return menu;\n  };\n\n  const changeCards = (e) => setCards(e.target.files[0]);\n\n  const uploadCards = (e) => {\n    clearErrors();\n    const data = new FormData();\n    let name = `kiosk_upload_${Date.now()}`;\n\n    data.append(\"file\", cardsFile);\n    data.append(\"name\", name);\n\n    console.log(cardsFile);\n\n    if (cardsFile != null) {\n      fetch(proxy_url + \"/file/upload\", {\n        method: \"POST\",\n        body: data,\n      }).then((response) => {\n            console.log(response)\n            if (response.ok) {\n              alert(\"Perfect! \");\n            } else {\n              let msg = \"File not set\";\n              setCardsError(msg);\n            }\n          })\n          .catch((e) =>  alert(\"Error submitting form!\"+e));\n    } else {\n      let msg = \"File not set\";\n      setCardsError(msg);\n    }\n  };\n\n  const changeEmployees = (e) => setEmployees(e.target.files[0]);\n\n  const uploadEmployees = (e) => {\n    clearErrors();\n\n    const data = new FormData();\n    let name = `employees_upload_${Date.now()}`;\n\n    if (selectedType && employeesFile.name !== undefined) {\n      data.append(\"file\", employeesFile);\n      data.append(\"name\", name);\n      data.append(\"import\", selectedType);\n\n      fetch(proxy_url + \"/file/upload\", {\n        method: \"POST\",\n        body: data,\n      }).then((response) =>  {\n            console.log(response)\n            if (response.ok) {\n            alert(\"Perfect! \");\n          }else {\n              let msg = \"File not set\";\n              setEmployeesError(msg);\n            }\n          })\n          .catch((e) =>  alert(\"Error submitting form!\"+e));\n        }else {\n      let msg = \"File not set\";\n      setEmployeesError(msg);\n    }\n  };\n\n  const renderError = (msg) => {\n    return (\n      <Alert variant=\"danger\" style={{ color: \"red\" }}>\n        <ExclamationTriangle\n          size=\"18\"\n          style={{ margin: \"5px\", padding: \"5px\" }}\n        />{\" \"}\n        {msg}\n      </Alert>\n    );\n  };\n\n  const renderOk = () => {\n    let msg = \"Successfully uploaded.\";\n    return (\n      <Alert variant=\"success\" style={{ color: \"green\" }}>\n        <ExclamationTriangle\n          size=\"18\"\n          style={{ margin: \"5px\", padding: \"5px\" }}\n        />{\" \"}\n        {msg}\n      </Alert>\n    );\n  };\n\n  const clearErrors = () => {\n    setEmployeesError(\"\");\n    setCardsError(\"\");\n  };\n  const isError = (what) => what !== \"\" && what !== OK;\n  const isOk = (what) => what === OK;\n\n  const changeShowDeleted = () => {\n    setShowDeleted(!showDeleted);\n  };\n\n  return (\n    <div>\n      <script crossOrigin=\"true\" />\n      <p className=\"pt-5\">\n        <strong>IMPORT EMPLOYEES</strong>\n      </p>\n      <Form>\n        <select\n          onChange={(e) => setSelectedType(e.target.value)}\n          // ref={register({validate: v => v !== \"\"})}\n          name=\"type\"\n          required\n          value={selectedType}\n        >\n          {getSelectOptions(import_types)}\n        </select>\n\n        <span> Choose import</span>\n        <br />\n        <input type=\"file\" required onChange={changeEmployees} />\n        <Button type=\"button\" onClick={uploadEmployees}>\n          Upload\n        </Button>\n        {isError(employeesError) && renderError(employeesError)}\n        {isOk(employeesError) && renderOk()}\n      </Form>\n      <hr />\n      <p className=\"pt-5\">\n        <strong>IMPORT CARDS</strong>\n      </p>\n      <Form>\n        <p>Upload file with employee card information.</p>\n        <input type=\"file\" id=\"cardsFile\" onChange={changeCards} />\n        <Button type=\"button\" onClick={uploadCards}>\n          Upload\n        </Button>\n        {isError(cardsError) && renderError(cardsError)}\n        {isOk(cardsError) && renderOk()}\n      </Form>\n      <hr />\n      {/* SHOW DELETED EMPLOYEES */}\n      <div className=\"form-check mt-5\">\n        <input\n          className=\"form-check-input\"\n          type=\"checkbox\"\n          value=\"\"\n          id=\"checkShowDeleted\"\n          onClick={changeShowDeleted}\n        />\n        <strong>SHOW DELETED EMPLOYEES</strong>\n        <span>{\" <-- not implemented :(\"}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsPage;\n","import React, { useContext, useRef, useState } from \"react\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { PairContext } from \"../App\";\nimport { getOptionsForSelect, resolveFilter } from \"../utils/functions\";\n\nconst initFilter = {\n  branches: [],\n  cities: [],\n  departments: [],\n  divisions: [],\n};\n\nconst Filter = ({\n  em,\n  es,\n  setEm,\n  showSM,\n  setShowSM,\n  matrixByFilter,\n  matrixBySuperior,\n  searchByEmployee,\n  searchByCombination,\n}) => {\n  const [filter, setFilter] = useState(initFilter);\n\n  const pairs = useContext(PairContext);\n  const options = getOptionsForSelect(pairs);\n\n  const bref = useRef();\n  const diref = useRef();\n  const deref = useRef();\n  const cref = useRef();\n  const eref = useRef();\n\n  const resetFilter = () => {\n    setFilter(initFilter);\n    // bref.current.select.clearValue();\n    // diref.current.select.clearValue();\n    // cref.current.select.clearValue();\n    // deref.current.select.clearValue();\n  };\n\n  const resetHalfOfFilter = () => {\n    setFilter((prev) => {\n      return {\n        branches: [],\n        cities: prev.cities,\n        departments: prev.departments,\n        divisions: [],\n      };\n    });\n    // bref.current.select.clearValue();\n    // diref.current.select.clearValue();\n  };\n\n  const resetEmployee = () => {\n    setEm(undefined);\n    eref.current.select.clearValue();\n  };\n\n  const handleSelect = (data, { name: field }) => {\n    resetEmployee();\n    setFilter({ ...filter, [field]: data });\n  };\n\n  const handleSearch = () => {\n    resetEmployee();\n\n    if (!showSM) {\n      searchByCombination(resolveFilter(filter));\n      return;\n    }\n\n    resetHalfOfFilter();\n    matrixByFilter({\n      branch: \"\",\n      city: filter.cities.map((v) => v.value).join(\",\"),\n      department: filter.departments.map((v) => v.value).join(\",\"),\n      division: \"\",\n    });\n  };\n\n  const handleEmployeeSearch = (data) => {\n    if (!data) return;\n    setEm(data);\n    resetFilter();\n    if (showSM) {\n      matrixBySuperior(data);\n    } else {\n      searchByEmployee(data);\n    }\n  };\n\n  const handleToggleSearch = () => {\n    const toggle = !showSM;\n    if (toggle) {\n      if (em) {\n        matrixBySuperior(em);\n      } else {\n        resetHalfOfFilter();\n        matrixByFilter({\n          branch: \"\",\n          city: filter.cities.map((v) => v.value).join(\",\"),\n          department: filter.departments.map((v) => v.value).join(\",\"),\n          division: \"\",\n        });\n      }\n    } else {\n      if (em) {\n        handleEmployeeSearch(em);\n      } else {\n        handleSearch();\n      }\n    }\n\n    setShowSM(toggle);\n  };\n\n  const selector = (name, label, ref) => (\n    <Col>\n      <Select\n        isMulti\n        value={filter[name]}\n        name={name}\n        placeholder={label}\n        options={options[name]}\n        onChange={(data, e) => handleSelect(data, e)}\n        ref={ref}\n      />\n    </Col>\n  );\n\n  return (\n    <Form>\n      Search by combination\n      <Row className=\"pb-2\">\n        {selector(\"branches\", \"Branches\", bref)}\n        {selector(\"divisions\", \"Divisions\", diref)}\n        {selector(\"departments\", \"Departments\", deref)}\n        {selector(\"cities\", \"Cities\", cref)}\n        <Button onClick={handleSearch}>Search</Button>\n      </Row>\n      <Row>\n        <Col xs=\"3\">\n          Search by employee\n          <Select\n            value={em}\n            name=\"employeeName\"\n            placeholder=\"Employee Name\"\n            options={es}\n            onChange={(data) => handleEmployeeSearch(data)}\n            ref={eref}\n          />\n        </Col>\n        <Col className=\"text-right pr-0\">\n          <Button\n            className=\"mr-3\"\n            variant=\"outline-primary\"\n            onClick={handleToggleSearch}\n          >\n            {`Show ${showSM ? \"table\" : \"skillMatrix\"}`}\n          </Button>\n          <Button className=\"ml-1\" disabled>\n            Export\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nconst ToggleBtn = (c, row, rowIndex, { id, data, setData, i }) => {\n  const document = data[rowIndex];\n  let state = document.employees[i]?.state;\n  const mark = state.includes(\"X\");\n  if (mark) state = unMarkState();\n\n  function markState() {\n    return \"X\" + state;\n  }\n\n  function unMarkState() {\n    if (!state.includes(\"X\")) return state;\n    if (state.length === 1 && state !== \"X\") return state;\n    return state.substr(1);\n  }\n\n  const handleClick = () => {\n    const stt = mark ? unMarkState() : markState();\n    console.log(stt);\n\n    const new_employees = [...document.employees];\n    new_employees[i] = {\n      ...new_employees[i],\n      state: stt,\n    };\n\n    const copy = [...data];\n    copy[rowIndex] = { ...document, employees: new_employees };\n    setData(copy);\n  };\n\n  const getColor = (state) => {\n    switch (state) {\n      case \"-\":\n        return \"gray\";\n      case \"_\":\n        return \"cornflowerblue\";\n      case \"es\":\n        return \"tomato\";\n      case \"e\":\n        return \"orange\";\n      case \"s\":\n        return \"gold\";\n      default:\n        return \"green\";\n      // TODO ME implement *\n    }\n  };\n\n  const getLabel = () => {\n    const labels = [\n      { state: \"-\", label: \"no need\" },\n      { state: \"es\", label: \"miss e+s\" },\n      { state: \"e\", label: \"miss e\" },\n      { state: \"s\", label: \"miss s\" },\n      { state: \"\", label: \"well done\" },\n      { state: \"X\", label: \"bug\" },\n      { state: \"_\", label: \"not send\" },\n    ];\n    return labels.find((l) => l.state === state)?.label;\n  };\n\n  const styledBtn = {\n    backgroundColor: getColor(state),\n    color: state === \"s\" ? \"black\" : \"white\",\n    borderColor: mark ? \"black\" : \"white\",\n    borderWidth: \"5px\",\n  };\n\n  return (\n    <Button style={styledBtn} onClick={handleClick} className=\"btn-block\">\n      {getLabel()}\n    </Button>\n  );\n};\n\nexport default ToggleBtn;\n","import React from \"react\";\nimport { Button, ButtonGroup, Col, Row, Card } from \"react-bootstrap\";\nimport { ExclamationTriangle } from \"react-bootstrap-icons\";\n\nexport const RowButtons = ({\n  data,\n  setAction,\n  setModalInfo,\n  setShowModal,\n  handleAccept,\n  showLegend,\n  setShowLegend,\n}) => {\n  const handleClick = (e) => {\n    const action = e.target.id;\n    setAction(action);\n    if (action === \"cancel\") {\n      handleAccept();\n    } else {\n      setModalInfo({\n        body: `Do you really want to ${action} selected signatures?`,\n      });\n      setShowModal(true);\n    }\n  };\n\n  const disabled = data.length === 0;\n\n  return (\n    <Row className=\"mb-3\">\n      <Col className=\"text-left\">\n        <ButtonGroup className=\"div-btn\" size=\"sm\">\n          {/* maybe https://react-bootstrap.github.io/components/overlays/ ? */}\n          <Button onClick={() => setShowLegend(!showLegend)}>\n            {showLegend ? \"Hide legend\" : \"Show legend\"}\n          </Button>\n        </ButtonGroup>\n      </Col>\n      <Col className=\"text-right\">\n        <ButtonGroup className=\"div-btn\" onClick={handleClick} size=\"sm\">\n          <Button id=\"sign\" size=\"sm\" disabled={disabled}>\n            Sign\n          </Button>\n          <Button id=\"cancelDuty\" size=\"sm\" disabled={disabled}>\n            Cancel duty\n          </Button>\n          <Button id=\"trainAgain\" size=\"sm\" disabled={disabled}>\n            Train again\n          </Button>\n          <Button\n            id=\"cancel\"\n            size=\"sm\"\n            onClick={handleClick}\n            disabled={disabled}\n          >\n            Cancel\n          </Button>\n        </ButtonGroup>\n      </Col>\n    </Row>\n  );\n};\n\nexport const Legend = () => {\n  const Badge = ({ color, textColor = \"white\", label, text }) => {\n    const style = {\n      background: color,\n      borderColor: color,\n      color: textColor,\n      width: \"80px\",\n      height: \"20px\",\n      fontSize: \".7rem\",\n      fontWeight: \"bold\",\n      padding: \"0\",\n    };\n    return (\n      <p>\n        <span>\n          <Button style={style}>{label}</Button>\n          {` ${text}`}\n        </span>\n      </p>\n    );\n  };\n\n  const cardStyle = {\n    width: \"30rem\",\n    marginTop: \"1rem\",\n    fontSize: \".7rem\",\n    marginBottom: \".75rem\",\n  };\n\n  return (\n    <Card style={cardStyle}>\n      <Card.Body>\n        <Card.Subtitle className=\"mb-3 text-muted\">Legend:</Card.Subtitle>\n        <Card.Text>\n          <Badge\n            label=\"no need\"\n            text=\"Zamestnanec bol odznačený z potreby oboznámenia\"\n            color=\"gray\"\n          />\n          <Badge\n            label=\"miss e+s\"\n            text=\"Ani zamestnanec ani nadriadený ešte nepotvrdili\"\n            color=\"tomato\"\n          />\n          <Badge label=\"miss e\" text=\"Zamestnanec nepotvrdil\" color=\"orange\" />\n          <Badge\n            label=\"miss s\"\n            text=\"Nadriadený nepotvrdil\"\n            color=\"gold\"\n            textColor=\"white\"\n          />\n          <Badge label=\"well done\" text=\"Dokument je potvrdený\" color=\"green\" />\n          <Badge\n            label=\"not sent\"\n            text=\"Este neodoslane\"\n            color=\"cornflowerblue\"\n          />\n          <p>\n            <ExclamationTriangle\n              style={{ color: \"red\", marginBottom: \"4px\" }}\n            />{\" \"}\n            Uplynul deadline a chýbajú podpisy\n          </p>\n          <p>\n            hviezdička <strong>*</strong> znamena, ze zamestnanec sa opakovane\n            preškoluje\n          </p>\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport ToggleBtn from \"./ToggleBtn\";\nimport ConfirmModal from \"../../components/Modals/ConfirmModal\";\nimport { Legend, RowButtons } from \"./SkillMatrixComponents\";\nimport {\n  buttonColumn,\n  prepareSMData,\n  sortByName,\n  successResponse,\n} from \"../../utils/functions\";\nimport { DocumentLabel } from \"../../utils/Formatter\";\nimport MyBootstrapTable from \"../../components/Tables/MyBootstrapTable\";\nimport { proxy_url } from \"../../utils/data\";\n\nconst SkillMatrix = ({ documents: docs }) => {\n  const [data, setData] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  // const [signatures, setSignatures] = useState([]);\n\n  useEffect(() => {\n    const sample = docs[0];\n    if (!sample || !sample.signatures) {\n      setData([]);\n      return;\n    }\n\n    setEmployees(() => {\n      let ems = sample.signatures.map((sign) => sign.employee);\n      return sortByName(ems);\n    });\n    setData(prepareSMData(docs));\n  }, [docs]);\n\n  const [showLegend, setShowLegend] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [modalInfo, setModalInfo] = useState({});\n  const [action, setAction] = useState(\"\");\n\n  const columns = getColumns();\n\n  function getColumns() {\n    const columns = [\n      {\n        dataField: \"name\",\n        text: \"Document Name\",\n        formatter: DocumentLabel,\n      },\n    ];\n\n    let counter = 0;\n    console.log(data);\n    employees.forEach((e) => {\n      const name = `${e.first_name} ${e.last_name}, ${e.job_title}`;\n      columns.push({\n        ...buttonColumn(e.id, name),\n        // headerFormatter: FormattedEmployee,\n        // headerTitle: (col, row) => \"e.job\",\n        formatter: ToggleBtn,\n        formatExtraData: {\n          id: e.id,\n          data: data,\n          setData: setData,\n          // signatures: signatures,\n          // setSignatures: setSignatures,\n          i: counter++ % employees.length,\n        },\n      });\n    });\n\n    return columns;\n  }\n\n  function changedState(e) {\n    return e.state.includes(\"X\");\n  }\n\n  function sign(state) {\n    if (state === \"s\") return \"\";\n    return \"e\";\n  }\n\n  function cancelSign() {\n    return \"-\";\n  }\n\n  function resetSign(require_superior) {\n    return require_superior ? \"es\" : \"s\";\n  }\n\n  function updateState(require_superior, e) {\n    if (!changedState(e)) return e;\n\n    let state = e.state.replace(\"X\", \"\");\n\n    if (action === \"sign\") {\n      if (state === \"-\" || state === \"e\" || state === \"\") {\n        return { ...e, state: state };\n      }\n      fetch(proxy_url + \"/sign/superior\", {\n        method: \"POST\",\n        body: new URLSearchParams(`id=${e.sign_id}`),\n      });\n      // }).then((res) => {\n      // if (successResponse(res)) {\n      return { ...e, state: sign(state) };\n      // }\n      // });\n    }\n    if (action === \"cancelDuty\") {\n      if (state === \"-\") return { ...e, state: state };\n      fetch(proxy_url + \"/cancels\", {\n        method: \"POST\",\n        body: new URLSearchParams(e.sign_id.toString()),\n      });\n      // }).then((res) => {\n      // if (successResponse(res)) {\n      return { ...e, state: cancelSign() };\n      // }\n      // });\n    }\n    if (action === \"trainAgain\") {\n      if (require_superior && state === \"e+s\") return { ...e, state: state };\n      if (!require_superior && state === \"e\") return { ...e, state: state };\n      fetch(proxy_url + \"/resigns\", {\n        method: \"POST\",\n        body: new URLSearchParams(e.sign_id.toString()),\n      });\n      // }).then((res) => {\n      // if (successResponse(res)) {\n      state = resetSign(e.sign_id, require_superior);\n      return { ...e, state: state };\n      // }\n      // });\n    }\n  }\n\n  const handleAccept = () => {\n    const update = data.map((d) => {\n      return {\n        ...d,\n        employees: d.employees.map((e) => updateState(d.require_superior, e)),\n      };\n    });\n    setData(update);\n  };\n\n  const handleExport = () => {}; // TODO Export\n\n  return (\n    <>\n      <MyBootstrapTable\n        title=\"SkillMatrix\"\n        classes=\"skill-matrix-table\"\n        data={data}\n        columns={columns}\n        // horizontal scroll\n        wrapperClasses=\"table-responsive\"\n        rowClasses=\"text-nowrap\"\n      />\n      <RowButtons\n        data={data}\n        setAction={setAction}\n        setModalInfo={setModalInfo}\n        setShowModal={setShowModal}\n        handleAccept={handleAccept}\n        handleExport={handleExport}\n        showLegend={showLegend}\n        setShowLegend={setShowLegend}\n      />\n      {showLegend && <Legend />}\n      <ConfirmModal\n        showModal={showModal}\n        setShowModal={setShowModal}\n        modalInfo={modalInfo}\n        handleAccept={handleAccept}\n      />\n    </>\n  );\n};\n\nexport default SkillMatrix;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { redirectTo } from \"../../utils/functions\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ReportBtn = (cell, row) => {\n  // const history = useHistory()\n\n  const handleClick = () => {\n    redirectTo(`/report/?id=${row.id}`);\n    // history.push({\n    //   pathname: '/report',\n    //   state: { id: row.id },\n    // });\n  };\n\n  return (\n    <Button onClick={handleClick} size=\"sm\">\n      report\n    </Button>\n  );\n};\n\nexport default ReportBtn;\n","import React, { useState } from \"react\";\nimport EditBtn from \"../components/Buttons/EditBtn\";\nimport EditRecordModal from \"../components/Modals/EditRecordModal\";\nimport ReportBtn from \"./report/ReportBtn\";\nimport { buttonColumn, orderBy } from \"../utils/functions\";\nimport { FormattedRelease, Percentage } from \"../utils/Formatter\";\nimport MyBootstrapTable from \"../components/Tables/MyBootstrapTable\";\n\nconst FoundDocuments = ({ found, setFound }) => {\n  const [formData, setFormData] = useState();\n  console.log(found);\n\n  const columns = [\n    {\n      dataField: \"name\",\n      text: \"Name\",\n      sort: true,\n    },\n    {\n      dataField: \"release_date.Time\",\n      text: \"Release\",\n      formatter: FormattedRelease,\n      sort: true,\n    },\n    {\n      dataField: \"type\",\n      text: \"Type\",\n      sort: true,\n    },\n    {\n      dataField: \"branches\",\n      text: \"Branches\",\n      sort: true,\n    },\n    {\n      dataField: \"divisions\",\n      text: \"Divisions\",\n      sort: true,\n    },\n    {\n      dataField: \"departments\",\n      text: \"Departments\",\n      sort: true,\n    },\n    {\n      dataField: \"cities\",\n      text: \"Cities\",\n      sort: true,\n    },\n    {\n      dataField: \"complete\",\n      text: \"State\",\n      formatter: Percentage,\n      sort: true,\n    },\n    {\n      ...buttonColumn(\"EditBtn\"),\n      formatter: EditBtn,\n      formatExtraData: {\n        setFormData: setFormData,\n      },\n    },\n    {\n      ...buttonColumn(\"ReportBtn\"),\n      formatter: ReportBtn,\n    },\n  ];\n\n  return (\n    <>\n      <MyBootstrapTable\n        title=\"Found documents\"\n        data={found}\n        columns={columns}\n        defaultSorted={orderBy(\"name\")}\n        // horizontal scroll\n        wrapperClasses=\"table-responsive\"\n        rowClasses=\"text-nowrap\"\n      />\n      {formData && (\n        <EditRecordModal\n          setRecords={setFound}\n          formData={formData}\n          setFormData={setFormData}\n          actual={true}\n        />\n      )}\n    </>\n  );\n};\n\nexport default FoundDocuments;\n","import React, { useState } from \"react\";\nimport EditBtn from \"../components/Buttons/EditBtn\";\nimport EditRecordModal from \"../components/Modals/EditRecordModal\";\nimport ReportBtn from \"./report/ReportBtn\";\nimport { buttonColumn, orderBy } from \"../utils/functions\";\nimport { FormattedDate, Percentage } from \"../utils/Formatter\";\nimport MyBootstrapTable from \"../components/Tables/MyBootstrapTable\";\n\nconst FoundTrainings = ({ found, setFound, setReport }) => {\n  const [formData, setFormData] = useState();\n\n  const columns = [\n    {\n      dataField: \"name\",\n      text: \"Name\",\n      sort: true,\n    },\n    {\n      dataField: \"date.Time\",\n      text: \"Release\",\n      formatter: FormattedDate,\n      sort: true,\n    },\n    {\n      dataField: \"lector\",\n      text: \"lector\",\n      sort: true,\n    },\n    {\n      dataField: \"agency\",\n      text: \"agency\",\n      sort: true,\n    },\n    {\n      dataField: \"place\",\n      text: \"place\",\n      sort: true,\n    },\n    {\n      dataField: \"complete\",\n      text: \"State\",\n      formatter: Percentage,\n      sort: true,\n    },\n    {\n      ...buttonColumn(\"EditBtn\"),\n      formatter: EditBtn,\n      formatExtraData: {\n        setFormData: setFormData,\n      },\n    },\n    {\n      ...buttonColumn(\"ReportBtn\"),\n      formatter: ReportBtn,\n      formatExtraData: {\n        setReport: setReport,\n      },\n    },\n  ];\n\n  return (\n    <>\n      <MyBootstrapTable\n        title=\"Found trainings\"\n        data={found}\n        columns={columns}\n        defaultSorted={orderBy(\"name\")}\n        // horizontal scroll\n        wrapperClasses=\"table-responsive\"\n        rowClasses=\"text-nowrap\"\n      />\n      {formData && (\n        <EditRecordModal\n          setRecords={setFound}\n          formData={formData}\n          setFormData={setFormData}\n          actual={true}\n        />\n      )}\n    </>\n  );\n};\n\nexport default FoundTrainings;\n","import React from \"react\";\nimport FoundDocuments from \"./FoundDocuments\";\nimport FoundTrainings from \"./FoundTrainings\";\n\nconst FoundRecords = ({ documents, setDocuments, trainings, setTrainings }) => {\n  return (\n    <>\n      <FoundDocuments found={documents} setFound={setDocuments} />\n      <FoundTrainings found={trainings} setFound={setTrainings} />\n    </>\n  );\n};\n\nexport default FoundRecords;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Filter from \"./Filter\";\nimport SkillMatrix from \"./skill-matrix/SkillMatrix\";\nimport {\n  prepareEmployees,\n  getFetch,\n  prepareCombinations,\n  postFetch,\n  prepareFoundDocs,\n} from \"../utils/functions\";\nimport { PairContext } from \"../App\";\nimport FoundRecords from \"./FoundRecords\";\nimport { FetchLoading } from \"../components/FetchComponents\";\nimport { proxy_url } from \"../utils/data\";\n\nconst FinderPage = () => {\n  const pairs = useContext(PairContext);\n\n  const [cs, setCs] = useState([]); // all combinations\n  const [es, setEs] = useState([]); // all employees\n  const [em, setEm] = useState(); // selected employee in filter\n\n  const [documents, setDocuments] = useState([]);\n  const [trainings, setTrainings] = useState([]);\n  const [SMData, setSMData] = useState([]);\n\n  const [showSM, setShowSM] = useState();\n\n  useEffect(() => {\n    getFetch(\"/combinations\").then((res) => setCs(prepareCombinations(res)));\n    getFetch(\"/employees/all\").then((res) =>\n      setEs(prepareEmployees(res, pairs.departments))\n    );\n  }, []);\n\n  useEffect(() => {\n    getFetch(\"/document/actual\").then((res) =>\n      setDocuments(prepareFoundDocs(res, pairs))\n    );\n  }, [cs]);\n\n  const resetTables = () => {\n    setDocuments([]);\n    setTrainings([]);\n  };\n\n  const searchByCombination = (filter) => {\n    resetTables();\n    console.log(filter);\n    postFetch(`/document/filter`, JSON.stringify(filter)).then((r) =>\n      setDocuments(prepareFoundDocs(r, pairs))\n    );\n  };\n\n  const searchByEmployee = (employee) => {\n    if (!employee) return;\n    console.log(employee);\n    setEm(employee);\n    resetTables();\n\n    const id = employee.value;\n    getFetch(`/signed/signatures/${id}`).then((r) => {\n      console.log(r);\n      let trainings = addCompleteness(r.trainings, 100);\n      setTrainings((prevState) => [...prevState, ...trainings]);\n\n      let documents = addCompleteness(r.documents, 100);\n      documents = prepareFoundDocs(documents, pairs);\n      setDocuments((prevState) => [...prevState, ...documents]);\n    });\n\n    getFetch(`/unsigned/signatures/${id}`).then((r) => {\n      console.log(r);\n      let trainings = addCompleteness(r.trainings, 0);\n      setTrainings((prevState) => [...prevState, ...trainings]);\n\n      let documents = addCompleteness(r.documents, 0);\n      documents = prepareFoundDocs(documents, pairs);\n      setDocuments((prevState) => [...prevState, ...documents]);\n    });\n  };\n\n  const matrixByFilter = (filter) => {\n    console.log(filter);\n    fetch(proxy_url + `skill/matrix`, {\n      method: \"POST\",\n      body: new URLSearchParams(`filter=${JSON.stringify(filter)}`),\n    })\n      .then((result) => result.json())\n      .then((r) => {\n        console.log(r);\n        setSMData(r.documents);\n      });\n  };\n\n  const matrixBySuperior = (superior) => {\n    setEm(superior);\n\n    const id = superior.value;\n\n    fetch(proxy_url + `/skill/matrix`, {\n      method: \"POST\",\n      body: new URLSearchParams(`superior_id=${id}`),\n    })\n      .then((result) => result.json())\n      .then((r) => {\n        setSMData(r.documents);\n      });\n  };\n\n  function addCompleteness(records, percentage) {\n    return records.map((rec) => {\n      return { ...rec, complete: percentage };\n    });\n  }\n\n  if (!cs.length || !es.length) {\n    return <FetchLoading />;\n  }\n\n  return (\n    <div style={{ marginTop: \"1%\" }} className=\"finder\">\n      <Filter\n        cs={cs}\n        em={em}\n        es={es}\n        setEm={setEm}\n        showSM={showSM}\n        setShowSM={setShowSM}\n        matrixByFilter={matrixByFilter}\n        matrixBySuperior={matrixBySuperior}\n        searchByEmployee={searchByEmployee}\n        searchByCombination={searchByCombination}\n      />\n      {showSM ? (\n        <SkillMatrix documents={SMData} />\n      ) : (\n        <FoundRecords\n          documents={documents}\n          setDocuments={setDocuments}\n          trainings={trainings}\n          setTrainings={setTrainings}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default FinderPage;\n","import React, { useEffect, useState } from \"react\";\nimport { buttonColumn, getFetch, orderBy } from \"../../utils/functions\";\nimport MyBootstrapTable from \"../../components/Tables/MyBootstrapTable\";\nimport { format_date } from \"../../utils/Formatter\";\nimport { proxy_url } from \"../../utils/data\";\n\nconst ReportPage = ({ location: { search } }) => {\n  const [record, setRecord] = useState();\n  const [employees, setEmployees] = useState([]);\n\n  const getDate = (date) => {\n    const f = format_date(date);\n    if (f === \"01.01.0001\") {\n      return \"-\";\n    }\n    return f;\n  };\n\n  useEffect(() => {\n    const split = search.split(\"=\");\n    if (split.length !== 2) return null;\n\n    const [query, id] = split;\n    if (query !== \"?id\") return null;\n    if (parseInt(id) != id) return null;\n\n    // getFetch(`/report/${row.id}`)\n    fetch(proxy_url + `/skill/matrix`, {\n      method: \"POST\",\n      body: new URLSearchParams(`document_id=${id}`),\n    })\n      .then((res) => res.json())\n      .then((r) => {\n        console.log(r);\n        const rec = r.documents[0];\n        setRecord(rec);\n        console.log(rec);\n        setEmployees(\n          rec.signatures.map((sign) => {\n            const { employee: e } = sign;\n            return {\n              id: e.id,\n              name: `${e.first_name} ${e.first_name}`,\n              date: getDate(sign.e_date?.Time),\n            };\n          })\n        );\n      });\n  }, []);\n\n  if (!record) return null;\n\n  console.log(employees);\n\n  const columns = [\n    {\n      ...buttonColumn(\"id\"),\n    },\n    {\n      dataField: \"name\",\n      text: \"Full name\",\n      sort: true,\n    },\n    {\n      dataField: \"date\",\n      text: \"Sign Date\",\n      sort: true,\n    },\n  ];\n\n  const title = `${record.name}, ${format_date(record.release_date?.Time)}`;\n\n  return (\n    <MyBootstrapTable\n      title={title}\n      data={employees}\n      columns={columns}\n      defaultSorted={orderBy(\"name\")}\n      // horizontal scroll\n      wrapperClasses=\"table-responsive\"\n      rowClasses=\"text-nowrap\"\n    />\n  );\n};\n\nexport default ReportPage;\n","import React from \"react\";\nimport { useLocation } from \"react-router\";\n\nconst Page404 = () => {\n  const pathname = useLocation().pathname;\n\n  return (\n    <>\n      <h2 className=\"pt-5\">Error 404: Page not found</h2>\n      <h5 className=\"pt-3\">\n        Not match for <code>{pathname}</code>\n      </h5>\n    </>\n  );\n};\n\nexport default Page404;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\n\nimport Container from \"react-bootstrap/Container\";\nimport { getUser, isAdmin } from \"./utils/functions\";\n\nimport RecordsToSignPage from \"./unsigned-records/RecordsToSignPage\";\nimport LoginPage from \"./login/LoginPage\";\nimport LogoutPage from \"./login/LogoutPage\";\nimport SignedRecordsPage from \"./signed-records/SignedRecordsPage\";\nimport AddRecordPage from \"./add-record/AddRecordPage\";\nimport SavedRecordsPage from \"./saved-records/SavedRecordsPage\";\nimport SettingsPage from \"./settings/SettingsPage\";\nimport FinderPage from \"./finder/FinderPage\";\nimport ReportPage from \"./finder/report/ReportPage\";\nimport Page404 from \"./Page404\";\n\nconst Routes = () => {\n  const user = getUser();\n  const admin = isAdmin();\n\n  /** Show the component only when the user is logged in\n   *  Otherwise, redirect the user to login page */\n  const Private = ({ component: Component, ...rest }) => {\n    if (!user) {\n      return <Redirect to=\"/login\" />;\n    }\n    return <Route {...rest} component={Component} />;\n  };\n\n  return (\n    <>\n      <Container>\n        <Switch>\n          {/* HomeRoute */}\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return getUser() ? (\n                <Redirect to=\"/records-to-sign\" component={RecordsToSignPage} />\n              ) : (\n                <Redirect to=\"/login\" component={LoginPage} />\n              );\n            }}\n          />\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/logout\" component={LogoutPage} />\n          <Private path=\"/records-to-sign\" component={RecordsToSignPage} />\n          <Private path=\"/signed-records\" component={SignedRecordsPage} />\n          {admin && (\n            <>\n              <Private path=\"/add-record\" component={AddRecordPage} />\n              <Private path=\"/saved-record\" component={SavedRecordsPage} />\n              <Private path=\"/settings\" component={SettingsPage} />\n              <Private path=\"/report\" component={ReportPage} />\n            </>\n          )}\n          <Route path=\"*\" component={Page404} />\n        </Switch>\n      </Container>\n      <div className=\"large-container\">\n        {admin && <Private path=\"/finder\" component={FinderPage} />}\n      </div>\n    </>\n  );\n};\n\nexport default Routes;\n","export default __webpack_public_path__ + \"static/media/logo.923adaad.png\";","import React from \"react\";\nimport { Navbar, Nav, NavLink } from \"react-bootstrap\";\nimport { getLanguage, getUser, isAdmin } from \"./utils/functions\";\nimport { wording } from \"./utils/wording\";\nimport { useLocation } from \"react-router\";\nimport logo from \"./images/logo.png\"\nconst Navigation = () => {\n  const user = getUser();\n  const admin = isAdmin();\n\n  const language = getLanguage();\n  let x = language === \"sk\" ? wording.sk : wording.en; // TODO languages !!!\n  x = x.navigation;\n\n  const LoginNav = () => (\n    <>\n      <NavLink href=\"/records-to-sign\">{x.recordsToSign}</NavLink>\n      <NavLink href=\"/signed-records\">{x.signedRecords}</NavLink>\n      {admin && (\n        <>\n          <NavLink href=\"/add-record\">{x.addRecord}</NavLink>\n          <NavLink href=\"/saved-record\">{x.savedRecords}</NavLink>\n          <NavLink href=\"/finder\">{x.finder}</NavLink>\n          <NavLink href=\"/settings\">{x.settings}</NavLink>\n        </>\n      )}\n      <NavLink href=\"/logout\">{x.logout}</NavLink>\n    </>\n  );\n\n  const LogoutNav = () => <NavLink href=\"/login\">{x.login}</NavLink>;\n\n  const Name = () => {\n    const name = user ? `${user.first_name} ${user.last_name}` : \"\";\n    return <span style={{ color: \"white\" }}>{name}</span>;\n  };\n\n  return (\n    <Navbar\n      expand=\"md\"\n      bg=\"dark\"\n      variant=\"dark\"\n      sticky=\"top\"\n      className=\"navigation\"\n    >\n      <Navbar.Brand href=\"/\">\n        <img\n          alt=\"logo\"\n          src={logo}\n          width=\"50\"\n          height=\"50\"\n          className=\"d-inline-block align-top\"\n        />\n      </Navbar.Brand>\n      <Name />\n      <Navbar.Toggle />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav\n          className=\"ml-auto\"\n          variant=\"pills\"\n          activeKey={useLocation().pathname}\n        >\n          {user ? <LoginNav /> : <LogoutNav />}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","class IdleTimer {\n\n  constructor({ timeout, onTimeout }) {\n    this.timeout = timeout;\n    this.onTimeout = onTimeout;\n\n    this.eventHandler = this.updateExpiredTime.bind(this);\n    this.tracker();\n    this.startInterval();\n  }\n\n  startInterval() {\n    this.updateExpiredTime();\n\n    this.interval = setInterval(() => {\n      const expiredTime = parseInt(localStorage.getItem(\"_expiredTime\"), 10);\n      if (expiredTime < Date.now()) {\n        if (this.onTimeout) {\n          this.onTimeout();\n          this.cleanUp();\n        }\n      }\n    }, 1000);\n  }\n\n  updateExpiredTime() {\n    if (this.timeoutTracker) {\n      clearTimeout(this.timeoutTracker);\n    }\n    this.timeoutTracker = setTimeout(() => {\n      localStorage.setItem(\"_expiredTime\", Date.now() + this.timeout * 1000);\n    }, 300);\n  }\n\n  tracker() {\n    window.addEventListener(\"mousemove\", this.eventHandler);\n    window.addEventListener(\"scroll\", this.eventHandler);\n    window.addEventListener(\"keydown\", this.eventHandler);\n  }\n\n  cleanUp() {\n    localStorage.removeItem(\"_expiredTime\");\n    clearInterval(this.interval);\n    window.removeEventListener(\"mousemove\", this.eventHandler);\n    window.removeEventListener(\"scroll\", this.eventHandler);\n    window.removeEventListener(\"keydown\", this.eventHandler);\n  }\n}\nexport default IdleTimer;\n","import React, { createContext, useEffect, useState } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Routes from \"./Routes\";\n\nimport Navigation from \"./Navigation.jsx\";\nimport { getUser, removeUser, getFetch, redirectTo } from \"./utils/functions\";\nimport IdleTimer from \"./utils/IdleTimer\";\n\nimport { comboFields, TIMEOUT } from \"./utils/data\";\n\nexport const PairContext = createContext(undefined);\n\nfunction App() {\n  const [pairs, setPairs] = useState({\n    branches: [],\n    divisions: [],\n    cities: [],\n    departments: [],\n  });\n\n  /** Load all branches, divisions etc. to easily find names for their ids */\n  useEffect(() => {\n    const _pairs = {};\n    comboFields.forEach((field) => {\n      getFetch(`/${field}`).then((data) => (_pairs[field] = data));\n    });\n    setPairs(_pairs);\n  }, []);\n\n  /** Set timer to logout not active user after TIMEOUT expired\n   *  onTimeOut the user will be logout and redirect to /login\n   *  - TIMEOUT can be changed in ./utils/data */\n  useEffect(() => {\n    const timer = new IdleTimer({\n      timeout: TIMEOUT,\n      onTimeout: () => {\n        if (getUser()) {\n          removeUser();\n          redirectTo(\"/login\");\n        }\n      },\n    });\n    return () => timer.cleanUp();\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <PairContext.Provider value={pairs}>\n        <Routes />\n      </PairContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './main.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}